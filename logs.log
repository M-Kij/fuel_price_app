2025-01-08 19:55:44,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 19:55:44,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 19:55:44,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 19:55:44,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 20:19:52,164:INFO:PyCaret RegressionExperiment
2025-01-08 20:19:52,164:INFO:Logging name: reg-default-name
2025-01-08 20:19:52,165:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 20:19:52,165:INFO:version 3.3.2
2025-01-08 20:19:52,165:INFO:Initializing setup()
2025-01-08 20:19:52,165:INFO:self.USI: 9ec4
2025-01-08 20:19:52,165:INFO:self._variable_keys: {'fold_generator', 'log_plots_param', 'n_jobs_param', 'X_test', 'X', 'exp_name_log', 'exp_id', 'seed', 'gpu_n_jobs_param', '_available_plots', 'y_train', 'fold_groups_param', 'data', 'gpu_param', 'USI', '_ml_usecase', 'target_param', 'logging_param', 'fold_shuffle_param', 'X_train', 'y', 'transform_target_param', 'idx', 'pipeline', 'memory', 'html_param', 'y_test'}
2025-01-08 20:19:52,165:INFO:Checking environment
2025-01-08 20:19:52,166:INFO:python_version: 3.11.11
2025-01-08 20:19:52,166:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 20:19:52,166:INFO:machine: AMD64
2025-01-08 20:19:52,166:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 20:19:52,168:INFO:Memory: svmem(total=6439919616, available=1120296960, percent=82.6, used=5319622656, free=1120296960)
2025-01-08 20:19:52,168:INFO:Physical Core: 4
2025-01-08 20:19:52,168:INFO:Logical Core: 4
2025-01-08 20:19:52,169:INFO:Checking libraries
2025-01-08 20:19:52,169:INFO:System:
2025-01-08 20:19:52,169:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 20:19:52,169:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 20:19:52,169:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 20:19:52,169:INFO:PyCaret required dependencies:
2025-01-08 20:19:53,069:INFO:                 pip: 24.2
2025-01-08 20:19:53,069:INFO:          setuptools: 75.1.0
2025-01-08 20:19:53,069:INFO:             pycaret: 3.3.2
2025-01-08 20:19:53,069:INFO:             IPython: 8.30.0
2025-01-08 20:19:53,069:INFO:          ipywidgets: 8.1.5
2025-01-08 20:19:53,069:INFO:                tqdm: 4.67.1
2025-01-08 20:19:53,069:INFO:               numpy: 1.26.4
2025-01-08 20:19:53,069:INFO:              pandas: 2.1.4
2025-01-08 20:19:53,069:INFO:              jinja2: 3.1.4
2025-01-08 20:19:53,069:INFO:               scipy: 1.11.4
2025-01-08 20:19:53,069:INFO:              joblib: 1.3.2
2025-01-08 20:19:53,070:INFO:             sklearn: 1.4.2
2025-01-08 20:19:53,070:INFO:                pyod: 2.0.3
2025-01-08 20:19:53,070:INFO:            imblearn: 0.13.0
2025-01-08 20:19:53,070:INFO:   category_encoders: 2.7.0
2025-01-08 20:19:53,070:INFO:            lightgbm: 4.5.0
2025-01-08 20:19:53,070:INFO:               numba: 0.60.0
2025-01-08 20:19:53,070:INFO:            requests: 2.32.3
2025-01-08 20:19:53,070:INFO:          matplotlib: 3.7.5
2025-01-08 20:19:53,070:INFO:          scikitplot: 0.3.7
2025-01-08 20:19:53,070:INFO:         yellowbrick: 1.5
2025-01-08 20:19:53,070:INFO:              plotly: 5.24.1
2025-01-08 20:19:53,070:INFO:    plotly-resampler: Not installed
2025-01-08 20:19:53,071:INFO:             kaleido: 0.2.1
2025-01-08 20:19:53,071:INFO:           schemdraw: 0.15
2025-01-08 20:19:53,071:INFO:         statsmodels: 0.14.4
2025-01-08 20:19:53,071:INFO:              sktime: 0.26.0
2025-01-08 20:19:53,071:INFO:               tbats: 1.1.3
2025-01-08 20:19:53,071:INFO:            pmdarima: 2.0.4
2025-01-08 20:19:53,071:INFO:              psutil: 5.9.0
2025-01-08 20:19:53,071:INFO:          markupsafe: 2.1.3
2025-01-08 20:19:53,071:INFO:             pickle5: Not installed
2025-01-08 20:19:53,071:INFO:         cloudpickle: 3.1.0
2025-01-08 20:19:53,072:INFO:         deprecation: 2.1.0
2025-01-08 20:19:53,072:INFO:              xxhash: 3.5.0
2025-01-08 20:19:53,072:INFO:           wurlitzer: Not installed
2025-01-08 20:19:53,072:INFO:PyCaret optional dependencies:
2025-01-08 20:19:53,096:INFO:                shap: Not installed
2025-01-08 20:19:53,097:INFO:           interpret: Not installed
2025-01-08 20:19:53,097:INFO:                umap: Not installed
2025-01-08 20:19:53,097:INFO:     ydata_profiling: Not installed
2025-01-08 20:19:53,097:INFO:  explainerdashboard: Not installed
2025-01-08 20:19:53,097:INFO:             autoviz: Not installed
2025-01-08 20:19:53,097:INFO:           fairlearn: Not installed
2025-01-08 20:19:53,097:INFO:          deepchecks: Not installed
2025-01-08 20:19:53,097:INFO:             xgboost: Not installed
2025-01-08 20:19:53,097:INFO:            catboost: Not installed
2025-01-08 20:19:53,097:INFO:              kmodes: Not installed
2025-01-08 20:19:53,097:INFO:             mlxtend: Not installed
2025-01-08 20:19:53,097:INFO:       statsforecast: Not installed
2025-01-08 20:19:53,098:INFO:        tune_sklearn: Not installed
2025-01-08 20:19:53,098:INFO:                 ray: Not installed
2025-01-08 20:19:53,098:INFO:            hyperopt: Not installed
2025-01-08 20:19:53,098:INFO:              optuna: Not installed
2025-01-08 20:19:53,098:INFO:               skopt: Not installed
2025-01-08 20:19:53,098:INFO:              mlflow: Not installed
2025-01-08 20:19:53,098:INFO:              gradio: Not installed
2025-01-08 20:19:53,098:INFO:             fastapi: Not installed
2025-01-08 20:19:53,098:INFO:             uvicorn: Not installed
2025-01-08 20:19:53,098:INFO:              m2cgen: Not installed
2025-01-08 20:19:53,098:INFO:           evidently: Not installed
2025-01-08 20:19:53,099:INFO:               fugue: Not installed
2025-01-08 20:19:53,099:INFO:           streamlit: Not installed
2025-01-08 20:19:53,099:INFO:             prophet: Not installed
2025-01-08 20:19:53,099:INFO:None
2025-01-08 20:19:53,099:INFO:Set up data.
2025-01-08 20:19:53,141:INFO:Set up folding strategy.
2025-01-08 20:19:53,141:INFO:Set up train/test split.
2025-01-08 20:19:53,223:INFO:Set up index.
2025-01-08 20:19:53,228:INFO:Assigning column types.
2025-01-08 20:19:53,237:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 20:19:53,237:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,248:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:53,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:53,491:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,501:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,511:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:53,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:53,739:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 20:19:53,749:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,760:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:53,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:53,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,000:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,011:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,238:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,240:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 20:19:54,261:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,387:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,510:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,743:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 20:19:54,890:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:54,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:54,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,141:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:55,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:19:55,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,242:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 20:19:55,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:55,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,641:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:19:55,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,744:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 20:19:55,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:55,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:56,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:56,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:56,255:INFO:Preparing preprocessing pipeline...
2025-01-08 20:19:56,256:INFO:Set up simple imputation.
2025-01-08 20:19:56,261:INFO:Set up encoding of categorical features.
2025-01-08 20:19:56,262:INFO:Set up column name cleaning.
2025-01-08 20:19:56,489:INFO:Finished creating preprocessing pipeline.
2025-01-08 20:19:56,501:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN', 'super95'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Date'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date'],
                                    transformer=TargetEncoder(cols=['Date'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 20:19:56,502:INFO:Creating final display dataframe.
2025-01-08 20:19:56,822:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 5)
4        Transformed data shape         (7671, 5)
5   Transformed train set shape         (5369, 5)
6    Transformed test set shape         (2302, 5)
7              Numeric features                 3
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              9ec4
2025-01-08 20:19:57,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:57,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:57,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:57,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:19:57,417:INFO:setup() successfully completed in 5.27s...............
2025-01-08 20:20:42,327:INFO:Initializing compare_models()
2025-01-08 20:20:42,328:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 20:20:42,328:INFO:Checking exceptions
2025-01-08 20:20:42,331:INFO:Preparing display monitor
2025-01-08 20:20:42,362:INFO:Initializing Linear Regression
2025-01-08 20:20:42,362:INFO:Total runtime is 0.0 minutes
2025-01-08 20:20:42,366:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:42,367:INFO:Initializing create_model()
2025-01-08 20:20:42,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:42,367:INFO:Checking exceptions
2025-01-08 20:20:42,370:INFO:Importing libraries
2025-01-08 20:20:42,370:INFO:Copying training dataset
2025-01-08 20:20:42,380:INFO:Defining folds
2025-01-08 20:20:42,380:INFO:Declaring metric variables
2025-01-08 20:20:42,384:INFO:Importing untrained model
2025-01-08 20:20:42,389:INFO:Linear Regression Imported successfully
2025-01-08 20:20:42,400:INFO:Starting cross validation
2025-01-08 20:20:42,451:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:48,901:INFO:Calculating mean and std
2025-01-08 20:20:48,903:INFO:Creating metrics dataframe
2025-01-08 20:20:48,907:INFO:Uploading results into container
2025-01-08 20:20:48,908:INFO:Uploading model into container now
2025-01-08 20:20:48,908:INFO:_master_model_container: 1
2025-01-08 20:20:48,908:INFO:_display_container: 2
2025-01-08 20:20:48,909:INFO:LinearRegression(n_jobs=-1)
2025-01-08 20:20:48,909:INFO:create_model() successfully completed......................................
2025-01-08 20:20:49,147:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:49,147:INFO:Creating metrics dataframe
2025-01-08 20:20:49,157:INFO:Initializing Lasso Regression
2025-01-08 20:20:49,157:INFO:Total runtime is 0.11326339244842529 minutes
2025-01-08 20:20:49,161:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:49,162:INFO:Initializing create_model()
2025-01-08 20:20:49,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:49,162:INFO:Checking exceptions
2025-01-08 20:20:49,162:INFO:Importing libraries
2025-01-08 20:20:49,163:INFO:Copying training dataset
2025-01-08 20:20:49,169:INFO:Defining folds
2025-01-08 20:20:49,170:INFO:Declaring metric variables
2025-01-08 20:20:49,174:INFO:Importing untrained model
2025-01-08 20:20:49,179:INFO:Lasso Regression Imported successfully
2025-01-08 20:20:49,191:INFO:Starting cross validation
2025-01-08 20:20:49,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:49,476:INFO:Calculating mean and std
2025-01-08 20:20:49,478:INFO:Creating metrics dataframe
2025-01-08 20:20:49,481:INFO:Uploading results into container
2025-01-08 20:20:49,482:INFO:Uploading model into container now
2025-01-08 20:20:49,482:INFO:_master_model_container: 2
2025-01-08 20:20:49,482:INFO:_display_container: 2
2025-01-08 20:20:49,482:INFO:Lasso(random_state=123)
2025-01-08 20:20:49,483:INFO:create_model() successfully completed......................................
2025-01-08 20:20:49,590:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:49,590:INFO:Creating metrics dataframe
2025-01-08 20:20:49,603:INFO:Initializing Ridge Regression
2025-01-08 20:20:49,603:INFO:Total runtime is 0.1206918478012085 minutes
2025-01-08 20:20:49,607:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:49,607:INFO:Initializing create_model()
2025-01-08 20:20:49,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:49,607:INFO:Checking exceptions
2025-01-08 20:20:49,607:INFO:Importing libraries
2025-01-08 20:20:49,607:INFO:Copying training dataset
2025-01-08 20:20:49,615:INFO:Defining folds
2025-01-08 20:20:49,615:INFO:Declaring metric variables
2025-01-08 20:20:49,620:INFO:Importing untrained model
2025-01-08 20:20:49,625:INFO:Ridge Regression Imported successfully
2025-01-08 20:20:49,635:INFO:Starting cross validation
2025-01-08 20:20:49,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:49,923:INFO:Calculating mean and std
2025-01-08 20:20:49,925:INFO:Creating metrics dataframe
2025-01-08 20:20:49,927:INFO:Uploading results into container
2025-01-08 20:20:49,928:INFO:Uploading model into container now
2025-01-08 20:20:49,928:INFO:_master_model_container: 3
2025-01-08 20:20:49,928:INFO:_display_container: 2
2025-01-08 20:20:49,928:INFO:Ridge(random_state=123)
2025-01-08 20:20:49,929:INFO:create_model() successfully completed......................................
2025-01-08 20:20:50,035:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:50,035:INFO:Creating metrics dataframe
2025-01-08 20:20:50,045:INFO:Initializing Elastic Net
2025-01-08 20:20:50,045:INFO:Total runtime is 0.1280538519223531 minutes
2025-01-08 20:20:50,050:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:50,051:INFO:Initializing create_model()
2025-01-08 20:20:50,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:50,051:INFO:Checking exceptions
2025-01-08 20:20:50,051:INFO:Importing libraries
2025-01-08 20:20:50,051:INFO:Copying training dataset
2025-01-08 20:20:50,057:INFO:Defining folds
2025-01-08 20:20:50,057:INFO:Declaring metric variables
2025-01-08 20:20:50,062:INFO:Importing untrained model
2025-01-08 20:20:50,069:INFO:Elastic Net Imported successfully
2025-01-08 20:20:50,077:INFO:Starting cross validation
2025-01-08 20:20:50,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:50,349:INFO:Calculating mean and std
2025-01-08 20:20:50,350:INFO:Creating metrics dataframe
2025-01-08 20:20:50,353:INFO:Uploading results into container
2025-01-08 20:20:50,353:INFO:Uploading model into container now
2025-01-08 20:20:50,354:INFO:_master_model_container: 4
2025-01-08 20:20:50,354:INFO:_display_container: 2
2025-01-08 20:20:50,354:INFO:ElasticNet(random_state=123)
2025-01-08 20:20:50,354:INFO:create_model() successfully completed......................................
2025-01-08 20:20:50,459:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:50,459:INFO:Creating metrics dataframe
2025-01-08 20:20:50,469:INFO:Initializing Least Angle Regression
2025-01-08 20:20:50,470:INFO:Total runtime is 0.13513304392496744 minutes
2025-01-08 20:20:50,473:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:50,474:INFO:Initializing create_model()
2025-01-08 20:20:50,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:50,474:INFO:Checking exceptions
2025-01-08 20:20:50,474:INFO:Importing libraries
2025-01-08 20:20:50,474:INFO:Copying training dataset
2025-01-08 20:20:50,480:INFO:Defining folds
2025-01-08 20:20:50,482:INFO:Declaring metric variables
2025-01-08 20:20:50,486:INFO:Importing untrained model
2025-01-08 20:20:50,505:INFO:Least Angle Regression Imported successfully
2025-01-08 20:20:50,513:INFO:Starting cross validation
2025-01-08 20:20:50,515:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:50,802:INFO:Calculating mean and std
2025-01-08 20:20:50,804:INFO:Creating metrics dataframe
2025-01-08 20:20:50,806:INFO:Uploading results into container
2025-01-08 20:20:50,807:INFO:Uploading model into container now
2025-01-08 20:20:50,807:INFO:_master_model_container: 5
2025-01-08 20:20:50,807:INFO:_display_container: 2
2025-01-08 20:20:50,807:INFO:Lars(random_state=123)
2025-01-08 20:20:50,808:INFO:create_model() successfully completed......................................
2025-01-08 20:20:50,913:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:50,913:INFO:Creating metrics dataframe
2025-01-08 20:20:50,924:INFO:Initializing Lasso Least Angle Regression
2025-01-08 20:20:50,924:INFO:Total runtime is 0.14271159172058104 minutes
2025-01-08 20:20:50,928:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:50,928:INFO:Initializing create_model()
2025-01-08 20:20:50,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:50,928:INFO:Checking exceptions
2025-01-08 20:20:50,929:INFO:Importing libraries
2025-01-08 20:20:50,929:INFO:Copying training dataset
2025-01-08 20:20:50,936:INFO:Defining folds
2025-01-08 20:20:50,936:INFO:Declaring metric variables
2025-01-08 20:20:50,940:INFO:Importing untrained model
2025-01-08 20:20:50,945:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 20:20:50,957:INFO:Starting cross validation
2025-01-08 20:20:50,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:51,239:INFO:Calculating mean and std
2025-01-08 20:20:51,240:INFO:Creating metrics dataframe
2025-01-08 20:20:51,243:INFO:Uploading results into container
2025-01-08 20:20:51,243:INFO:Uploading model into container now
2025-01-08 20:20:51,244:INFO:_master_model_container: 6
2025-01-08 20:20:51,244:INFO:_display_container: 2
2025-01-08 20:20:51,244:INFO:LassoLars(random_state=123)
2025-01-08 20:20:51,244:INFO:create_model() successfully completed......................................
2025-01-08 20:20:51,350:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:51,351:INFO:Creating metrics dataframe
2025-01-08 20:20:51,361:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 20:20:51,362:INFO:Total runtime is 0.15000652869542438 minutes
2025-01-08 20:20:51,366:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:51,366:INFO:Initializing create_model()
2025-01-08 20:20:51,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:51,367:INFO:Checking exceptions
2025-01-08 20:20:51,367:INFO:Importing libraries
2025-01-08 20:20:51,367:INFO:Copying training dataset
2025-01-08 20:20:51,374:INFO:Defining folds
2025-01-08 20:20:51,374:INFO:Declaring metric variables
2025-01-08 20:20:51,378:INFO:Importing untrained model
2025-01-08 20:20:51,383:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 20:20:51,395:INFO:Starting cross validation
2025-01-08 20:20:51,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:51,669:INFO:Calculating mean and std
2025-01-08 20:20:51,670:INFO:Creating metrics dataframe
2025-01-08 20:20:51,673:INFO:Uploading results into container
2025-01-08 20:20:51,673:INFO:Uploading model into container now
2025-01-08 20:20:51,674:INFO:_master_model_container: 7
2025-01-08 20:20:51,674:INFO:_display_container: 2
2025-01-08 20:20:51,674:INFO:OrthogonalMatchingPursuit()
2025-01-08 20:20:51,674:INFO:create_model() successfully completed......................................
2025-01-08 20:20:51,778:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:51,779:INFO:Creating metrics dataframe
2025-01-08 20:20:51,791:INFO:Initializing Bayesian Ridge
2025-01-08 20:20:51,791:INFO:Total runtime is 0.15715196530024209 minutes
2025-01-08 20:20:51,795:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:51,795:INFO:Initializing create_model()
2025-01-08 20:20:51,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:51,795:INFO:Checking exceptions
2025-01-08 20:20:51,796:INFO:Importing libraries
2025-01-08 20:20:51,796:INFO:Copying training dataset
2025-01-08 20:20:51,803:INFO:Defining folds
2025-01-08 20:20:51,803:INFO:Declaring metric variables
2025-01-08 20:20:51,807:INFO:Importing untrained model
2025-01-08 20:20:51,812:INFO:Bayesian Ridge Imported successfully
2025-01-08 20:20:51,823:INFO:Starting cross validation
2025-01-08 20:20:51,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:52,103:INFO:Calculating mean and std
2025-01-08 20:20:52,104:INFO:Creating metrics dataframe
2025-01-08 20:20:52,107:INFO:Uploading results into container
2025-01-08 20:20:52,107:INFO:Uploading model into container now
2025-01-08 20:20:52,108:INFO:_master_model_container: 8
2025-01-08 20:20:52,108:INFO:_display_container: 2
2025-01-08 20:20:52,108:INFO:BayesianRidge()
2025-01-08 20:20:52,108:INFO:create_model() successfully completed......................................
2025-01-08 20:20:52,213:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:52,213:INFO:Creating metrics dataframe
2025-01-08 20:20:52,225:INFO:Initializing Passive Aggressive Regressor
2025-01-08 20:20:52,225:INFO:Total runtime is 0.16439776817957558 minutes
2025-01-08 20:20:52,229:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:52,229:INFO:Initializing create_model()
2025-01-08 20:20:52,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:52,230:INFO:Checking exceptions
2025-01-08 20:20:52,230:INFO:Importing libraries
2025-01-08 20:20:52,230:INFO:Copying training dataset
2025-01-08 20:20:52,237:INFO:Defining folds
2025-01-08 20:20:52,238:INFO:Declaring metric variables
2025-01-08 20:20:52,241:INFO:Importing untrained model
2025-01-08 20:20:52,247:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 20:20:52,258:INFO:Starting cross validation
2025-01-08 20:20:52,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:52,556:INFO:Calculating mean and std
2025-01-08 20:20:52,557:INFO:Creating metrics dataframe
2025-01-08 20:20:52,560:INFO:Uploading results into container
2025-01-08 20:20:52,560:INFO:Uploading model into container now
2025-01-08 20:20:52,561:INFO:_master_model_container: 9
2025-01-08 20:20:52,561:INFO:_display_container: 2
2025-01-08 20:20:52,561:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 20:20:52,561:INFO:create_model() successfully completed......................................
2025-01-08 20:20:52,668:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:52,668:INFO:Creating metrics dataframe
2025-01-08 20:20:52,680:INFO:Initializing Huber Regressor
2025-01-08 20:20:52,680:INFO:Total runtime is 0.17197608550389606 minutes
2025-01-08 20:20:52,685:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:52,685:INFO:Initializing create_model()
2025-01-08 20:20:52,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:52,686:INFO:Checking exceptions
2025-01-08 20:20:52,686:INFO:Importing libraries
2025-01-08 20:20:52,686:INFO:Copying training dataset
2025-01-08 20:20:52,692:INFO:Defining folds
2025-01-08 20:20:52,692:INFO:Declaring metric variables
2025-01-08 20:20:52,696:INFO:Importing untrained model
2025-01-08 20:20:52,702:INFO:Huber Regressor Imported successfully
2025-01-08 20:20:52,711:INFO:Starting cross validation
2025-01-08 20:20:52,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:52,901:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-01-08 20:20:53,122:INFO:Calculating mean and std
2025-01-08 20:20:53,123:INFO:Creating metrics dataframe
2025-01-08 20:20:53,126:INFO:Uploading results into container
2025-01-08 20:20:53,127:INFO:Uploading model into container now
2025-01-08 20:20:53,127:INFO:_master_model_container: 10
2025-01-08 20:20:53,128:INFO:_display_container: 2
2025-01-08 20:20:53,128:INFO:HuberRegressor()
2025-01-08 20:20:53,128:INFO:create_model() successfully completed......................................
2025-01-08 20:20:53,231:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:53,231:INFO:Creating metrics dataframe
2025-01-08 20:20:53,244:INFO:Initializing K Neighbors Regressor
2025-01-08 20:20:53,244:INFO:Total runtime is 0.1813704212506612 minutes
2025-01-08 20:20:53,249:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:53,250:INFO:Initializing create_model()
2025-01-08 20:20:53,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:53,250:INFO:Checking exceptions
2025-01-08 20:20:53,250:INFO:Importing libraries
2025-01-08 20:20:53,250:INFO:Copying training dataset
2025-01-08 20:20:53,256:INFO:Defining folds
2025-01-08 20:20:53,257:INFO:Declaring metric variables
2025-01-08 20:20:53,261:INFO:Importing untrained model
2025-01-08 20:20:53,266:INFO:K Neighbors Regressor Imported successfully
2025-01-08 20:20:53,276:INFO:Starting cross validation
2025-01-08 20:20:53,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:53,622:INFO:Calculating mean and std
2025-01-08 20:20:53,624:INFO:Creating metrics dataframe
2025-01-08 20:20:53,626:INFO:Uploading results into container
2025-01-08 20:20:53,627:INFO:Uploading model into container now
2025-01-08 20:20:53,627:INFO:_master_model_container: 11
2025-01-08 20:20:53,627:INFO:_display_container: 2
2025-01-08 20:20:53,628:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 20:20:53,628:INFO:create_model() successfully completed......................................
2025-01-08 20:20:53,730:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:53,730:INFO:Creating metrics dataframe
2025-01-08 20:20:53,744:INFO:Initializing Decision Tree Regressor
2025-01-08 20:20:53,744:INFO:Total runtime is 0.1897150079409281 minutes
2025-01-08 20:20:53,748:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:53,749:INFO:Initializing create_model()
2025-01-08 20:20:53,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:53,749:INFO:Checking exceptions
2025-01-08 20:20:53,749:INFO:Importing libraries
2025-01-08 20:20:53,749:INFO:Copying training dataset
2025-01-08 20:20:53,756:INFO:Defining folds
2025-01-08 20:20:53,756:INFO:Declaring metric variables
2025-01-08 20:20:53,761:INFO:Importing untrained model
2025-01-08 20:20:53,765:INFO:Decision Tree Regressor Imported successfully
2025-01-08 20:20:53,776:INFO:Starting cross validation
2025-01-08 20:20:53,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:54,121:INFO:Calculating mean and std
2025-01-08 20:20:54,122:INFO:Creating metrics dataframe
2025-01-08 20:20:54,125:INFO:Uploading results into container
2025-01-08 20:20:54,125:INFO:Uploading model into container now
2025-01-08 20:20:54,126:INFO:_master_model_container: 12
2025-01-08 20:20:54,126:INFO:_display_container: 2
2025-01-08 20:20:54,126:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 20:20:54,126:INFO:create_model() successfully completed......................................
2025-01-08 20:20:54,230:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:54,230:INFO:Creating metrics dataframe
2025-01-08 20:20:54,244:INFO:Initializing Random Forest Regressor
2025-01-08 20:20:54,244:INFO:Total runtime is 0.19804273446400958 minutes
2025-01-08 20:20:54,248:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:54,249:INFO:Initializing create_model()
2025-01-08 20:20:54,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:54,249:INFO:Checking exceptions
2025-01-08 20:20:54,249:INFO:Importing libraries
2025-01-08 20:20:54,249:INFO:Copying training dataset
2025-01-08 20:20:54,256:INFO:Defining folds
2025-01-08 20:20:54,256:INFO:Declaring metric variables
2025-01-08 20:20:54,261:INFO:Importing untrained model
2025-01-08 20:20:54,266:INFO:Random Forest Regressor Imported successfully
2025-01-08 20:20:54,276:INFO:Starting cross validation
2025-01-08 20:20:54,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:20:59,133:INFO:Calculating mean and std
2025-01-08 20:20:59,134:INFO:Creating metrics dataframe
2025-01-08 20:20:59,137:INFO:Uploading results into container
2025-01-08 20:20:59,138:INFO:Uploading model into container now
2025-01-08 20:20:59,138:INFO:_master_model_container: 13
2025-01-08 20:20:59,139:INFO:_display_container: 2
2025-01-08 20:20:59,139:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:20:59,139:INFO:create_model() successfully completed......................................
2025-01-08 20:20:59,242:INFO:SubProcess create_model() end ==================================
2025-01-08 20:20:59,243:INFO:Creating metrics dataframe
2025-01-08 20:20:59,256:INFO:Initializing Extra Trees Regressor
2025-01-08 20:20:59,257:INFO:Total runtime is 0.28158438205718994 minutes
2025-01-08 20:20:59,261:INFO:SubProcess create_model() called ==================================
2025-01-08 20:20:59,261:INFO:Initializing create_model()
2025-01-08 20:20:59,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:20:59,262:INFO:Checking exceptions
2025-01-08 20:20:59,262:INFO:Importing libraries
2025-01-08 20:20:59,262:INFO:Copying training dataset
2025-01-08 20:20:59,268:INFO:Defining folds
2025-01-08 20:20:59,269:INFO:Declaring metric variables
2025-01-08 20:20:59,273:INFO:Importing untrained model
2025-01-08 20:20:59,279:INFO:Extra Trees Regressor Imported successfully
2025-01-08 20:20:59,309:INFO:Starting cross validation
2025-01-08 20:20:59,310:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:21:01,774:INFO:Calculating mean and std
2025-01-08 20:21:01,775:INFO:Creating metrics dataframe
2025-01-08 20:21:01,778:INFO:Uploading results into container
2025-01-08 20:21:01,778:INFO:Uploading model into container now
2025-01-08 20:21:01,779:INFO:_master_model_container: 14
2025-01-08 20:21:01,779:INFO:_display_container: 2
2025-01-08 20:21:01,779:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:21:01,780:INFO:create_model() successfully completed......................................
2025-01-08 20:21:01,884:INFO:SubProcess create_model() end ==================================
2025-01-08 20:21:01,885:INFO:Creating metrics dataframe
2025-01-08 20:21:01,900:INFO:Initializing AdaBoost Regressor
2025-01-08 20:21:01,900:INFO:Total runtime is 0.3256420254707336 minutes
2025-01-08 20:21:01,904:INFO:SubProcess create_model() called ==================================
2025-01-08 20:21:01,904:INFO:Initializing create_model()
2025-01-08 20:21:01,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:21:01,904:INFO:Checking exceptions
2025-01-08 20:21:01,904:INFO:Importing libraries
2025-01-08 20:21:01,904:INFO:Copying training dataset
2025-01-08 20:21:01,912:INFO:Defining folds
2025-01-08 20:21:01,912:INFO:Declaring metric variables
2025-01-08 20:21:01,916:INFO:Importing untrained model
2025-01-08 20:21:01,921:INFO:AdaBoost Regressor Imported successfully
2025-01-08 20:21:01,931:INFO:Starting cross validation
2025-01-08 20:21:01,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:21:02,799:INFO:Calculating mean and std
2025-01-08 20:21:02,801:INFO:Creating metrics dataframe
2025-01-08 20:21:02,803:INFO:Uploading results into container
2025-01-08 20:21:02,804:INFO:Uploading model into container now
2025-01-08 20:21:02,804:INFO:_master_model_container: 15
2025-01-08 20:21:02,804:INFO:_display_container: 2
2025-01-08 20:21:02,804:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 20:21:02,804:INFO:create_model() successfully completed......................................
2025-01-08 20:21:02,907:INFO:SubProcess create_model() end ==================================
2025-01-08 20:21:02,907:INFO:Creating metrics dataframe
2025-01-08 20:21:02,922:INFO:Initializing Gradient Boosting Regressor
2025-01-08 20:21:02,922:INFO:Total runtime is 0.3426815907160441 minutes
2025-01-08 20:21:02,926:INFO:SubProcess create_model() called ==================================
2025-01-08 20:21:02,926:INFO:Initializing create_model()
2025-01-08 20:21:02,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:21:02,926:INFO:Checking exceptions
2025-01-08 20:21:02,927:INFO:Importing libraries
2025-01-08 20:21:02,927:INFO:Copying training dataset
2025-01-08 20:21:02,933:INFO:Defining folds
2025-01-08 20:21:02,933:INFO:Declaring metric variables
2025-01-08 20:21:02,937:INFO:Importing untrained model
2025-01-08 20:21:02,941:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 20:21:02,951:INFO:Starting cross validation
2025-01-08 20:21:02,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:21:05,388:INFO:Calculating mean and std
2025-01-08 20:21:05,390:INFO:Creating metrics dataframe
2025-01-08 20:21:05,392:INFO:Uploading results into container
2025-01-08 20:21:05,393:INFO:Uploading model into container now
2025-01-08 20:21:05,394:INFO:_master_model_container: 16
2025-01-08 20:21:05,394:INFO:_display_container: 2
2025-01-08 20:21:05,395:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 20:21:05,395:INFO:create_model() successfully completed......................................
2025-01-08 20:21:05,499:INFO:SubProcess create_model() end ==================================
2025-01-08 20:21:05,499:INFO:Creating metrics dataframe
2025-01-08 20:21:05,515:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 20:21:05,515:INFO:Total runtime is 0.3858876585960388 minutes
2025-01-08 20:21:05,519:INFO:SubProcess create_model() called ==================================
2025-01-08 20:21:05,520:INFO:Initializing create_model()
2025-01-08 20:21:05,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:21:05,520:INFO:Checking exceptions
2025-01-08 20:21:05,520:INFO:Importing libraries
2025-01-08 20:21:05,520:INFO:Copying training dataset
2025-01-08 20:21:05,526:INFO:Defining folds
2025-01-08 20:21:05,527:INFO:Declaring metric variables
2025-01-08 20:21:05,531:INFO:Importing untrained model
2025-01-08 20:21:05,536:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 20:21:05,547:INFO:Starting cross validation
2025-01-08 20:21:05,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:21:06,536:INFO:Calculating mean and std
2025-01-08 20:21:06,538:INFO:Creating metrics dataframe
2025-01-08 20:21:06,541:INFO:Uploading results into container
2025-01-08 20:21:06,542:INFO:Uploading model into container now
2025-01-08 20:21:06,542:INFO:_master_model_container: 17
2025-01-08 20:21:06,542:INFO:_display_container: 2
2025-01-08 20:21:06,543:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:21:06,543:INFO:create_model() successfully completed......................................
2025-01-08 20:21:06,649:INFO:SubProcess create_model() end ==================================
2025-01-08 20:21:06,650:INFO:Creating metrics dataframe
2025-01-08 20:21:06,665:INFO:Initializing Dummy Regressor
2025-01-08 20:21:06,665:INFO:Total runtime is 0.4050585667292277 minutes
2025-01-08 20:21:06,669:INFO:SubProcess create_model() called ==================================
2025-01-08 20:21:06,669:INFO:Initializing create_model()
2025-01-08 20:21:06,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E6B6B7010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:21:06,669:INFO:Checking exceptions
2025-01-08 20:21:06,670:INFO:Importing libraries
2025-01-08 20:21:06,670:INFO:Copying training dataset
2025-01-08 20:21:06,676:INFO:Defining folds
2025-01-08 20:21:06,676:INFO:Declaring metric variables
2025-01-08 20:21:06,681:INFO:Importing untrained model
2025-01-08 20:21:06,685:INFO:Dummy Regressor Imported successfully
2025-01-08 20:21:06,696:INFO:Starting cross validation
2025-01-08 20:21:06,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:21:06,977:INFO:Calculating mean and std
2025-01-08 20:21:06,979:INFO:Creating metrics dataframe
2025-01-08 20:21:06,981:INFO:Uploading results into container
2025-01-08 20:21:06,982:INFO:Uploading model into container now
2025-01-08 20:21:06,982:INFO:_master_model_container: 18
2025-01-08 20:21:06,983:INFO:_display_container: 2
2025-01-08 20:21:06,983:INFO:DummyRegressor()
2025-01-08 20:21:06,983:INFO:create_model() successfully completed......................................
2025-01-08 20:21:07,089:INFO:SubProcess create_model() end ==================================
2025-01-08 20:21:07,089:INFO:Creating metrics dataframe
2025-01-08 20:21:07,115:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 20:21:07,125:INFO:Initializing create_model()
2025-01-08 20:21:07,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E6B058B50>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:21:07,126:INFO:Checking exceptions
2025-01-08 20:21:07,128:INFO:Importing libraries
2025-01-08 20:21:07,128:INFO:Copying training dataset
2025-01-08 20:21:07,134:INFO:Defining folds
2025-01-08 20:21:07,134:INFO:Declaring metric variables
2025-01-08 20:21:07,134:INFO:Importing untrained model
2025-01-08 20:21:07,134:INFO:Declaring custom model
2025-01-08 20:21:07,135:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 20:21:07,137:INFO:Cross validation set to False
2025-01-08 20:21:07,137:INFO:Fitting Model
2025-01-08 20:21:07,212:INFO:OrthogonalMatchingPursuit()
2025-01-08 20:21:07,212:INFO:create_model() successfully completed......................................
2025-01-08 20:21:07,354:INFO:_master_model_container: 18
2025-01-08 20:21:07,354:INFO:_display_container: 2
2025-01-08 20:21:07,355:INFO:OrthogonalMatchingPursuit()
2025-01-08 20:21:07,355:INFO:compare_models() successfully completed......................................
2025-01-08 20:36:31,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 20:36:31,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 20:36:31,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 20:36:31,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 20:39:45,394:INFO:PyCaret RegressionExperiment
2025-01-08 20:39:45,394:INFO:Logging name: reg-default-name
2025-01-08 20:39:45,394:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 20:39:45,394:INFO:version 3.3.2
2025-01-08 20:39:45,394:INFO:Initializing setup()
2025-01-08 20:39:45,394:INFO:self.USI: daef
2025-01-08 20:39:45,395:INFO:self._variable_keys: {'memory', 'y_test', 'exp_id', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'X_train', 'target_param', 'gpu_param', 'y_train', 'pipeline', 'USI', 'fold_shuffle_param', 'X', 'logging_param', 'gpu_n_jobs_param', 'fold_generator', 'X_test', 'data', 'html_param', '_available_plots', 'y', 'seed', 'idx', 'exp_name_log', 'transform_target_param', 'n_jobs_param'}
2025-01-08 20:39:45,395:INFO:Checking environment
2025-01-08 20:39:45,395:INFO:python_version: 3.11.11
2025-01-08 20:39:45,395:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 20:39:45,395:INFO:machine: AMD64
2025-01-08 20:39:45,395:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 20:39:45,397:INFO:Memory: svmem(total=6439919616, available=986574848, percent=84.7, used=5453344768, free=986574848)
2025-01-08 20:39:45,397:INFO:Physical Core: 4
2025-01-08 20:39:45,397:INFO:Logical Core: 4
2025-01-08 20:39:45,397:INFO:Checking libraries
2025-01-08 20:39:45,397:INFO:System:
2025-01-08 20:39:45,397:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 20:39:45,397:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 20:39:45,397:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 20:39:45,397:INFO:PyCaret required dependencies:
2025-01-08 20:39:45,451:INFO:                 pip: 24.2
2025-01-08 20:39:45,452:INFO:          setuptools: 75.1.0
2025-01-08 20:39:45,452:INFO:             pycaret: 3.3.2
2025-01-08 20:39:45,452:INFO:             IPython: 8.30.0
2025-01-08 20:39:45,452:INFO:          ipywidgets: 8.1.5
2025-01-08 20:39:45,452:INFO:                tqdm: 4.67.1
2025-01-08 20:39:45,452:INFO:               numpy: 1.26.4
2025-01-08 20:39:45,452:INFO:              pandas: 2.1.4
2025-01-08 20:39:45,452:INFO:              jinja2: 3.1.4
2025-01-08 20:39:45,452:INFO:               scipy: 1.11.4
2025-01-08 20:39:45,452:INFO:              joblib: 1.3.2
2025-01-08 20:39:45,452:INFO:             sklearn: 1.4.2
2025-01-08 20:39:45,452:INFO:                pyod: 2.0.3
2025-01-08 20:39:45,453:INFO:            imblearn: 0.13.0
2025-01-08 20:39:45,453:INFO:   category_encoders: 2.7.0
2025-01-08 20:39:45,453:INFO:            lightgbm: 4.5.0
2025-01-08 20:39:45,453:INFO:               numba: 0.60.0
2025-01-08 20:39:45,453:INFO:            requests: 2.32.3
2025-01-08 20:39:45,453:INFO:          matplotlib: 3.7.5
2025-01-08 20:39:45,453:INFO:          scikitplot: 0.3.7
2025-01-08 20:39:45,453:INFO:         yellowbrick: 1.5
2025-01-08 20:39:45,453:INFO:              plotly: 5.24.1
2025-01-08 20:39:45,453:INFO:    plotly-resampler: Not installed
2025-01-08 20:39:45,453:INFO:             kaleido: 0.2.1
2025-01-08 20:39:45,453:INFO:           schemdraw: 0.15
2025-01-08 20:39:45,454:INFO:         statsmodels: 0.14.4
2025-01-08 20:39:45,454:INFO:              sktime: 0.26.0
2025-01-08 20:39:45,454:INFO:               tbats: 1.1.3
2025-01-08 20:39:45,454:INFO:            pmdarima: 2.0.4
2025-01-08 20:39:45,454:INFO:              psutil: 5.9.0
2025-01-08 20:39:45,454:INFO:          markupsafe: 2.1.3
2025-01-08 20:39:45,454:INFO:             pickle5: Not installed
2025-01-08 20:39:45,454:INFO:         cloudpickle: 3.1.0
2025-01-08 20:39:45,454:INFO:         deprecation: 2.1.0
2025-01-08 20:39:45,454:INFO:              xxhash: 3.5.0
2025-01-08 20:39:45,454:INFO:           wurlitzer: Not installed
2025-01-08 20:39:45,454:INFO:PyCaret optional dependencies:
2025-01-08 20:39:45,495:INFO:                shap: Not installed
2025-01-08 20:39:45,495:INFO:           interpret: Not installed
2025-01-08 20:39:45,495:INFO:                umap: Not installed
2025-01-08 20:39:45,495:INFO:     ydata_profiling: Not installed
2025-01-08 20:39:45,495:INFO:  explainerdashboard: Not installed
2025-01-08 20:39:45,495:INFO:             autoviz: Not installed
2025-01-08 20:39:45,495:INFO:           fairlearn: Not installed
2025-01-08 20:39:45,495:INFO:          deepchecks: Not installed
2025-01-08 20:39:45,495:INFO:             xgboost: Not installed
2025-01-08 20:39:45,495:INFO:            catboost: Not installed
2025-01-08 20:39:45,495:INFO:              kmodes: Not installed
2025-01-08 20:39:45,495:INFO:             mlxtend: Not installed
2025-01-08 20:39:45,496:INFO:       statsforecast: Not installed
2025-01-08 20:39:45,496:INFO:        tune_sklearn: Not installed
2025-01-08 20:39:45,496:INFO:                 ray: Not installed
2025-01-08 20:39:45,496:INFO:            hyperopt: Not installed
2025-01-08 20:39:45,496:INFO:              optuna: Not installed
2025-01-08 20:39:45,496:INFO:               skopt: Not installed
2025-01-08 20:39:45,496:INFO:              mlflow: Not installed
2025-01-08 20:39:45,496:INFO:              gradio: Not installed
2025-01-08 20:39:45,496:INFO:             fastapi: Not installed
2025-01-08 20:39:45,497:INFO:             uvicorn: Not installed
2025-01-08 20:39:45,497:INFO:              m2cgen: Not installed
2025-01-08 20:39:45,497:INFO:           evidently: Not installed
2025-01-08 20:39:45,497:INFO:               fugue: Not installed
2025-01-08 20:39:45,497:INFO:           streamlit: Not installed
2025-01-08 20:39:45,497:INFO:             prophet: Not installed
2025-01-08 20:39:45,497:INFO:None
2025-01-08 20:39:45,497:INFO:Set up data.
2025-01-08 20:39:45,509:INFO:Set up folding strategy.
2025-01-08 20:39:45,510:INFO:Set up train/test split.
2025-01-08 20:39:45,525:INFO:Set up index.
2025-01-08 20:39:45,525:INFO:Assigning column types.
2025-01-08 20:39:45,533:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 20:39:45,534:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,546:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,557:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:45,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:45,807:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,828:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:45,965:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,078:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 20:39:46,089:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,100:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,236:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,356:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,367:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,507:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,617:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 20:39:46,640:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:46,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:46,922:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,068:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,177:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,179:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 20:39:47,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,729:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 20:39:47,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:47,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:47,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,158:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:39:48,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,268:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 20:39:48,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:48,832:INFO:Preparing preprocessing pipeline...
2025-01-08 20:39:48,832:INFO:Set up simple imputation.
2025-01-08 20:39:48,833:INFO:Set up column name cleaning.
2025-01-08 20:39:48,929:INFO:Finished creating preprocessing pipeline.
2025-01-08 20:39:48,938:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 20:39:48,938:INFO:Creating final display dataframe.
2025-01-08 20:39:49,151:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              daef
2025-01-08 20:39:49,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:49,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:49,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:49,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:39:49,706:INFO:setup() successfully completed in 4.32s...............
2025-01-08 20:44:01,375:INFO:Initializing compare_models()
2025-01-08 20:44:01,375:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 20:44:01,376:INFO:Checking exceptions
2025-01-08 20:44:01,379:INFO:Preparing display monitor
2025-01-08 20:44:01,410:INFO:Initializing Linear Regression
2025-01-08 20:44:01,410:INFO:Total runtime is 0.0 minutes
2025-01-08 20:44:01,419:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:01,419:INFO:Initializing create_model()
2025-01-08 20:44:01,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:01,420:INFO:Checking exceptions
2025-01-08 20:44:01,420:INFO:Importing libraries
2025-01-08 20:44:01,420:INFO:Copying training dataset
2025-01-08 20:44:01,427:INFO:Defining folds
2025-01-08 20:44:01,428:INFO:Declaring metric variables
2025-01-08 20:44:01,433:INFO:Importing untrained model
2025-01-08 20:44:01,438:INFO:Linear Regression Imported successfully
2025-01-08 20:44:01,451:INFO:Starting cross validation
2025-01-08 20:44:01,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:06,163:INFO:Calculating mean and std
2025-01-08 20:44:06,165:INFO:Creating metrics dataframe
2025-01-08 20:44:06,169:INFO:Uploading results into container
2025-01-08 20:44:06,170:INFO:Uploading model into container now
2025-01-08 20:44:06,171:INFO:_master_model_container: 1
2025-01-08 20:44:06,171:INFO:_display_container: 2
2025-01-08 20:44:06,172:INFO:LinearRegression(n_jobs=-1)
2025-01-08 20:44:06,172:INFO:create_model() successfully completed......................................
2025-01-08 20:44:06,282:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:06,282:INFO:Creating metrics dataframe
2025-01-08 20:44:06,293:INFO:Initializing Lasso Regression
2025-01-08 20:44:06,293:INFO:Total runtime is 0.08138240178426107 minutes
2025-01-08 20:44:06,297:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:06,298:INFO:Initializing create_model()
2025-01-08 20:44:06,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:06,298:INFO:Checking exceptions
2025-01-08 20:44:06,298:INFO:Importing libraries
2025-01-08 20:44:06,298:INFO:Copying training dataset
2025-01-08 20:44:06,305:INFO:Defining folds
2025-01-08 20:44:06,306:INFO:Declaring metric variables
2025-01-08 20:44:06,311:INFO:Importing untrained model
2025-01-08 20:44:06,316:INFO:Lasso Regression Imported successfully
2025-01-08 20:44:06,338:INFO:Starting cross validation
2025-01-08 20:44:06,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:06,454:INFO:Calculating mean and std
2025-01-08 20:44:06,456:INFO:Creating metrics dataframe
2025-01-08 20:44:06,459:INFO:Uploading results into container
2025-01-08 20:44:06,460:INFO:Uploading model into container now
2025-01-08 20:44:06,460:INFO:_master_model_container: 2
2025-01-08 20:44:06,460:INFO:_display_container: 2
2025-01-08 20:44:06,461:INFO:Lasso(random_state=123)
2025-01-08 20:44:06,461:INFO:create_model() successfully completed......................................
2025-01-08 20:44:06,564:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:06,564:INFO:Creating metrics dataframe
2025-01-08 20:44:06,575:INFO:Initializing Ridge Regression
2025-01-08 20:44:06,575:INFO:Total runtime is 0.08608004252115885 minutes
2025-01-08 20:44:06,579:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:06,579:INFO:Initializing create_model()
2025-01-08 20:44:06,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:06,580:INFO:Checking exceptions
2025-01-08 20:44:06,580:INFO:Importing libraries
2025-01-08 20:44:06,580:INFO:Copying training dataset
2025-01-08 20:44:06,588:INFO:Defining folds
2025-01-08 20:44:06,588:INFO:Declaring metric variables
2025-01-08 20:44:06,594:INFO:Importing untrained model
2025-01-08 20:44:06,599:INFO:Ridge Regression Imported successfully
2025-01-08 20:44:06,610:INFO:Starting cross validation
2025-01-08 20:44:06,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:06,732:INFO:Calculating mean and std
2025-01-08 20:44:06,733:INFO:Creating metrics dataframe
2025-01-08 20:44:06,737:INFO:Uploading results into container
2025-01-08 20:44:06,738:INFO:Uploading model into container now
2025-01-08 20:44:06,739:INFO:_master_model_container: 3
2025-01-08 20:44:06,739:INFO:_display_container: 2
2025-01-08 20:44:06,739:INFO:Ridge(random_state=123)
2025-01-08 20:44:06,740:INFO:create_model() successfully completed......................................
2025-01-08 20:44:06,842:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:06,842:INFO:Creating metrics dataframe
2025-01-08 20:44:06,852:INFO:Initializing Elastic Net
2025-01-08 20:44:06,852:INFO:Total runtime is 0.09069368839263915 minutes
2025-01-08 20:44:06,857:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:06,857:INFO:Initializing create_model()
2025-01-08 20:44:06,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:06,858:INFO:Checking exceptions
2025-01-08 20:44:06,858:INFO:Importing libraries
2025-01-08 20:44:06,858:INFO:Copying training dataset
2025-01-08 20:44:06,865:INFO:Defining folds
2025-01-08 20:44:06,865:INFO:Declaring metric variables
2025-01-08 20:44:06,870:INFO:Importing untrained model
2025-01-08 20:44:06,877:INFO:Elastic Net Imported successfully
2025-01-08 20:44:06,886:INFO:Starting cross validation
2025-01-08 20:44:06,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:07,011:INFO:Calculating mean and std
2025-01-08 20:44:07,012:INFO:Creating metrics dataframe
2025-01-08 20:44:07,015:INFO:Uploading results into container
2025-01-08 20:44:07,015:INFO:Uploading model into container now
2025-01-08 20:44:07,016:INFO:_master_model_container: 4
2025-01-08 20:44:07,016:INFO:_display_container: 2
2025-01-08 20:44:07,016:INFO:ElasticNet(random_state=123)
2025-01-08 20:44:07,017:INFO:create_model() successfully completed......................................
2025-01-08 20:44:07,125:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:07,125:INFO:Creating metrics dataframe
2025-01-08 20:44:07,135:INFO:Initializing Least Angle Regression
2025-01-08 20:44:07,136:INFO:Total runtime is 0.09540756146113077 minutes
2025-01-08 20:44:07,140:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:07,141:INFO:Initializing create_model()
2025-01-08 20:44:07,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:07,141:INFO:Checking exceptions
2025-01-08 20:44:07,141:INFO:Importing libraries
2025-01-08 20:44:07,141:INFO:Copying training dataset
2025-01-08 20:44:07,148:INFO:Defining folds
2025-01-08 20:44:07,148:INFO:Declaring metric variables
2025-01-08 20:44:07,153:INFO:Importing untrained model
2025-01-08 20:44:07,160:INFO:Least Angle Regression Imported successfully
2025-01-08 20:44:07,170:INFO:Starting cross validation
2025-01-08 20:44:07,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:07,294:INFO:Calculating mean and std
2025-01-08 20:44:07,295:INFO:Creating metrics dataframe
2025-01-08 20:44:07,298:INFO:Uploading results into container
2025-01-08 20:44:07,298:INFO:Uploading model into container now
2025-01-08 20:44:07,299:INFO:_master_model_container: 5
2025-01-08 20:44:07,299:INFO:_display_container: 2
2025-01-08 20:44:07,300:INFO:Lars(random_state=123)
2025-01-08 20:44:07,300:INFO:create_model() successfully completed......................................
2025-01-08 20:44:07,406:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:07,407:INFO:Creating metrics dataframe
2025-01-08 20:44:07,417:INFO:Initializing Lasso Least Angle Regression
2025-01-08 20:44:07,418:INFO:Total runtime is 0.10013734499613444 minutes
2025-01-08 20:44:07,423:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:07,423:INFO:Initializing create_model()
2025-01-08 20:44:07,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:07,423:INFO:Checking exceptions
2025-01-08 20:44:07,424:INFO:Importing libraries
2025-01-08 20:44:07,424:INFO:Copying training dataset
2025-01-08 20:44:07,432:INFO:Defining folds
2025-01-08 20:44:07,432:INFO:Declaring metric variables
2025-01-08 20:44:07,438:INFO:Importing untrained model
2025-01-08 20:44:07,445:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 20:44:07,455:INFO:Starting cross validation
2025-01-08 20:44:07,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:07,580:INFO:Calculating mean and std
2025-01-08 20:44:07,581:INFO:Creating metrics dataframe
2025-01-08 20:44:07,584:INFO:Uploading results into container
2025-01-08 20:44:07,584:INFO:Uploading model into container now
2025-01-08 20:44:07,585:INFO:_master_model_container: 6
2025-01-08 20:44:07,586:INFO:_display_container: 2
2025-01-08 20:44:07,586:INFO:LassoLars(random_state=123)
2025-01-08 20:44:07,586:INFO:create_model() successfully completed......................................
2025-01-08 20:44:07,693:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:07,694:INFO:Creating metrics dataframe
2025-01-08 20:44:07,705:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 20:44:07,706:INFO:Total runtime is 0.10491801897684733 minutes
2025-01-08 20:44:07,710:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:07,710:INFO:Initializing create_model()
2025-01-08 20:44:07,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:07,711:INFO:Checking exceptions
2025-01-08 20:44:07,711:INFO:Importing libraries
2025-01-08 20:44:07,711:INFO:Copying training dataset
2025-01-08 20:44:07,718:INFO:Defining folds
2025-01-08 20:44:07,718:INFO:Declaring metric variables
2025-01-08 20:44:07,723:INFO:Importing untrained model
2025-01-08 20:44:07,728:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 20:44:07,740:INFO:Starting cross validation
2025-01-08 20:44:07,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:07,862:INFO:Calculating mean and std
2025-01-08 20:44:07,863:INFO:Creating metrics dataframe
2025-01-08 20:44:07,866:INFO:Uploading results into container
2025-01-08 20:44:07,866:INFO:Uploading model into container now
2025-01-08 20:44:07,867:INFO:_master_model_container: 7
2025-01-08 20:44:07,867:INFO:_display_container: 2
2025-01-08 20:44:07,867:INFO:OrthogonalMatchingPursuit()
2025-01-08 20:44:07,867:INFO:create_model() successfully completed......................................
2025-01-08 20:44:07,974:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:07,974:INFO:Creating metrics dataframe
2025-01-08 20:44:07,987:INFO:Initializing Bayesian Ridge
2025-01-08 20:44:07,987:INFO:Total runtime is 0.10961516698201497 minutes
2025-01-08 20:44:07,991:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:07,992:INFO:Initializing create_model()
2025-01-08 20:44:07,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:07,992:INFO:Checking exceptions
2025-01-08 20:44:07,992:INFO:Importing libraries
2025-01-08 20:44:07,992:INFO:Copying training dataset
2025-01-08 20:44:07,999:INFO:Defining folds
2025-01-08 20:44:08,000:INFO:Declaring metric variables
2025-01-08 20:44:08,005:INFO:Importing untrained model
2025-01-08 20:44:08,010:INFO:Bayesian Ridge Imported successfully
2025-01-08 20:44:08,018:INFO:Starting cross validation
2025-01-08 20:44:08,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:08,209:INFO:Calculating mean and std
2025-01-08 20:44:08,210:INFO:Creating metrics dataframe
2025-01-08 20:44:08,213:INFO:Uploading results into container
2025-01-08 20:44:08,213:INFO:Uploading model into container now
2025-01-08 20:44:08,214:INFO:_master_model_container: 8
2025-01-08 20:44:08,214:INFO:_display_container: 2
2025-01-08 20:44:08,214:INFO:BayesianRidge()
2025-01-08 20:44:08,214:INFO:create_model() successfully completed......................................
2025-01-08 20:44:08,322:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:08,322:INFO:Creating metrics dataframe
2025-01-08 20:44:08,334:INFO:Initializing Passive Aggressive Regressor
2025-01-08 20:44:08,334:INFO:Total runtime is 0.11539463202158609 minutes
2025-01-08 20:44:08,339:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:08,340:INFO:Initializing create_model()
2025-01-08 20:44:08,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:08,340:INFO:Checking exceptions
2025-01-08 20:44:08,340:INFO:Importing libraries
2025-01-08 20:44:08,340:INFO:Copying training dataset
2025-01-08 20:44:08,347:INFO:Defining folds
2025-01-08 20:44:08,347:INFO:Declaring metric variables
2025-01-08 20:44:08,352:INFO:Importing untrained model
2025-01-08 20:44:08,360:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 20:44:08,368:INFO:Starting cross validation
2025-01-08 20:44:08,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:08,572:INFO:Calculating mean and std
2025-01-08 20:44:08,573:INFO:Creating metrics dataframe
2025-01-08 20:44:08,576:INFO:Uploading results into container
2025-01-08 20:44:08,577:INFO:Uploading model into container now
2025-01-08 20:44:08,577:INFO:_master_model_container: 9
2025-01-08 20:44:08,578:INFO:_display_container: 2
2025-01-08 20:44:08,578:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 20:44:08,579:INFO:create_model() successfully completed......................................
2025-01-08 20:44:08,686:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:08,686:INFO:Creating metrics dataframe
2025-01-08 20:44:08,699:INFO:Initializing Huber Regressor
2025-01-08 20:44:08,699:INFO:Total runtime is 0.12147404352823893 minutes
2025-01-08 20:44:08,704:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:08,704:INFO:Initializing create_model()
2025-01-08 20:44:08,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:08,705:INFO:Checking exceptions
2025-01-08 20:44:08,705:INFO:Importing libraries
2025-01-08 20:44:08,705:INFO:Copying training dataset
2025-01-08 20:44:08,712:INFO:Defining folds
2025-01-08 20:44:08,712:INFO:Declaring metric variables
2025-01-08 20:44:08,717:INFO:Importing untrained model
2025-01-08 20:44:08,724:INFO:Huber Regressor Imported successfully
2025-01-08 20:44:08,733:INFO:Starting cross validation
2025-01-08 20:44:08,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:08,976:INFO:Calculating mean and std
2025-01-08 20:44:08,978:INFO:Creating metrics dataframe
2025-01-08 20:44:08,980:INFO:Uploading results into container
2025-01-08 20:44:08,980:INFO:Uploading model into container now
2025-01-08 20:44:08,981:INFO:_master_model_container: 10
2025-01-08 20:44:08,981:INFO:_display_container: 2
2025-01-08 20:44:08,981:INFO:HuberRegressor()
2025-01-08 20:44:08,981:INFO:create_model() successfully completed......................................
2025-01-08 20:44:09,087:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:09,087:INFO:Creating metrics dataframe
2025-01-08 20:44:09,101:INFO:Initializing K Neighbors Regressor
2025-01-08 20:44:09,101:INFO:Total runtime is 0.12818644444147745 minutes
2025-01-08 20:44:09,106:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:09,107:INFO:Initializing create_model()
2025-01-08 20:44:09,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:09,107:INFO:Checking exceptions
2025-01-08 20:44:09,107:INFO:Importing libraries
2025-01-08 20:44:09,108:INFO:Copying training dataset
2025-01-08 20:44:09,114:INFO:Defining folds
2025-01-08 20:44:09,115:INFO:Declaring metric variables
2025-01-08 20:44:09,121:INFO:Importing untrained model
2025-01-08 20:44:09,127:INFO:K Neighbors Regressor Imported successfully
2025-01-08 20:44:09,137:INFO:Starting cross validation
2025-01-08 20:44:09,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:09,315:INFO:Calculating mean and std
2025-01-08 20:44:09,316:INFO:Creating metrics dataframe
2025-01-08 20:44:09,319:INFO:Uploading results into container
2025-01-08 20:44:09,319:INFO:Uploading model into container now
2025-01-08 20:44:09,320:INFO:_master_model_container: 11
2025-01-08 20:44:09,321:INFO:_display_container: 2
2025-01-08 20:44:09,321:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 20:44:09,321:INFO:create_model() successfully completed......................................
2025-01-08 20:44:09,427:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:09,427:INFO:Creating metrics dataframe
2025-01-08 20:44:09,441:INFO:Initializing Decision Tree Regressor
2025-01-08 20:44:09,441:INFO:Total runtime is 0.1338418205579122 minutes
2025-01-08 20:44:09,445:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:09,445:INFO:Initializing create_model()
2025-01-08 20:44:09,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:09,445:INFO:Checking exceptions
2025-01-08 20:44:09,445:INFO:Importing libraries
2025-01-08 20:44:09,446:INFO:Copying training dataset
2025-01-08 20:44:09,453:INFO:Defining folds
2025-01-08 20:44:09,453:INFO:Declaring metric variables
2025-01-08 20:44:09,459:INFO:Importing untrained model
2025-01-08 20:44:09,463:INFO:Decision Tree Regressor Imported successfully
2025-01-08 20:44:09,476:INFO:Starting cross validation
2025-01-08 20:44:09,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:09,653:INFO:Calculating mean and std
2025-01-08 20:44:09,655:INFO:Creating metrics dataframe
2025-01-08 20:44:09,657:INFO:Uploading results into container
2025-01-08 20:44:09,658:INFO:Uploading model into container now
2025-01-08 20:44:09,658:INFO:_master_model_container: 12
2025-01-08 20:44:09,658:INFO:_display_container: 2
2025-01-08 20:44:09,659:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 20:44:09,659:INFO:create_model() successfully completed......................................
2025-01-08 20:44:09,766:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:09,766:INFO:Creating metrics dataframe
2025-01-08 20:44:09,780:INFO:Initializing Random Forest Regressor
2025-01-08 20:44:09,780:INFO:Total runtime is 0.13950465122858682 minutes
2025-01-08 20:44:09,784:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:09,785:INFO:Initializing create_model()
2025-01-08 20:44:09,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:09,785:INFO:Checking exceptions
2025-01-08 20:44:09,785:INFO:Importing libraries
2025-01-08 20:44:09,786:INFO:Copying training dataset
2025-01-08 20:44:09,793:INFO:Defining folds
2025-01-08 20:44:09,793:INFO:Declaring metric variables
2025-01-08 20:44:09,798:INFO:Importing untrained model
2025-01-08 20:44:09,806:INFO:Random Forest Regressor Imported successfully
2025-01-08 20:44:09,815:INFO:Starting cross validation
2025-01-08 20:44:09,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:13,861:INFO:Calculating mean and std
2025-01-08 20:44:13,863:INFO:Creating metrics dataframe
2025-01-08 20:44:13,865:INFO:Uploading results into container
2025-01-08 20:44:13,866:INFO:Uploading model into container now
2025-01-08 20:44:13,867:INFO:_master_model_container: 13
2025-01-08 20:44:13,867:INFO:_display_container: 2
2025-01-08 20:44:13,867:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:44:13,868:INFO:create_model() successfully completed......................................
2025-01-08 20:44:13,972:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:13,973:INFO:Creating metrics dataframe
2025-01-08 20:44:13,989:INFO:Initializing Extra Trees Regressor
2025-01-08 20:44:13,989:INFO:Total runtime is 0.20964441299438474 minutes
2025-01-08 20:44:13,995:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:13,995:INFO:Initializing create_model()
2025-01-08 20:44:13,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:13,995:INFO:Checking exceptions
2025-01-08 20:44:13,995:INFO:Importing libraries
2025-01-08 20:44:13,996:INFO:Copying training dataset
2025-01-08 20:44:14,003:INFO:Defining folds
2025-01-08 20:44:14,003:INFO:Declaring metric variables
2025-01-08 20:44:14,009:INFO:Importing untrained model
2025-01-08 20:44:14,015:INFO:Extra Trees Regressor Imported successfully
2025-01-08 20:44:14,025:INFO:Starting cross validation
2025-01-08 20:44:14,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:16,166:INFO:Calculating mean and std
2025-01-08 20:44:16,167:INFO:Creating metrics dataframe
2025-01-08 20:44:16,170:INFO:Uploading results into container
2025-01-08 20:44:16,170:INFO:Uploading model into container now
2025-01-08 20:44:16,171:INFO:_master_model_container: 14
2025-01-08 20:44:16,171:INFO:_display_container: 2
2025-01-08 20:44:16,171:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:44:16,172:INFO:create_model() successfully completed......................................
2025-01-08 20:44:16,280:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:16,280:INFO:Creating metrics dataframe
2025-01-08 20:44:16,295:INFO:Initializing AdaBoost Regressor
2025-01-08 20:44:16,295:INFO:Total runtime is 0.24808140993118283 minutes
2025-01-08 20:44:16,299:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:16,299:INFO:Initializing create_model()
2025-01-08 20:44:16,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:16,300:INFO:Checking exceptions
2025-01-08 20:44:16,300:INFO:Importing libraries
2025-01-08 20:44:16,300:INFO:Copying training dataset
2025-01-08 20:44:16,307:INFO:Defining folds
2025-01-08 20:44:16,307:INFO:Declaring metric variables
2025-01-08 20:44:16,313:INFO:Importing untrained model
2025-01-08 20:44:16,319:INFO:AdaBoost Regressor Imported successfully
2025-01-08 20:44:16,328:INFO:Starting cross validation
2025-01-08 20:44:16,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:17,353:INFO:Calculating mean and std
2025-01-08 20:44:17,354:INFO:Creating metrics dataframe
2025-01-08 20:44:17,357:INFO:Uploading results into container
2025-01-08 20:44:17,357:INFO:Uploading model into container now
2025-01-08 20:44:17,358:INFO:_master_model_container: 15
2025-01-08 20:44:17,358:INFO:_display_container: 2
2025-01-08 20:44:17,358:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 20:44:17,358:INFO:create_model() successfully completed......................................
2025-01-08 20:44:17,466:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:17,466:INFO:Creating metrics dataframe
2025-01-08 20:44:17,482:INFO:Initializing Gradient Boosting Regressor
2025-01-08 20:44:17,483:INFO:Total runtime is 0.26788568496704096 minutes
2025-01-08 20:44:17,488:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:17,488:INFO:Initializing create_model()
2025-01-08 20:44:17,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:17,489:INFO:Checking exceptions
2025-01-08 20:44:17,489:INFO:Importing libraries
2025-01-08 20:44:17,489:INFO:Copying training dataset
2025-01-08 20:44:17,498:INFO:Defining folds
2025-01-08 20:44:17,498:INFO:Declaring metric variables
2025-01-08 20:44:17,502:INFO:Importing untrained model
2025-01-08 20:44:17,507:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 20:44:17,518:INFO:Starting cross validation
2025-01-08 20:44:17,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:19,010:INFO:Calculating mean and std
2025-01-08 20:44:19,012:INFO:Creating metrics dataframe
2025-01-08 20:44:19,014:INFO:Uploading results into container
2025-01-08 20:44:19,015:INFO:Uploading model into container now
2025-01-08 20:44:19,015:INFO:_master_model_container: 16
2025-01-08 20:44:19,015:INFO:_display_container: 2
2025-01-08 20:44:19,016:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 20:44:19,016:INFO:create_model() successfully completed......................................
2025-01-08 20:44:19,121:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:19,121:INFO:Creating metrics dataframe
2025-01-08 20:44:19,136:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 20:44:19,136:INFO:Total runtime is 0.2954353809356689 minutes
2025-01-08 20:44:19,141:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:19,141:INFO:Initializing create_model()
2025-01-08 20:44:19,142:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:19,142:INFO:Checking exceptions
2025-01-08 20:44:19,142:INFO:Importing libraries
2025-01-08 20:44:19,142:INFO:Copying training dataset
2025-01-08 20:44:19,150:INFO:Defining folds
2025-01-08 20:44:19,150:INFO:Declaring metric variables
2025-01-08 20:44:19,155:INFO:Importing untrained model
2025-01-08 20:44:19,164:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 20:44:19,175:INFO:Starting cross validation
2025-01-08 20:44:19,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:19,928:INFO:Calculating mean and std
2025-01-08 20:44:19,930:INFO:Creating metrics dataframe
2025-01-08 20:44:19,934:INFO:Uploading results into container
2025-01-08 20:44:19,935:INFO:Uploading model into container now
2025-01-08 20:44:19,935:INFO:_master_model_container: 17
2025-01-08 20:44:19,935:INFO:_display_container: 2
2025-01-08 20:44:19,936:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:44:19,936:INFO:create_model() successfully completed......................................
2025-01-08 20:44:20,040:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:20,040:INFO:Creating metrics dataframe
2025-01-08 20:44:20,056:INFO:Initializing Dummy Regressor
2025-01-08 20:44:20,056:INFO:Total runtime is 0.31075885693232214 minutes
2025-01-08 20:44:20,060:INFO:SubProcess create_model() called ==================================
2025-01-08 20:44:20,060:INFO:Initializing create_model()
2025-01-08 20:44:20,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B36A650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:20,061:INFO:Checking exceptions
2025-01-08 20:44:20,061:INFO:Importing libraries
2025-01-08 20:44:20,061:INFO:Copying training dataset
2025-01-08 20:44:20,068:INFO:Defining folds
2025-01-08 20:44:20,069:INFO:Declaring metric variables
2025-01-08 20:44:20,074:INFO:Importing untrained model
2025-01-08 20:44:20,078:INFO:Dummy Regressor Imported successfully
2025-01-08 20:44:20,101:INFO:Starting cross validation
2025-01-08 20:44:20,102:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:44:20,207:INFO:Calculating mean and std
2025-01-08 20:44:20,208:INFO:Creating metrics dataframe
2025-01-08 20:44:20,211:INFO:Uploading results into container
2025-01-08 20:44:20,211:INFO:Uploading model into container now
2025-01-08 20:44:20,212:INFO:_master_model_container: 18
2025-01-08 20:44:20,212:INFO:_display_container: 2
2025-01-08 20:44:20,212:INFO:DummyRegressor()
2025-01-08 20:44:20,212:INFO:create_model() successfully completed......................................
2025-01-08 20:44:20,320:INFO:SubProcess create_model() end ==================================
2025-01-08 20:44:20,320:INFO:Creating metrics dataframe
2025-01-08 20:44:20,340:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 20:44:20,352:INFO:Initializing create_model()
2025-01-08 20:44:20,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:44:20,353:INFO:Checking exceptions
2025-01-08 20:44:20,355:INFO:Importing libraries
2025-01-08 20:44:20,355:INFO:Copying training dataset
2025-01-08 20:44:20,361:INFO:Defining folds
2025-01-08 20:44:20,362:INFO:Declaring metric variables
2025-01-08 20:44:20,363:INFO:Importing untrained model
2025-01-08 20:44:20,363:INFO:Declaring custom model
2025-01-08 20:44:20,364:INFO:Extra Trees Regressor Imported successfully
2025-01-08 20:44:20,365:INFO:Cross validation set to False
2025-01-08 20:44:20,365:INFO:Fitting Model
2025-01-08 20:44:20,650:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:44:20,650:INFO:create_model() successfully completed......................................
2025-01-08 20:44:20,800:INFO:_master_model_container: 18
2025-01-08 20:44:20,801:INFO:_display_container: 2
2025-01-08 20:44:20,801:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 20:44:20,801:INFO:compare_models() successfully completed......................................
2025-01-08 20:45:43,080:INFO:Initializing plot_model()
2025-01-08 20:45:43,080:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 20:45:43,080:INFO:Checking exceptions
2025-01-08 20:45:43,128:INFO:Preloading libraries
2025-01-08 20:45:43,228:INFO:Copying training dataset
2025-01-08 20:45:43,229:INFO:Plot type: feature
2025-01-08 20:45:43,229:WARNING:No coef_ found. Trying feature_importances_
2025-01-08 20:45:44,369:INFO:Visual Rendered Successfully
2025-01-08 20:45:44,475:INFO:plot_model() successfully completed......................................
2025-01-08 20:47:05,100:INFO:Initializing plot_model()
2025-01-08 20:47:05,100:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 20:47:05,100:INFO:Checking exceptions
2025-01-08 20:47:05,143:INFO:Preloading libraries
2025-01-08 20:47:05,957:INFO:Copying training dataset
2025-01-08 20:47:05,957:INFO:Plot type: error
2025-01-08 20:47:06,253:INFO:Fitting Model
2025-01-08 20:47:06,255:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 20:47:06,256:INFO:Scoring test/hold-out set
2025-01-08 20:47:07,058:INFO:Visual Rendered Successfully
2025-01-08 20:47:07,181:INFO:plot_model() successfully completed......................................
2025-01-08 20:47:57,481:INFO:Initializing plot_model()
2025-01-08 20:47:57,481:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F05E995490>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 20:47:57,481:INFO:Checking exceptions
2025-01-08 20:47:57,532:INFO:Preloading libraries
2025-01-08 20:47:57,629:INFO:Copying training dataset
2025-01-08 20:47:57,629:INFO:Plot type: residuals
2025-01-08 20:47:57,876:INFO:Fitting Model
2025-01-08 20:47:57,876:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 20:47:58,058:INFO:Scoring test/hold-out set
2025-01-08 20:47:58,818:INFO:Visual Rendered Successfully
2025-01-08 20:47:58,937:INFO:plot_model() successfully completed......................................
2025-01-08 20:59:47,085:INFO:PyCaret RegressionExperiment
2025-01-08 20:59:47,085:INFO:Logging name: reg-default-name
2025-01-08 20:59:47,085:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 20:59:47,085:INFO:version 3.3.2
2025-01-08 20:59:47,085:INFO:Initializing setup()
2025-01-08 20:59:47,086:INFO:self.USI: c939
2025-01-08 20:59:47,086:INFO:self._variable_keys: {'memory', 'y_test', 'exp_id', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'X_train', 'target_param', 'gpu_param', 'y_train', 'pipeline', 'USI', 'fold_shuffle_param', 'X', 'logging_param', 'gpu_n_jobs_param', 'fold_generator', 'X_test', 'data', 'html_param', '_available_plots', 'y', 'seed', 'idx', 'exp_name_log', 'transform_target_param', 'n_jobs_param'}
2025-01-08 20:59:47,086:INFO:Checking environment
2025-01-08 20:59:47,086:INFO:python_version: 3.11.11
2025-01-08 20:59:47,086:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 20:59:47,086:INFO:machine: AMD64
2025-01-08 20:59:47,086:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 20:59:47,086:INFO:Memory: svmem(total=6439919616, available=1255981056, percent=80.5, used=5183938560, free=1255981056)
2025-01-08 20:59:47,086:INFO:Physical Core: 4
2025-01-08 20:59:47,086:INFO:Logical Core: 4
2025-01-08 20:59:47,086:INFO:Checking libraries
2025-01-08 20:59:47,087:INFO:System:
2025-01-08 20:59:47,087:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 20:59:47,087:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 20:59:47,087:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 20:59:47,087:INFO:PyCaret required dependencies:
2025-01-08 20:59:47,087:INFO:                 pip: 24.2
2025-01-08 20:59:47,087:INFO:          setuptools: 75.1.0
2025-01-08 20:59:47,087:INFO:             pycaret: 3.3.2
2025-01-08 20:59:47,087:INFO:             IPython: 8.30.0
2025-01-08 20:59:47,087:INFO:          ipywidgets: 8.1.5
2025-01-08 20:59:47,087:INFO:                tqdm: 4.67.1
2025-01-08 20:59:47,088:INFO:               numpy: 1.26.4
2025-01-08 20:59:47,088:INFO:              pandas: 2.1.4
2025-01-08 20:59:47,088:INFO:              jinja2: 3.1.4
2025-01-08 20:59:47,088:INFO:               scipy: 1.11.4
2025-01-08 20:59:47,088:INFO:              joblib: 1.3.2
2025-01-08 20:59:47,088:INFO:             sklearn: 1.4.2
2025-01-08 20:59:47,088:INFO:                pyod: 2.0.3
2025-01-08 20:59:47,088:INFO:            imblearn: 0.13.0
2025-01-08 20:59:47,088:INFO:   category_encoders: 2.7.0
2025-01-08 20:59:47,088:INFO:            lightgbm: 4.5.0
2025-01-08 20:59:47,089:INFO:               numba: 0.60.0
2025-01-08 20:59:47,089:INFO:            requests: 2.32.3
2025-01-08 20:59:47,089:INFO:          matplotlib: 3.7.5
2025-01-08 20:59:47,089:INFO:          scikitplot: 0.3.7
2025-01-08 20:59:47,089:INFO:         yellowbrick: 1.5
2025-01-08 20:59:47,089:INFO:              plotly: 5.24.1
2025-01-08 20:59:47,089:INFO:    plotly-resampler: Not installed
2025-01-08 20:59:47,089:INFO:             kaleido: 0.2.1
2025-01-08 20:59:47,089:INFO:           schemdraw: 0.15
2025-01-08 20:59:47,089:INFO:         statsmodels: 0.14.4
2025-01-08 20:59:47,089:INFO:              sktime: 0.26.0
2025-01-08 20:59:47,090:INFO:               tbats: 1.1.3
2025-01-08 20:59:47,090:INFO:            pmdarima: 2.0.4
2025-01-08 20:59:47,090:INFO:              psutil: 5.9.0
2025-01-08 20:59:47,090:INFO:          markupsafe: 2.1.3
2025-01-08 20:59:47,090:INFO:             pickle5: Not installed
2025-01-08 20:59:47,090:INFO:         cloudpickle: 3.1.0
2025-01-08 20:59:47,090:INFO:         deprecation: 2.1.0
2025-01-08 20:59:47,090:INFO:              xxhash: 3.5.0
2025-01-08 20:59:47,090:INFO:           wurlitzer: Not installed
2025-01-08 20:59:47,090:INFO:PyCaret optional dependencies:
2025-01-08 20:59:47,090:INFO:                shap: Not installed
2025-01-08 20:59:47,091:INFO:           interpret: Not installed
2025-01-08 20:59:47,091:INFO:                umap: Not installed
2025-01-08 20:59:47,091:INFO:     ydata_profiling: Not installed
2025-01-08 20:59:47,091:INFO:  explainerdashboard: Not installed
2025-01-08 20:59:47,091:INFO:             autoviz: Not installed
2025-01-08 20:59:47,091:INFO:           fairlearn: Not installed
2025-01-08 20:59:47,091:INFO:          deepchecks: Not installed
2025-01-08 20:59:47,091:INFO:             xgboost: Not installed
2025-01-08 20:59:47,091:INFO:            catboost: Not installed
2025-01-08 20:59:47,091:INFO:              kmodes: Not installed
2025-01-08 20:59:47,091:INFO:             mlxtend: Not installed
2025-01-08 20:59:47,092:INFO:       statsforecast: Not installed
2025-01-08 20:59:47,092:INFO:        tune_sklearn: Not installed
2025-01-08 20:59:47,092:INFO:                 ray: Not installed
2025-01-08 20:59:47,092:INFO:            hyperopt: Not installed
2025-01-08 20:59:47,092:INFO:              optuna: Not installed
2025-01-08 20:59:47,092:INFO:               skopt: Not installed
2025-01-08 20:59:47,092:INFO:              mlflow: Not installed
2025-01-08 20:59:47,092:INFO:              gradio: Not installed
2025-01-08 20:59:47,092:INFO:             fastapi: Not installed
2025-01-08 20:59:47,092:INFO:             uvicorn: Not installed
2025-01-08 20:59:47,092:INFO:              m2cgen: Not installed
2025-01-08 20:59:47,092:INFO:           evidently: Not installed
2025-01-08 20:59:47,093:INFO:               fugue: Not installed
2025-01-08 20:59:47,093:INFO:           streamlit: Not installed
2025-01-08 20:59:47,093:INFO:             prophet: Not installed
2025-01-08 20:59:47,093:INFO:None
2025-01-08 20:59:47,093:INFO:Set up data.
2025-01-08 20:59:47,105:INFO:Set up folding strategy.
2025-01-08 20:59:47,105:INFO:Set up train/test split.
2025-01-08 20:59:47,111:INFO:Set up index.
2025-01-08 20:59:47,112:INFO:Assigning column types.
2025-01-08 20:59:47,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 20:59:47,119:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,131:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,388:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,399:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,545:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,655:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 20:59:47,666:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,677:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:47,936:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 20:59:47,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,198:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 20:59:48,221:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,582:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:48,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:48,852:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 20:59:49,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,284:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,393:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 20:59:49,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 20:59:49,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:49,926:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 20:59:50,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:50,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:50,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:50,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:50,470:INFO:Preparing preprocessing pipeline...
2025-01-08 20:59:50,471:INFO:Set up simple imputation.
2025-01-08 20:59:50,472:INFO:Set up column name cleaning.
2025-01-08 20:59:50,543:INFO:Finished creating preprocessing pipeline.
2025-01-08 20:59:50,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 20:59:50,551:INFO:Creating final display dataframe.
2025-01-08 20:59:50,766:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c939
2025-01-08 20:59:51,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:51,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:51,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:51,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 20:59:51,327:INFO:setup() successfully completed in 4.25s...............
2025-01-08 20:59:54,043:INFO:Initializing compare_models()
2025-01-08 20:59:54,043:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 20:59:54,043:INFO:Checking exceptions
2025-01-08 20:59:54,046:INFO:Preparing display monitor
2025-01-08 20:59:54,074:INFO:Initializing Linear Regression
2025-01-08 20:59:54,074:INFO:Total runtime is 0.0 minutes
2025-01-08 20:59:54,081:INFO:SubProcess create_model() called ==================================
2025-01-08 20:59:54,082:INFO:Initializing create_model()
2025-01-08 20:59:54,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 20:59:54,082:INFO:Checking exceptions
2025-01-08 20:59:54,082:INFO:Importing libraries
2025-01-08 20:59:54,083:INFO:Copying training dataset
2025-01-08 20:59:54,091:INFO:Defining folds
2025-01-08 20:59:54,091:INFO:Declaring metric variables
2025-01-08 20:59:54,096:INFO:Importing untrained model
2025-01-08 20:59:54,102:INFO:Linear Regression Imported successfully
2025-01-08 20:59:54,112:INFO:Starting cross validation
2025-01-08 20:59:54,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 20:59:59,897:INFO:Calculating mean and std
2025-01-08 20:59:59,899:INFO:Creating metrics dataframe
2025-01-08 20:59:59,902:INFO:Uploading results into container
2025-01-08 20:59:59,902:INFO:Uploading model into container now
2025-01-08 20:59:59,903:INFO:_master_model_container: 1
2025-01-08 20:59:59,903:INFO:_display_container: 2
2025-01-08 20:59:59,903:INFO:LinearRegression(n_jobs=-1)
2025-01-08 20:59:59,904:INFO:create_model() successfully completed......................................
2025-01-08 21:00:00,021:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:00,022:INFO:Creating metrics dataframe
2025-01-08 21:00:00,035:INFO:Initializing Lasso Regression
2025-01-08 21:00:00,035:INFO:Total runtime is 0.09933784405390421 minutes
2025-01-08 21:00:00,040:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:00,040:INFO:Initializing create_model()
2025-01-08 21:00:00,041:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:00,041:INFO:Checking exceptions
2025-01-08 21:00:00,041:INFO:Importing libraries
2025-01-08 21:00:00,041:INFO:Copying training dataset
2025-01-08 21:00:00,048:INFO:Defining folds
2025-01-08 21:00:00,049:INFO:Declaring metric variables
2025-01-08 21:00:00,055:INFO:Importing untrained model
2025-01-08 21:00:00,062:INFO:Lasso Regression Imported successfully
2025-01-08 21:00:00,073:INFO:Starting cross validation
2025-01-08 21:00:00,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:00,209:INFO:Calculating mean and std
2025-01-08 21:00:00,210:INFO:Creating metrics dataframe
2025-01-08 21:00:00,213:INFO:Uploading results into container
2025-01-08 21:00:00,213:INFO:Uploading model into container now
2025-01-08 21:00:00,214:INFO:_master_model_container: 2
2025-01-08 21:00:00,214:INFO:_display_container: 2
2025-01-08 21:00:00,214:INFO:Lasso(random_state=123)
2025-01-08 21:00:00,214:INFO:create_model() successfully completed......................................
2025-01-08 21:00:00,326:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:00,326:INFO:Creating metrics dataframe
2025-01-08 21:00:00,336:INFO:Initializing Ridge Regression
2025-01-08 21:00:00,336:INFO:Total runtime is 0.10436867872873941 minutes
2025-01-08 21:00:00,341:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:00,341:INFO:Initializing create_model()
2025-01-08 21:00:00,341:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:00,341:INFO:Checking exceptions
2025-01-08 21:00:00,342:INFO:Importing libraries
2025-01-08 21:00:00,342:INFO:Copying training dataset
2025-01-08 21:00:00,349:INFO:Defining folds
2025-01-08 21:00:00,349:INFO:Declaring metric variables
2025-01-08 21:00:00,354:INFO:Importing untrained model
2025-01-08 21:00:00,360:INFO:Ridge Regression Imported successfully
2025-01-08 21:00:00,371:INFO:Starting cross validation
2025-01-08 21:00:00,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:00,497:INFO:Calculating mean and std
2025-01-08 21:00:00,498:INFO:Creating metrics dataframe
2025-01-08 21:00:00,502:INFO:Uploading results into container
2025-01-08 21:00:00,503:INFO:Uploading model into container now
2025-01-08 21:00:00,504:INFO:_master_model_container: 3
2025-01-08 21:00:00,504:INFO:_display_container: 2
2025-01-08 21:00:00,505:INFO:Ridge(random_state=123)
2025-01-08 21:00:00,505:INFO:create_model() successfully completed......................................
2025-01-08 21:00:00,613:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:00,613:INFO:Creating metrics dataframe
2025-01-08 21:00:00,625:INFO:Initializing Elastic Net
2025-01-08 21:00:00,625:INFO:Total runtime is 0.10918236176172891 minutes
2025-01-08 21:00:00,629:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:00,630:INFO:Initializing create_model()
2025-01-08 21:00:00,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:00,630:INFO:Checking exceptions
2025-01-08 21:00:00,630:INFO:Importing libraries
2025-01-08 21:00:00,630:INFO:Copying training dataset
2025-01-08 21:00:00,638:INFO:Defining folds
2025-01-08 21:00:00,638:INFO:Declaring metric variables
2025-01-08 21:00:00,642:INFO:Importing untrained model
2025-01-08 21:00:00,649:INFO:Elastic Net Imported successfully
2025-01-08 21:00:00,660:INFO:Starting cross validation
2025-01-08 21:00:00,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:00,786:INFO:Calculating mean and std
2025-01-08 21:00:00,787:INFO:Creating metrics dataframe
2025-01-08 21:00:00,790:INFO:Uploading results into container
2025-01-08 21:00:00,790:INFO:Uploading model into container now
2025-01-08 21:00:00,791:INFO:_master_model_container: 4
2025-01-08 21:00:00,791:INFO:_display_container: 2
2025-01-08 21:00:00,791:INFO:ElasticNet(random_state=123)
2025-01-08 21:00:00,791:INFO:create_model() successfully completed......................................
2025-01-08 21:00:00,901:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:00,902:INFO:Creating metrics dataframe
2025-01-08 21:00:00,913:INFO:Initializing Least Angle Regression
2025-01-08 21:00:00,913:INFO:Total runtime is 0.11397910912831623 minutes
2025-01-08 21:00:00,917:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:00,919:INFO:Initializing create_model()
2025-01-08 21:00:00,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:00,919:INFO:Checking exceptions
2025-01-08 21:00:00,919:INFO:Importing libraries
2025-01-08 21:00:00,919:INFO:Copying training dataset
2025-01-08 21:00:00,926:INFO:Defining folds
2025-01-08 21:00:00,926:INFO:Declaring metric variables
2025-01-08 21:00:00,932:INFO:Importing untrained model
2025-01-08 21:00:00,938:INFO:Least Angle Regression Imported successfully
2025-01-08 21:00:00,947:INFO:Starting cross validation
2025-01-08 21:00:00,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:01,070:INFO:Calculating mean and std
2025-01-08 21:00:01,071:INFO:Creating metrics dataframe
2025-01-08 21:00:01,074:INFO:Uploading results into container
2025-01-08 21:00:01,074:INFO:Uploading model into container now
2025-01-08 21:00:01,075:INFO:_master_model_container: 5
2025-01-08 21:00:01,075:INFO:_display_container: 2
2025-01-08 21:00:01,075:INFO:Lars(random_state=123)
2025-01-08 21:00:01,075:INFO:create_model() successfully completed......................................
2025-01-08 21:00:01,184:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:01,184:INFO:Creating metrics dataframe
2025-01-08 21:00:01,198:INFO:Initializing Lasso Least Angle Regression
2025-01-08 21:00:01,198:INFO:Total runtime is 0.11872570117314656 minutes
2025-01-08 21:00:01,205:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:01,205:INFO:Initializing create_model()
2025-01-08 21:00:01,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:01,206:INFO:Checking exceptions
2025-01-08 21:00:01,206:INFO:Importing libraries
2025-01-08 21:00:01,206:INFO:Copying training dataset
2025-01-08 21:00:01,213:INFO:Defining folds
2025-01-08 21:00:01,213:INFO:Declaring metric variables
2025-01-08 21:00:01,220:INFO:Importing untrained model
2025-01-08 21:00:01,225:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 21:00:01,233:INFO:Starting cross validation
2025-01-08 21:00:01,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:01,362:INFO:Calculating mean and std
2025-01-08 21:00:01,363:INFO:Creating metrics dataframe
2025-01-08 21:00:01,366:INFO:Uploading results into container
2025-01-08 21:00:01,366:INFO:Uploading model into container now
2025-01-08 21:00:01,367:INFO:_master_model_container: 6
2025-01-08 21:00:01,367:INFO:_display_container: 2
2025-01-08 21:00:01,367:INFO:LassoLars(random_state=123)
2025-01-08 21:00:01,368:INFO:create_model() successfully completed......................................
2025-01-08 21:00:01,479:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:01,479:INFO:Creating metrics dataframe
2025-01-08 21:00:01,491:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 21:00:01,491:INFO:Total runtime is 0.12360598643620808 minutes
2025-01-08 21:00:01,495:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:01,496:INFO:Initializing create_model()
2025-01-08 21:00:01,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:01,496:INFO:Checking exceptions
2025-01-08 21:00:01,496:INFO:Importing libraries
2025-01-08 21:00:01,496:INFO:Copying training dataset
2025-01-08 21:00:01,505:INFO:Defining folds
2025-01-08 21:00:01,505:INFO:Declaring metric variables
2025-01-08 21:00:01,511:INFO:Importing untrained model
2025-01-08 21:00:01,515:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 21:00:01,542:INFO:Starting cross validation
2025-01-08 21:00:01,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:01,661:INFO:Calculating mean and std
2025-01-08 21:00:01,662:INFO:Creating metrics dataframe
2025-01-08 21:00:01,665:INFO:Uploading results into container
2025-01-08 21:00:01,665:INFO:Uploading model into container now
2025-01-08 21:00:01,665:INFO:_master_model_container: 7
2025-01-08 21:00:01,665:INFO:_display_container: 2
2025-01-08 21:00:01,665:INFO:OrthogonalMatchingPursuit()
2025-01-08 21:00:01,665:INFO:create_model() successfully completed......................................
2025-01-08 21:00:01,775:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:01,776:INFO:Creating metrics dataframe
2025-01-08 21:00:01,788:INFO:Initializing Bayesian Ridge
2025-01-08 21:00:01,788:INFO:Total runtime is 0.12856956322987872 minutes
2025-01-08 21:00:01,792:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:01,793:INFO:Initializing create_model()
2025-01-08 21:00:01,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:01,793:INFO:Checking exceptions
2025-01-08 21:00:01,793:INFO:Importing libraries
2025-01-08 21:00:01,794:INFO:Copying training dataset
2025-01-08 21:00:01,801:INFO:Defining folds
2025-01-08 21:00:01,801:INFO:Declaring metric variables
2025-01-08 21:00:01,806:INFO:Importing untrained model
2025-01-08 21:00:01,813:INFO:Bayesian Ridge Imported successfully
2025-01-08 21:00:01,823:INFO:Starting cross validation
2025-01-08 21:00:01,824:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:02,023:INFO:Calculating mean and std
2025-01-08 21:00:02,025:INFO:Creating metrics dataframe
2025-01-08 21:00:02,027:INFO:Uploading results into container
2025-01-08 21:00:02,028:INFO:Uploading model into container now
2025-01-08 21:00:02,029:INFO:_master_model_container: 8
2025-01-08 21:00:02,029:INFO:_display_container: 2
2025-01-08 21:00:02,029:INFO:BayesianRidge()
2025-01-08 21:00:02,030:INFO:create_model() successfully completed......................................
2025-01-08 21:00:02,139:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:02,139:INFO:Creating metrics dataframe
2025-01-08 21:00:02,151:INFO:Initializing Passive Aggressive Regressor
2025-01-08 21:00:02,151:INFO:Total runtime is 0.13461639483769733 minutes
2025-01-08 21:00:02,156:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:02,157:INFO:Initializing create_model()
2025-01-08 21:00:02,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:02,157:INFO:Checking exceptions
2025-01-08 21:00:02,157:INFO:Importing libraries
2025-01-08 21:00:02,157:INFO:Copying training dataset
2025-01-08 21:00:02,164:INFO:Defining folds
2025-01-08 21:00:02,164:INFO:Declaring metric variables
2025-01-08 21:00:02,171:INFO:Importing untrained model
2025-01-08 21:00:02,176:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 21:00:02,185:INFO:Starting cross validation
2025-01-08 21:00:02,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:02,376:INFO:Calculating mean and std
2025-01-08 21:00:02,377:INFO:Creating metrics dataframe
2025-01-08 21:00:02,381:INFO:Uploading results into container
2025-01-08 21:00:02,382:INFO:Uploading model into container now
2025-01-08 21:00:02,383:INFO:_master_model_container: 9
2025-01-08 21:00:02,383:INFO:_display_container: 2
2025-01-08 21:00:02,383:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 21:00:02,383:INFO:create_model() successfully completed......................................
2025-01-08 21:00:02,492:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:02,492:INFO:Creating metrics dataframe
2025-01-08 21:00:02,504:INFO:Initializing Huber Regressor
2025-01-08 21:00:02,505:INFO:Total runtime is 0.1405120770136515 minutes
2025-01-08 21:00:02,509:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:02,509:INFO:Initializing create_model()
2025-01-08 21:00:02,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:02,510:INFO:Checking exceptions
2025-01-08 21:00:02,510:INFO:Importing libraries
2025-01-08 21:00:02,510:INFO:Copying training dataset
2025-01-08 21:00:02,517:INFO:Defining folds
2025-01-08 21:00:02,517:INFO:Declaring metric variables
2025-01-08 21:00:02,523:INFO:Importing untrained model
2025-01-08 21:00:02,527:INFO:Huber Regressor Imported successfully
2025-01-08 21:00:02,537:INFO:Starting cross validation
2025-01-08 21:00:02,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:02,775:INFO:Calculating mean and std
2025-01-08 21:00:02,777:INFO:Creating metrics dataframe
2025-01-08 21:00:02,779:INFO:Uploading results into container
2025-01-08 21:00:02,780:INFO:Uploading model into container now
2025-01-08 21:00:02,780:INFO:_master_model_container: 10
2025-01-08 21:00:02,780:INFO:_display_container: 2
2025-01-08 21:00:02,781:INFO:HuberRegressor()
2025-01-08 21:00:02,781:INFO:create_model() successfully completed......................................
2025-01-08 21:00:02,890:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:02,890:INFO:Creating metrics dataframe
2025-01-08 21:00:02,902:INFO:Initializing K Neighbors Regressor
2025-01-08 21:00:02,903:INFO:Total runtime is 0.1471419294675191 minutes
2025-01-08 21:00:02,908:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:02,908:INFO:Initializing create_model()
2025-01-08 21:00:02,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:02,908:INFO:Checking exceptions
2025-01-08 21:00:02,908:INFO:Importing libraries
2025-01-08 21:00:02,909:INFO:Copying training dataset
2025-01-08 21:00:02,916:INFO:Defining folds
2025-01-08 21:00:02,917:INFO:Declaring metric variables
2025-01-08 21:00:02,924:INFO:Importing untrained model
2025-01-08 21:00:02,929:INFO:K Neighbors Regressor Imported successfully
2025-01-08 21:00:02,939:INFO:Starting cross validation
2025-01-08 21:00:02,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:03,114:INFO:Calculating mean and std
2025-01-08 21:00:03,115:INFO:Creating metrics dataframe
2025-01-08 21:00:03,118:INFO:Uploading results into container
2025-01-08 21:00:03,118:INFO:Uploading model into container now
2025-01-08 21:00:03,119:INFO:_master_model_container: 11
2025-01-08 21:00:03,119:INFO:_display_container: 2
2025-01-08 21:00:03,122:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 21:00:03,123:INFO:create_model() successfully completed......................................
2025-01-08 21:00:03,231:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:03,231:INFO:Creating metrics dataframe
2025-01-08 21:00:03,245:INFO:Initializing Decision Tree Regressor
2025-01-08 21:00:03,245:INFO:Total runtime is 0.15284653504689533 minutes
2025-01-08 21:00:03,250:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:03,250:INFO:Initializing create_model()
2025-01-08 21:00:03,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:03,251:INFO:Checking exceptions
2025-01-08 21:00:03,251:INFO:Importing libraries
2025-01-08 21:00:03,251:INFO:Copying training dataset
2025-01-08 21:00:03,259:INFO:Defining folds
2025-01-08 21:00:03,259:INFO:Declaring metric variables
2025-01-08 21:00:03,264:INFO:Importing untrained model
2025-01-08 21:00:03,271:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:00:03,280:INFO:Starting cross validation
2025-01-08 21:00:03,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:03,445:INFO:Calculating mean and std
2025-01-08 21:00:03,446:INFO:Creating metrics dataframe
2025-01-08 21:00:03,450:INFO:Uploading results into container
2025-01-08 21:00:03,451:INFO:Uploading model into container now
2025-01-08 21:00:03,451:INFO:_master_model_container: 12
2025-01-08 21:00:03,452:INFO:_display_container: 2
2025-01-08 21:00:03,452:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:00:03,452:INFO:create_model() successfully completed......................................
2025-01-08 21:00:03,561:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:03,561:INFO:Creating metrics dataframe
2025-01-08 21:00:03,575:INFO:Initializing Random Forest Regressor
2025-01-08 21:00:03,575:INFO:Total runtime is 0.15834327538808185 minutes
2025-01-08 21:00:03,580:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:03,580:INFO:Initializing create_model()
2025-01-08 21:00:03,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:03,580:INFO:Checking exceptions
2025-01-08 21:00:03,580:INFO:Importing libraries
2025-01-08 21:00:03,581:INFO:Copying training dataset
2025-01-08 21:00:03,588:INFO:Defining folds
2025-01-08 21:00:03,588:INFO:Declaring metric variables
2025-01-08 21:00:03,593:INFO:Importing untrained model
2025-01-08 21:00:03,598:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:00:03,609:INFO:Starting cross validation
2025-01-08 21:00:03,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:07,651:INFO:Calculating mean and std
2025-01-08 21:00:07,653:INFO:Creating metrics dataframe
2025-01-08 21:00:07,655:INFO:Uploading results into container
2025-01-08 21:00:07,656:INFO:Uploading model into container now
2025-01-08 21:00:07,657:INFO:_master_model_container: 13
2025-01-08 21:00:07,658:INFO:_display_container: 2
2025-01-08 21:00:07,659:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:07,659:INFO:create_model() successfully completed......................................
2025-01-08 21:00:07,766:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:07,766:INFO:Creating metrics dataframe
2025-01-08 21:00:07,780:INFO:Initializing Extra Trees Regressor
2025-01-08 21:00:07,780:INFO:Total runtime is 0.22842901547749836 minutes
2025-01-08 21:00:07,785:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:07,785:INFO:Initializing create_model()
2025-01-08 21:00:07,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:07,785:INFO:Checking exceptions
2025-01-08 21:00:07,785:INFO:Importing libraries
2025-01-08 21:00:07,785:INFO:Copying training dataset
2025-01-08 21:00:07,794:INFO:Defining folds
2025-01-08 21:00:07,795:INFO:Declaring metric variables
2025-01-08 21:00:07,799:INFO:Importing untrained model
2025-01-08 21:00:07,805:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:00:07,815:INFO:Starting cross validation
2025-01-08 21:00:07,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:09,959:INFO:Calculating mean and std
2025-01-08 21:00:09,961:INFO:Creating metrics dataframe
2025-01-08 21:00:09,963:INFO:Uploading results into container
2025-01-08 21:00:09,965:INFO:Uploading model into container now
2025-01-08 21:00:09,966:INFO:_master_model_container: 14
2025-01-08 21:00:09,966:INFO:_display_container: 2
2025-01-08 21:00:09,967:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:09,967:INFO:create_model() successfully completed......................................
2025-01-08 21:00:10,077:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:10,077:INFO:Creating metrics dataframe
2025-01-08 21:00:10,095:INFO:Initializing AdaBoost Regressor
2025-01-08 21:00:10,096:INFO:Total runtime is 0.2670325477917989 minutes
2025-01-08 21:00:10,100:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:10,101:INFO:Initializing create_model()
2025-01-08 21:00:10,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:10,101:INFO:Checking exceptions
2025-01-08 21:00:10,101:INFO:Importing libraries
2025-01-08 21:00:10,101:INFO:Copying training dataset
2025-01-08 21:00:10,108:INFO:Defining folds
2025-01-08 21:00:10,108:INFO:Declaring metric variables
2025-01-08 21:00:10,115:INFO:Importing untrained model
2025-01-08 21:00:10,120:INFO:AdaBoost Regressor Imported successfully
2025-01-08 21:00:10,142:INFO:Starting cross validation
2025-01-08 21:00:10,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:11,082:INFO:Calculating mean and std
2025-01-08 21:00:11,084:INFO:Creating metrics dataframe
2025-01-08 21:00:11,086:INFO:Uploading results into container
2025-01-08 21:00:11,087:INFO:Uploading model into container now
2025-01-08 21:00:11,088:INFO:_master_model_container: 15
2025-01-08 21:00:11,088:INFO:_display_container: 2
2025-01-08 21:00:11,088:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 21:00:11,089:INFO:create_model() successfully completed......................................
2025-01-08 21:00:11,206:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:11,207:INFO:Creating metrics dataframe
2025-01-08 21:00:11,225:INFO:Initializing Gradient Boosting Regressor
2025-01-08 21:00:11,225:INFO:Total runtime is 0.2858541369438171 minutes
2025-01-08 21:00:11,232:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:11,232:INFO:Initializing create_model()
2025-01-08 21:00:11,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:11,232:INFO:Checking exceptions
2025-01-08 21:00:11,232:INFO:Importing libraries
2025-01-08 21:00:11,233:INFO:Copying training dataset
2025-01-08 21:00:11,241:INFO:Defining folds
2025-01-08 21:00:11,241:INFO:Declaring metric variables
2025-01-08 21:00:11,245:INFO:Importing untrained model
2025-01-08 21:00:11,251:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:00:11,260:INFO:Starting cross validation
2025-01-08 21:00:11,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:12,787:INFO:Calculating mean and std
2025-01-08 21:00:12,789:INFO:Creating metrics dataframe
2025-01-08 21:00:12,791:INFO:Uploading results into container
2025-01-08 21:00:12,792:INFO:Uploading model into container now
2025-01-08 21:00:12,792:INFO:_master_model_container: 16
2025-01-08 21:00:12,792:INFO:_display_container: 2
2025-01-08 21:00:12,793:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:00:12,794:INFO:create_model() successfully completed......................................
2025-01-08 21:00:12,902:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:12,902:INFO:Creating metrics dataframe
2025-01-08 21:00:12,917:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 21:00:12,918:INFO:Total runtime is 0.31406978368759153 minutes
2025-01-08 21:00:12,922:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:12,922:INFO:Initializing create_model()
2025-01-08 21:00:12,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:12,922:INFO:Checking exceptions
2025-01-08 21:00:12,923:INFO:Importing libraries
2025-01-08 21:00:12,923:INFO:Copying training dataset
2025-01-08 21:00:12,932:INFO:Defining folds
2025-01-08 21:00:12,932:INFO:Declaring metric variables
2025-01-08 21:00:12,937:INFO:Importing untrained model
2025-01-08 21:00:12,944:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:00:12,955:INFO:Starting cross validation
2025-01-08 21:00:12,957:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:13,672:INFO:Calculating mean and std
2025-01-08 21:00:13,674:INFO:Creating metrics dataframe
2025-01-08 21:00:13,677:INFO:Uploading results into container
2025-01-08 21:00:13,678:INFO:Uploading model into container now
2025-01-08 21:00:13,680:INFO:_master_model_container: 17
2025-01-08 21:00:13,680:INFO:_display_container: 2
2025-01-08 21:00:13,680:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:13,680:INFO:create_model() successfully completed......................................
2025-01-08 21:00:13,787:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:13,787:INFO:Creating metrics dataframe
2025-01-08 21:00:13,803:INFO:Initializing Dummy Regressor
2025-01-08 21:00:13,803:INFO:Total runtime is 0.328810703754425 minutes
2025-01-08 21:00:13,807:INFO:SubProcess create_model() called ==================================
2025-01-08 21:00:13,808:INFO:Initializing create_model()
2025-01-08 21:00:13,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6E9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:13,808:INFO:Checking exceptions
2025-01-08 21:00:13,808:INFO:Importing libraries
2025-01-08 21:00:13,809:INFO:Copying training dataset
2025-01-08 21:00:13,816:INFO:Defining folds
2025-01-08 21:00:13,816:INFO:Declaring metric variables
2025-01-08 21:00:13,820:INFO:Importing untrained model
2025-01-08 21:00:13,827:INFO:Dummy Regressor Imported successfully
2025-01-08 21:00:13,837:INFO:Starting cross validation
2025-01-08 21:00:13,838:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:00:13,955:INFO:Calculating mean and std
2025-01-08 21:00:13,957:INFO:Creating metrics dataframe
2025-01-08 21:00:13,959:INFO:Uploading results into container
2025-01-08 21:00:13,960:INFO:Uploading model into container now
2025-01-08 21:00:13,960:INFO:_master_model_container: 18
2025-01-08 21:00:13,960:INFO:_display_container: 2
2025-01-08 21:00:13,961:INFO:DummyRegressor()
2025-01-08 21:00:13,961:INFO:create_model() successfully completed......................................
2025-01-08 21:00:14,129:INFO:SubProcess create_model() end ==================================
2025-01-08 21:00:14,129:INFO:Creating metrics dataframe
2025-01-08 21:00:14,147:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:00:14,158:INFO:Initializing create_model()
2025-01-08 21:00:14,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:14,158:INFO:Checking exceptions
2025-01-08 21:00:14,160:INFO:Importing libraries
2025-01-08 21:00:14,161:INFO:Copying training dataset
2025-01-08 21:00:14,169:INFO:Defining folds
2025-01-08 21:00:14,169:INFO:Declaring metric variables
2025-01-08 21:00:14,169:INFO:Importing untrained model
2025-01-08 21:00:14,169:INFO:Declaring custom model
2025-01-08 21:00:14,170:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:00:14,171:INFO:Cross validation set to False
2025-01-08 21:00:14,171:INFO:Fitting Model
2025-01-08 21:00:14,440:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:14,440:INFO:create_model() successfully completed......................................
2025-01-08 21:00:14,556:INFO:Initializing create_model()
2025-01-08 21:00:14,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:14,557:INFO:Checking exceptions
2025-01-08 21:00:14,559:INFO:Importing libraries
2025-01-08 21:00:14,559:INFO:Copying training dataset
2025-01-08 21:00:14,567:INFO:Defining folds
2025-01-08 21:00:14,567:INFO:Declaring metric variables
2025-01-08 21:00:14,567:INFO:Importing untrained model
2025-01-08 21:00:14,567:INFO:Declaring custom model
2025-01-08 21:00:14,568:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:00:14,569:INFO:Cross validation set to False
2025-01-08 21:00:14,569:INFO:Fitting Model
2025-01-08 21:00:15,070:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:15,070:INFO:create_model() successfully completed......................................
2025-01-08 21:00:15,184:INFO:Initializing create_model()
2025-01-08 21:00:15,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:15,185:INFO:Checking exceptions
2025-01-08 21:00:15,188:INFO:Importing libraries
2025-01-08 21:00:15,188:INFO:Copying training dataset
2025-01-08 21:00:15,195:INFO:Defining folds
2025-01-08 21:00:15,195:INFO:Declaring metric variables
2025-01-08 21:00:15,195:INFO:Importing untrained model
2025-01-08 21:00:15,195:INFO:Declaring custom model
2025-01-08 21:00:15,196:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:00:15,198:INFO:Cross validation set to False
2025-01-08 21:00:15,198:INFO:Fitting Model
2025-01-08 21:00:15,223:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:00:15,223:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000109 seconds.
2025-01-08 21:00:15,223:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:00:15,224:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:00:15,225:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:00:15,225:INFO:[LightGBM] [Info] Start training from score 3808.225368
2025-01-08 21:00:15,276:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:00:15,276:INFO:create_model() successfully completed......................................
2025-01-08 21:00:15,390:INFO:Initializing create_model()
2025-01-08 21:00:15,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:15,391:INFO:Checking exceptions
2025-01-08 21:00:15,393:INFO:Importing libraries
2025-01-08 21:00:15,393:INFO:Copying training dataset
2025-01-08 21:00:15,401:INFO:Defining folds
2025-01-08 21:00:15,401:INFO:Declaring metric variables
2025-01-08 21:00:15,401:INFO:Importing untrained model
2025-01-08 21:00:15,401:INFO:Declaring custom model
2025-01-08 21:00:15,402:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:00:15,403:INFO:Cross validation set to False
2025-01-08 21:00:15,403:INFO:Fitting Model
2025-01-08 21:00:15,434:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:00:15,434:INFO:create_model() successfully completed......................................
2025-01-08 21:00:15,551:INFO:Initializing create_model()
2025-01-08 21:00:15,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:00:15,552:INFO:Checking exceptions
2025-01-08 21:00:15,554:INFO:Importing libraries
2025-01-08 21:00:15,554:INFO:Copying training dataset
2025-01-08 21:00:15,560:INFO:Defining folds
2025-01-08 21:00:15,560:INFO:Declaring metric variables
2025-01-08 21:00:15,561:INFO:Importing untrained model
2025-01-08 21:00:15,561:INFO:Declaring custom model
2025-01-08 21:00:15,562:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:00:15,562:INFO:Cross validation set to False
2025-01-08 21:00:15,562:INFO:Fitting Model
2025-01-08 21:00:16,052:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:00:16,052:INFO:create_model() successfully completed......................................
2025-01-08 21:00:16,202:INFO:_master_model_container: 18
2025-01-08 21:00:16,203:INFO:_display_container: 2
2025-01-08 21:00:16,204:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123)]
2025-01-08 21:00:16,204:INFO:compare_models() successfully completed......................................
2025-01-08 21:01:44,798:INFO:Initializing tune_model()
2025-01-08 21:01:44,798:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:01:44,798:INFO:Checking exceptions
2025-01-08 21:01:44,818:INFO:Copying training dataset
2025-01-08 21:01:44,825:INFO:Checking base model
2025-01-08 21:01:44,825:INFO:Base model : Extra Trees Regressor
2025-01-08 21:01:44,830:INFO:Declaring metric variables
2025-01-08 21:01:44,836:INFO:Defining Hyperparameters
2025-01-08 21:01:45,057:INFO:Tuning with n_jobs=-1
2025-01-08 21:01:45,057:INFO:Initializing RandomizedSearchCV
2025-01-08 21:02:48,934:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2025-01-08 21:02:48,935:INFO:Hyperparameter search completed
2025-01-08 21:02:48,935:INFO:SubProcess create_model() called ==================================
2025-01-08 21:02:48,936:INFO:Initializing create_model()
2025-01-08 21:02:48,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06CEFD890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2025-01-08 21:02:48,936:INFO:Checking exceptions
2025-01-08 21:02:48,936:INFO:Importing libraries
2025-01-08 21:02:48,937:INFO:Copying training dataset
2025-01-08 21:02:48,945:INFO:Defining folds
2025-01-08 21:02:48,945:INFO:Declaring metric variables
2025-01-08 21:02:48,949:INFO:Importing untrained model
2025-01-08 21:02:48,949:INFO:Declaring custom model
2025-01-08 21:02:48,955:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:02:48,965:INFO:Starting cross validation
2025-01-08 21:02:48,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:02:49,922:INFO:Calculating mean and std
2025-01-08 21:02:49,923:INFO:Creating metrics dataframe
2025-01-08 21:02:49,932:INFO:Finalizing model
2025-01-08 21:02:50,136:INFO:Uploading results into container
2025-01-08 21:02:50,137:INFO:Uploading model into container now
2025-01-08 21:02:50,138:INFO:_master_model_container: 19
2025-01-08 21:02:50,138:INFO:_display_container: 3
2025-01-08 21:02:50,139:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.1,
                    min_samples_leaf=4, min_samples_split=7, n_jobs=-1,
                    random_state=123)
2025-01-08 21:02:50,139:INFO:create_model() successfully completed......................................
2025-01-08 21:02:50,256:INFO:SubProcess create_model() end ==================================
2025-01-08 21:02:50,256:INFO:choose_better activated
2025-01-08 21:02:50,261:INFO:SubProcess create_model() called ==================================
2025-01-08 21:02:50,262:INFO:Initializing create_model()
2025-01-08 21:02:50,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:02:50,262:INFO:Checking exceptions
2025-01-08 21:02:50,264:INFO:Importing libraries
2025-01-08 21:02:50,264:INFO:Copying training dataset
2025-01-08 21:02:50,270:INFO:Defining folds
2025-01-08 21:02:50,270:INFO:Declaring metric variables
2025-01-08 21:02:50,270:INFO:Importing untrained model
2025-01-08 21:02:50,271:INFO:Declaring custom model
2025-01-08 21:02:50,271:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:02:50,272:INFO:Starting cross validation
2025-01-08 21:02:50,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:02:52,519:INFO:Calculating mean and std
2025-01-08 21:02:52,520:INFO:Creating metrics dataframe
2025-01-08 21:02:52,522:INFO:Finalizing model
2025-01-08 21:02:52,783:INFO:Uploading results into container
2025-01-08 21:02:52,783:INFO:Uploading model into container now
2025-01-08 21:02:52,784:INFO:_master_model_container: 20
2025-01-08 21:02:52,784:INFO:_display_container: 4
2025-01-08 21:02:52,784:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:02:52,785:INFO:create_model() successfully completed......................................
2025-01-08 21:02:52,891:INFO:SubProcess create_model() end ==================================
2025-01-08 21:02:52,892:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9755
2025-01-08 21:02:52,893:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.1,
                    min_samples_leaf=4, min_samples_split=7, n_jobs=-1,
                    random_state=123) result for R2 is 0.9556
2025-01-08 21:02:52,893:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:02:52,893:INFO:choose_better completed
2025-01-08 21:02:52,893:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:02:52,908:INFO:_master_model_container: 20
2025-01-08 21:02:52,908:INFO:_display_container: 3
2025-01-08 21:02:52,908:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:02:52,908:INFO:tune_model() successfully completed......................................
2025-01-08 21:02:53,028:INFO:Initializing tune_model()
2025-01-08 21:02:53,028:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:02:53,028:INFO:Checking exceptions
2025-01-08 21:02:53,050:INFO:Copying training dataset
2025-01-08 21:02:53,056:INFO:Checking base model
2025-01-08 21:02:53,056:INFO:Base model : Random Forest Regressor
2025-01-08 21:02:53,062:INFO:Declaring metric variables
2025-01-08 21:02:53,070:INFO:Defining Hyperparameters
2025-01-08 21:02:53,197:INFO:Tuning with n_jobs=-1
2025-01-08 21:02:53,197:INFO:Initializing RandomizedSearchCV
2025-01-08 21:05:09,768:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 21:05:09,769:INFO:Hyperparameter search completed
2025-01-08 21:05:09,769:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:09,770:INFO:Initializing create_model()
2025-01-08 21:05:09,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06B2BCDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 21:05:09,770:INFO:Checking exceptions
2025-01-08 21:05:09,771:INFO:Importing libraries
2025-01-08 21:05:09,771:INFO:Copying training dataset
2025-01-08 21:05:09,780:INFO:Defining folds
2025-01-08 21:05:09,780:INFO:Declaring metric variables
2025-01-08 21:05:09,784:INFO:Importing untrained model
2025-01-08 21:05:09,784:INFO:Declaring custom model
2025-01-08 21:05:09,789:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:05:09,800:INFO:Starting cross validation
2025-01-08 21:05:09,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:13,977:INFO:Calculating mean and std
2025-01-08 21:05:13,979:INFO:Creating metrics dataframe
2025-01-08 21:05:13,988:INFO:Finalizing model
2025-01-08 21:05:14,515:INFO:Uploading results into container
2025-01-08 21:05:14,517:INFO:Uploading model into container now
2025-01-08 21:05:14,517:INFO:_master_model_container: 21
2025-01-08 21:05:14,518:INFO:_display_container: 4
2025-01-08 21:05:14,518:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='sqrt',
                      min_impurity_decrease=0.0002, min_samples_leaf=5,
                      min_samples_split=7, n_estimators=200, n_jobs=-1,
                      random_state=123)
2025-01-08 21:05:14,518:INFO:create_model() successfully completed......................................
2025-01-08 21:05:14,630:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:14,630:INFO:choose_better activated
2025-01-08 21:05:14,634:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:14,635:INFO:Initializing create_model()
2025-01-08 21:05:14,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:05:14,635:INFO:Checking exceptions
2025-01-08 21:05:14,637:INFO:Importing libraries
2025-01-08 21:05:14,637:INFO:Copying training dataset
2025-01-08 21:05:14,643:INFO:Defining folds
2025-01-08 21:05:14,644:INFO:Declaring metric variables
2025-01-08 21:05:14,644:INFO:Importing untrained model
2025-01-08 21:05:14,644:INFO:Declaring custom model
2025-01-08 21:05:14,645:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:05:14,645:INFO:Starting cross validation
2025-01-08 21:05:14,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:18,915:INFO:Calculating mean and std
2025-01-08 21:05:18,916:INFO:Creating metrics dataframe
2025-01-08 21:05:18,918:INFO:Finalizing model
2025-01-08 21:05:19,403:INFO:Uploading results into container
2025-01-08 21:05:19,403:INFO:Uploading model into container now
2025-01-08 21:05:19,404:INFO:_master_model_container: 22
2025-01-08 21:05:19,404:INFO:_display_container: 5
2025-01-08 21:05:19,404:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:05:19,404:INFO:create_model() successfully completed......................................
2025-01-08 21:05:19,513:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:19,514:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9748
2025-01-08 21:05:19,514:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='sqrt',
                      min_impurity_decrease=0.0002, min_samples_leaf=5,
                      min_samples_split=7, n_estimators=200, n_jobs=-1,
                      random_state=123) result for R2 is 0.9715
2025-01-08 21:05:19,515:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:05:19,515:INFO:choose_better completed
2025-01-08 21:05:19,515:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:05:19,530:INFO:_master_model_container: 22
2025-01-08 21:05:19,530:INFO:_display_container: 4
2025-01-08 21:05:19,530:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:05:19,531:INFO:tune_model() successfully completed......................................
2025-01-08 21:05:19,648:INFO:Initializing tune_model()
2025-01-08 21:05:19,648:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:05:19,648:INFO:Checking exceptions
2025-01-08 21:05:19,667:INFO:Copying training dataset
2025-01-08 21:05:19,676:INFO:Checking base model
2025-01-08 21:05:19,677:INFO:Base model : Light Gradient Boosting Machine
2025-01-08 21:05:19,683:INFO:Declaring metric variables
2025-01-08 21:05:19,692:INFO:Defining Hyperparameters
2025-01-08 21:05:19,818:INFO:Tuning with n_jobs=-1
2025-01-08 21:05:19,818:INFO:Initializing RandomizedSearchCV
2025-01-08 21:05:29,119:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_split_gain': 0.7, 'actual_estimator__min_child_samples': 96, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 4, 'actual_estimator__bagging_fraction': 0.6}
2025-01-08 21:05:29,120:INFO:Hyperparameter search completed
2025-01-08 21:05:29,120:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:29,121:INFO:Initializing create_model()
2025-01-08 21:05:29,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D29FE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0001, 'num_leaves': 10, 'n_estimators': 180, 'min_split_gain': 0.7, 'min_child_samples': 96, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 4, 'bagging_fraction': 0.6})
2025-01-08 21:05:29,121:INFO:Checking exceptions
2025-01-08 21:05:29,122:INFO:Importing libraries
2025-01-08 21:05:29,123:INFO:Copying training dataset
2025-01-08 21:05:29,132:INFO:Defining folds
2025-01-08 21:05:29,133:INFO:Declaring metric variables
2025-01-08 21:05:29,137:INFO:Importing untrained model
2025-01-08 21:05:29,137:INFO:Declaring custom model
2025-01-08 21:05:29,142:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:05:29,150:INFO:Starting cross validation
2025-01-08 21:05:29,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:29,847:INFO:Calculating mean and std
2025-01-08 21:05:29,848:INFO:Creating metrics dataframe
2025-01-08 21:05:29,855:INFO:Finalizing model
2025-01-08 21:05:29,868:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-08 21:05:29,868:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-08 21:05:29,868:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-08 21:05:29,870:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:05:29,871:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-08 21:05:29,871:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-08 21:05:29,871:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-08 21:05:29,871:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000105 seconds.
2025-01-08 21:05:29,871:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:05:29,871:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:05:29,872:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:05:29,872:INFO:[LightGBM] [Info] Start training from score 3808.225368
2025-01-08 21:05:29,965:INFO:Uploading results into container
2025-01-08 21:05:29,967:INFO:Uploading model into container now
2025-01-08 21:05:29,967:INFO:_master_model_container: 23
2025-01-08 21:05:29,967:INFO:_display_container: 5
2025-01-08 21:05:29,968:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1)
2025-01-08 21:05:29,968:INFO:create_model() successfully completed......................................
2025-01-08 21:05:30,087:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:30,088:INFO:choose_better activated
2025-01-08 21:05:30,092:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:30,092:INFO:Initializing create_model()
2025-01-08 21:05:30,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:05:30,092:INFO:Checking exceptions
2025-01-08 21:05:30,095:INFO:Importing libraries
2025-01-08 21:05:30,095:INFO:Copying training dataset
2025-01-08 21:05:30,102:INFO:Defining folds
2025-01-08 21:05:30,102:INFO:Declaring metric variables
2025-01-08 21:05:30,102:INFO:Importing untrained model
2025-01-08 21:05:30,102:INFO:Declaring custom model
2025-01-08 21:05:30,103:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:05:30,103:INFO:Starting cross validation
2025-01-08 21:05:30,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:30,823:INFO:Calculating mean and std
2025-01-08 21:05:30,824:INFO:Creating metrics dataframe
2025-01-08 21:05:30,826:INFO:Finalizing model
2025-01-08 21:05:30,838:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:05:30,839:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000094 seconds.
2025-01-08 21:05:30,839:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:05:30,839:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:05:30,839:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:05:30,839:INFO:[LightGBM] [Info] Start training from score 3808.225368
2025-01-08 21:05:30,955:INFO:Uploading results into container
2025-01-08 21:05:30,956:INFO:Uploading model into container now
2025-01-08 21:05:30,956:INFO:_master_model_container: 24
2025-01-08 21:05:30,956:INFO:_display_container: 6
2025-01-08 21:05:30,957:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:05:30,957:INFO:create_model() successfully completed......................................
2025-01-08 21:05:31,065:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:31,065:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9683
2025-01-08 21:05:31,066:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1) result for R2 is 0.948
2025-01-08 21:05:31,067:INFO:LGBMRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:05:31,067:INFO:choose_better completed
2025-01-08 21:05:31,067:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:05:31,080:INFO:_master_model_container: 24
2025-01-08 21:05:31,080:INFO:_display_container: 5
2025-01-08 21:05:31,081:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:05:31,081:INFO:tune_model() successfully completed......................................
2025-01-08 21:05:31,224:INFO:Initializing tune_model()
2025-01-08 21:05:31,224:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:05:31,224:INFO:Checking exceptions
2025-01-08 21:05:31,244:INFO:Copying training dataset
2025-01-08 21:05:31,253:INFO:Checking base model
2025-01-08 21:05:31,253:INFO:Base model : Decision Tree Regressor
2025-01-08 21:05:31,259:INFO:Declaring metric variables
2025-01-08 21:05:31,266:INFO:Defining Hyperparameters
2025-01-08 21:05:31,389:INFO:Tuning with n_jobs=-1
2025-01-08 21:05:31,389:INFO:Initializing RandomizedSearchCV
2025-01-08 21:05:34,043:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'friedman_mse'}
2025-01-08 21:05:34,043:INFO:Hyperparameter search completed
2025-01-08 21:05:34,044:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:34,044:INFO:Initializing create_model()
2025-01-08 21:05:34,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D591DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'friedman_mse'})
2025-01-08 21:05:34,045:INFO:Checking exceptions
2025-01-08 21:05:34,045:INFO:Importing libraries
2025-01-08 21:05:34,045:INFO:Copying training dataset
2025-01-08 21:05:34,054:INFO:Defining folds
2025-01-08 21:05:34,055:INFO:Declaring metric variables
2025-01-08 21:05:34,058:INFO:Importing untrained model
2025-01-08 21:05:34,059:INFO:Declaring custom model
2025-01-08 21:05:34,063:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:05:34,072:INFO:Starting cross validation
2025-01-08 21:05:34,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:34,222:INFO:Calculating mean and std
2025-01-08 21:05:34,223:INFO:Creating metrics dataframe
2025-01-08 21:05:34,232:INFO:Finalizing model
2025-01-08 21:05:34,259:INFO:Uploading results into container
2025-01-08 21:05:34,260:INFO:Uploading model into container now
2025-01-08 21:05:34,261:INFO:_master_model_container: 25
2025-01-08 21:05:34,261:INFO:_display_container: 6
2025-01-08 21:05:34,262:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:05:34,262:INFO:create_model() successfully completed......................................
2025-01-08 21:05:34,376:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:34,376:INFO:choose_better activated
2025-01-08 21:05:34,380:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:34,382:INFO:Initializing create_model()
2025-01-08 21:05:34,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:05:34,382:INFO:Checking exceptions
2025-01-08 21:05:34,384:INFO:Importing libraries
2025-01-08 21:05:34,384:INFO:Copying training dataset
2025-01-08 21:05:34,390:INFO:Defining folds
2025-01-08 21:05:34,390:INFO:Declaring metric variables
2025-01-08 21:05:34,390:INFO:Importing untrained model
2025-01-08 21:05:34,391:INFO:Declaring custom model
2025-01-08 21:05:34,391:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:05:34,391:INFO:Starting cross validation
2025-01-08 21:05:34,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:05:34,557:INFO:Calculating mean and std
2025-01-08 21:05:34,558:INFO:Creating metrics dataframe
2025-01-08 21:05:34,560:INFO:Finalizing model
2025-01-08 21:05:34,590:INFO:Uploading results into container
2025-01-08 21:05:34,591:INFO:Uploading model into container now
2025-01-08 21:05:34,591:INFO:_master_model_container: 26
2025-01-08 21:05:34,591:INFO:_display_container: 7
2025-01-08 21:05:34,591:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:05:34,591:INFO:create_model() successfully completed......................................
2025-01-08 21:05:34,699:INFO:SubProcess create_model() end ==================================
2025-01-08 21:05:34,700:INFO:DecisionTreeRegressor(random_state=123) result for R2 is 0.9621
2025-01-08 21:05:34,701:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123) result for R2 is 0.9662
2025-01-08 21:05:34,701:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123) is best model
2025-01-08 21:05:34,701:INFO:choose_better completed
2025-01-08 21:05:34,714:INFO:_master_model_container: 26
2025-01-08 21:05:34,714:INFO:_display_container: 6
2025-01-08 21:05:34,715:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:05:34,715:INFO:tune_model() successfully completed......................................
2025-01-08 21:05:34,828:INFO:Initializing tune_model()
2025-01-08 21:05:34,829:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:05:34,829:INFO:Checking exceptions
2025-01-08 21:05:34,849:INFO:Copying training dataset
2025-01-08 21:05:34,857:INFO:Checking base model
2025-01-08 21:05:34,857:INFO:Base model : Gradient Boosting Regressor
2025-01-08 21:05:34,864:INFO:Declaring metric variables
2025-01-08 21:05:34,871:INFO:Defining Hyperparameters
2025-01-08 21:05:34,994:INFO:Tuning with n_jobs=-1
2025-01-08 21:05:34,995:INFO:Initializing RandomizedSearchCV
2025-01-08 21:05:55,051:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.15}
2025-01-08 21:05:55,052:INFO:Hyperparameter search completed
2025-01-08 21:05:55,052:INFO:SubProcess create_model() called ==================================
2025-01-08 21:05:55,053:INFO:Initializing create_model()
2025-01-08 21:05:55,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06CEDA490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.85, 'n_estimators': 230, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'learning_rate': 0.15})
2025-01-08 21:05:55,054:INFO:Checking exceptions
2025-01-08 21:05:55,054:INFO:Importing libraries
2025-01-08 21:05:55,054:INFO:Copying training dataset
2025-01-08 21:05:55,062:INFO:Defining folds
2025-01-08 21:05:55,062:INFO:Declaring metric variables
2025-01-08 21:05:55,067:INFO:Importing untrained model
2025-01-08 21:05:55,068:INFO:Declaring custom model
2025-01-08 21:05:55,073:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:05:55,080:INFO:Starting cross validation
2025-01-08 21:05:55,083:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:06:01,344:INFO:Calculating mean and std
2025-01-08 21:06:01,346:INFO:Creating metrics dataframe
2025-01-08 21:06:01,354:INFO:Finalizing model
2025-01-08 21:06:03,461:INFO:Uploading results into container
2025-01-08 21:06:03,462:INFO:Uploading model into container now
2025-01-08 21:06:03,462:INFO:_master_model_container: 27
2025-01-08 21:06:03,463:INFO:_display_container: 7
2025-01-08 21:06:03,463:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:06:03,464:INFO:create_model() successfully completed......................................
2025-01-08 21:06:03,584:INFO:SubProcess create_model() end ==================================
2025-01-08 21:06:03,584:INFO:choose_better activated
2025-01-08 21:06:03,588:INFO:SubProcess create_model() called ==================================
2025-01-08 21:06:03,589:INFO:Initializing create_model()
2025-01-08 21:06:03,589:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:06:03,589:INFO:Checking exceptions
2025-01-08 21:06:03,592:INFO:Importing libraries
2025-01-08 21:06:03,592:INFO:Copying training dataset
2025-01-08 21:06:03,598:INFO:Defining folds
2025-01-08 21:06:03,598:INFO:Declaring metric variables
2025-01-08 21:06:03,598:INFO:Importing untrained model
2025-01-08 21:06:03,598:INFO:Declaring custom model
2025-01-08 21:06:03,599:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:06:03,599:INFO:Starting cross validation
2025-01-08 21:06:03,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:06:05,088:INFO:Calculating mean and std
2025-01-08 21:06:05,089:INFO:Creating metrics dataframe
2025-01-08 21:06:05,092:INFO:Finalizing model
2025-01-08 21:06:05,577:INFO:Uploading results into container
2025-01-08 21:06:05,578:INFO:Uploading model into container now
2025-01-08 21:06:05,578:INFO:_master_model_container: 28
2025-01-08 21:06:05,578:INFO:_display_container: 8
2025-01-08 21:06:05,579:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:06:05,579:INFO:create_model() successfully completed......................................
2025-01-08 21:06:05,686:INFO:SubProcess create_model() end ==================================
2025-01-08 21:06:05,686:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.9571
2025-01-08 21:06:05,687:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85) result for R2 is 0.9713
2025-01-08 21:06:05,688:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85) is best model
2025-01-08 21:06:05,688:INFO:choose_better completed
2025-01-08 21:06:05,701:INFO:_master_model_container: 28
2025-01-08 21:06:05,701:INFO:_display_container: 7
2025-01-08 21:06:05,702:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:06:05,702:INFO:tune_model() successfully completed......................................
2025-01-08 21:14:40,807:INFO:Initializing compare_models()
2025-01-08 21:14:40,807:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:14:40,808:INFO:Checking exceptions
2025-01-08 21:14:40,811:INFO:Preparing display monitor
2025-01-08 21:14:40,842:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:14:40,843:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-01-08 21:14:40,847:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:40,848:INFO:Initializing create_model()
2025-01-08 21:14:40,848:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:40,848:INFO:Checking exceptions
2025-01-08 21:14:40,849:INFO:Importing libraries
2025-01-08 21:14:40,849:INFO:Copying training dataset
2025-01-08 21:14:40,857:INFO:Defining folds
2025-01-08 21:14:40,857:INFO:Declaring metric variables
2025-01-08 21:14:40,863:INFO:Importing untrained model
2025-01-08 21:14:40,863:INFO:Declaring custom model
2025-01-08 21:14:40,870:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:14:40,880:INFO:Starting cross validation
2025-01-08 21:14:40,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:47,924:INFO:Calculating mean and std
2025-01-08 21:14:47,926:INFO:Creating metrics dataframe
2025-01-08 21:14:47,929:INFO:Uploading results into container
2025-01-08 21:14:47,929:INFO:Uploading model into container now
2025-01-08 21:14:47,930:INFO:_master_model_container: 29
2025-01-08 21:14:47,930:INFO:_display_container: 8
2025-01-08 21:14:47,931:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:14:47,931:INFO:create_model() successfully completed......................................
2025-01-08 21:14:48,046:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:48,046:INFO:Creating metrics dataframe
2025-01-08 21:14:48,056:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:14:48,057:INFO:Total runtime is 0.12024292151133219 minutes
2025-01-08 21:14:48,061:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:48,062:INFO:Initializing create_model()
2025-01-08 21:14:48,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:48,062:INFO:Checking exceptions
2025-01-08 21:14:48,062:INFO:Importing libraries
2025-01-08 21:14:48,063:INFO:Copying training dataset
2025-01-08 21:14:48,070:INFO:Defining folds
2025-01-08 21:14:48,070:INFO:Declaring metric variables
2025-01-08 21:14:48,077:INFO:Importing untrained model
2025-01-08 21:14:48,077:INFO:Declaring custom model
2025-01-08 21:14:48,084:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:14:48,097:INFO:Starting cross validation
2025-01-08 21:14:48,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:52,100:INFO:Calculating mean and std
2025-01-08 21:14:52,102:INFO:Creating metrics dataframe
2025-01-08 21:14:52,106:INFO:Uploading results into container
2025-01-08 21:14:52,107:INFO:Uploading model into container now
2025-01-08 21:14:52,107:INFO:_master_model_container: 30
2025-01-08 21:14:52,108:INFO:_display_container: 8
2025-01-08 21:14:52,108:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:14:52,108:INFO:create_model() successfully completed......................................
2025-01-08 21:14:52,220:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:52,221:INFO:Creating metrics dataframe
2025-01-08 21:14:52,230:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:14:52,230:INFO:Total runtime is 0.18978742758433023 minutes
2025-01-08 21:14:52,235:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:52,236:INFO:Initializing create_model()
2025-01-08 21:14:52,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:52,236:INFO:Checking exceptions
2025-01-08 21:14:52,237:INFO:Importing libraries
2025-01-08 21:14:52,237:INFO:Copying training dataset
2025-01-08 21:14:52,244:INFO:Defining folds
2025-01-08 21:14:52,244:INFO:Declaring metric variables
2025-01-08 21:14:52,250:INFO:Importing untrained model
2025-01-08 21:14:52,251:INFO:Declaring custom model
2025-01-08 21:14:52,256:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:14:52,265:INFO:Starting cross validation
2025-01-08 21:14:52,267:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:52,984:INFO:Calculating mean and std
2025-01-08 21:14:52,986:INFO:Creating metrics dataframe
2025-01-08 21:14:52,988:INFO:Uploading results into container
2025-01-08 21:14:52,989:INFO:Uploading model into container now
2025-01-08 21:14:52,989:INFO:_master_model_container: 31
2025-01-08 21:14:52,989:INFO:_display_container: 8
2025-01-08 21:14:52,990:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:14:52,991:INFO:create_model() successfully completed......................................
2025-01-08 21:14:53,100:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:53,100:INFO:Creating metrics dataframe
2025-01-08 21:14:53,111:INFO:Initializing custom model Decision Tree Regressor
2025-01-08 21:14:53,111:INFO:Total runtime is 0.2044782280921936 minutes
2025-01-08 21:14:53,116:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:53,117:INFO:Initializing create_model()
2025-01-08 21:14:53,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:53,117:INFO:Checking exceptions
2025-01-08 21:14:53,118:INFO:Importing libraries
2025-01-08 21:14:53,118:INFO:Copying training dataset
2025-01-08 21:14:53,125:INFO:Defining folds
2025-01-08 21:14:53,125:INFO:Declaring metric variables
2025-01-08 21:14:53,131:INFO:Importing untrained model
2025-01-08 21:14:53,132:INFO:Declaring custom model
2025-01-08 21:14:53,137:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:14:53,147:INFO:Starting cross validation
2025-01-08 21:14:53,149:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:53,317:INFO:Calculating mean and std
2025-01-08 21:14:53,319:INFO:Creating metrics dataframe
2025-01-08 21:14:53,322:INFO:Uploading results into container
2025-01-08 21:14:53,322:INFO:Uploading model into container now
2025-01-08 21:14:53,323:INFO:_master_model_container: 32
2025-01-08 21:14:53,323:INFO:_display_container: 8
2025-01-08 21:14:53,324:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:14:53,324:INFO:create_model() successfully completed......................................
2025-01-08 21:14:53,438:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:53,438:INFO:Creating metrics dataframe
2025-01-08 21:14:53,455:INFO:Initializing custom model Gradient Boosting Regressor
2025-01-08 21:14:53,455:INFO:Total runtime is 0.2102079749107361 minutes
2025-01-08 21:14:53,459:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:53,460:INFO:Initializing create_model()
2025-01-08 21:14:53,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:53,467:INFO:Checking exceptions
2025-01-08 21:14:53,467:INFO:Importing libraries
2025-01-08 21:14:53,467:INFO:Copying training dataset
2025-01-08 21:14:53,478:INFO:Defining folds
2025-01-08 21:14:53,478:INFO:Declaring metric variables
2025-01-08 21:14:53,483:INFO:Importing untrained model
2025-01-08 21:14:53,483:INFO:Declaring custom model
2025-01-08 21:14:53,489:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:14:53,499:INFO:Starting cross validation
2025-01-08 21:14:53,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:55,063:INFO:Calculating mean and std
2025-01-08 21:14:55,065:INFO:Creating metrics dataframe
2025-01-08 21:14:55,067:INFO:Uploading results into container
2025-01-08 21:14:55,069:INFO:Uploading model into container now
2025-01-08 21:14:55,069:INFO:_master_model_container: 33
2025-01-08 21:14:55,070:INFO:_display_container: 8
2025-01-08 21:14:55,070:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:14:55,071:INFO:create_model() successfully completed......................................
2025-01-08 21:14:55,180:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:55,180:INFO:Creating metrics dataframe
2025-01-08 21:14:55,193:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:14:55,193:INFO:Total runtime is 0.23917410373687745 minutes
2025-01-08 21:14:55,197:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:55,198:INFO:Initializing create_model()
2025-01-08 21:14:55,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:55,199:INFO:Checking exceptions
2025-01-08 21:14:55,199:INFO:Importing libraries
2025-01-08 21:14:55,199:INFO:Copying training dataset
2025-01-08 21:14:55,206:INFO:Defining folds
2025-01-08 21:14:55,206:INFO:Declaring metric variables
2025-01-08 21:14:55,210:INFO:Importing untrained model
2025-01-08 21:14:55,210:INFO:Declaring custom model
2025-01-08 21:14:55,218:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:14:55,228:INFO:Starting cross validation
2025-01-08 21:14:55,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:14:57,365:INFO:Calculating mean and std
2025-01-08 21:14:57,367:INFO:Creating metrics dataframe
2025-01-08 21:14:57,369:INFO:Uploading results into container
2025-01-08 21:14:57,370:INFO:Uploading model into container now
2025-01-08 21:14:57,371:INFO:_master_model_container: 34
2025-01-08 21:14:57,371:INFO:_display_container: 8
2025-01-08 21:14:57,372:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:14:57,372:INFO:create_model() successfully completed......................................
2025-01-08 21:14:57,482:INFO:SubProcess create_model() end ==================================
2025-01-08 21:14:57,482:INFO:Creating metrics dataframe
2025-01-08 21:14:57,494:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:14:57,494:INFO:Total runtime is 0.27751868168512983 minutes
2025-01-08 21:14:57,498:INFO:SubProcess create_model() called ==================================
2025-01-08 21:14:57,499:INFO:Initializing create_model()
2025-01-08 21:14:57,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:14:57,499:INFO:Checking exceptions
2025-01-08 21:14:57,499:INFO:Importing libraries
2025-01-08 21:14:57,500:INFO:Copying training dataset
2025-01-08 21:14:57,507:INFO:Defining folds
2025-01-08 21:14:57,507:INFO:Declaring metric variables
2025-01-08 21:14:57,512:INFO:Importing untrained model
2025-01-08 21:14:57,512:INFO:Declaring custom model
2025-01-08 21:14:57,518:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:14:57,528:INFO:Starting cross validation
2025-01-08 21:14:57,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:15:01,625:INFO:Calculating mean and std
2025-01-08 21:15:01,627:INFO:Creating metrics dataframe
2025-01-08 21:15:01,629:INFO:Uploading results into container
2025-01-08 21:15:01,630:INFO:Uploading model into container now
2025-01-08 21:15:01,630:INFO:_master_model_container: 35
2025-01-08 21:15:01,630:INFO:_display_container: 8
2025-01-08 21:15:01,631:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:15:01,631:INFO:create_model() successfully completed......................................
2025-01-08 21:15:01,741:INFO:SubProcess create_model() end ==================================
2025-01-08 21:15:01,741:INFO:Creating metrics dataframe
2025-01-08 21:15:01,755:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:15:01,755:INFO:Total runtime is 0.3485416571299235 minutes
2025-01-08 21:15:01,760:INFO:SubProcess create_model() called ==================================
2025-01-08 21:15:01,760:INFO:Initializing create_model()
2025-01-08 21:15:01,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:15:01,761:INFO:Checking exceptions
2025-01-08 21:15:01,761:INFO:Importing libraries
2025-01-08 21:15:01,761:INFO:Copying training dataset
2025-01-08 21:15:01,768:INFO:Defining folds
2025-01-08 21:15:01,768:INFO:Declaring metric variables
2025-01-08 21:15:01,773:INFO:Importing untrained model
2025-01-08 21:15:01,775:INFO:Declaring custom model
2025-01-08 21:15:01,780:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:15:01,806:INFO:Starting cross validation
2025-01-08 21:15:01,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:15:02,516:INFO:Calculating mean and std
2025-01-08 21:15:02,518:INFO:Creating metrics dataframe
2025-01-08 21:15:02,520:INFO:Uploading results into container
2025-01-08 21:15:02,521:INFO:Uploading model into container now
2025-01-08 21:15:02,521:INFO:_master_model_container: 36
2025-01-08 21:15:02,521:INFO:_display_container: 8
2025-01-08 21:15:02,522:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:15:02,522:INFO:create_model() successfully completed......................................
2025-01-08 21:15:02,634:INFO:SubProcess create_model() end ==================================
2025-01-08 21:15:02,634:INFO:Creating metrics dataframe
2025-01-08 21:15:02,646:INFO:Initializing custom model Decision Tree Regressor
2025-01-08 21:15:02,646:INFO:Total runtime is 0.36339816252390544 minutes
2025-01-08 21:15:02,651:INFO:SubProcess create_model() called ==================================
2025-01-08 21:15:02,651:INFO:Initializing create_model()
2025-01-08 21:15:02,652:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:15:02,652:INFO:Checking exceptions
2025-01-08 21:15:02,652:INFO:Importing libraries
2025-01-08 21:15:02,652:INFO:Copying training dataset
2025-01-08 21:15:02,659:INFO:Defining folds
2025-01-08 21:15:02,659:INFO:Declaring metric variables
2025-01-08 21:15:02,664:INFO:Importing untrained model
2025-01-08 21:15:02,665:INFO:Declaring custom model
2025-01-08 21:15:02,670:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:15:02,681:INFO:Starting cross validation
2025-01-08 21:15:02,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:15:02,824:INFO:Calculating mean and std
2025-01-08 21:15:02,826:INFO:Creating metrics dataframe
2025-01-08 21:15:02,828:INFO:Uploading results into container
2025-01-08 21:15:02,829:INFO:Uploading model into container now
2025-01-08 21:15:02,829:INFO:_master_model_container: 37
2025-01-08 21:15:02,829:INFO:_display_container: 8
2025-01-08 21:15:02,830:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:15:02,831:INFO:create_model() successfully completed......................................
2025-01-08 21:15:02,940:INFO:SubProcess create_model() end ==================================
2025-01-08 21:15:02,940:INFO:Creating metrics dataframe
2025-01-08 21:15:02,953:INFO:Initializing custom model Gradient Boosting Regressor
2025-01-08 21:15:02,953:INFO:Total runtime is 0.36851232449213667 minutes
2025-01-08 21:15:02,958:INFO:SubProcess create_model() called ==================================
2025-01-08 21:15:02,959:INFO:Initializing create_model()
2025-01-08 21:15:02,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D6EA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:15:02,959:INFO:Checking exceptions
2025-01-08 21:15:02,959:INFO:Importing libraries
2025-01-08 21:15:02,959:INFO:Copying training dataset
2025-01-08 21:15:02,968:INFO:Defining folds
2025-01-08 21:15:02,968:INFO:Declaring metric variables
2025-01-08 21:15:02,975:INFO:Importing untrained model
2025-01-08 21:15:02,976:INFO:Declaring custom model
2025-01-08 21:15:02,981:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:15:02,991:INFO:Starting cross validation
2025-01-08 21:15:02,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:15:09,208:INFO:Calculating mean and std
2025-01-08 21:15:09,209:INFO:Creating metrics dataframe
2025-01-08 21:15:09,213:INFO:Uploading results into container
2025-01-08 21:15:09,214:INFO:Uploading model into container now
2025-01-08 21:15:09,215:INFO:_master_model_container: 38
2025-01-08 21:15:09,215:INFO:_display_container: 8
2025-01-08 21:15:09,217:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:15:09,217:INFO:create_model() successfully completed......................................
2025-01-08 21:15:09,328:INFO:SubProcess create_model() end ==================================
2025-01-08 21:15:09,328:INFO:Creating metrics dataframe
2025-01-08 21:15:09,342:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:15:09,355:INFO:Initializing create_model()
2025-01-08 21:15:09,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:15:09,355:INFO:Checking exceptions
2025-01-08 21:15:09,357:INFO:Importing libraries
2025-01-08 21:15:09,357:INFO:Copying training dataset
2025-01-08 21:15:09,363:INFO:Defining folds
2025-01-08 21:15:09,363:INFO:Declaring metric variables
2025-01-08 21:15:09,363:INFO:Importing untrained model
2025-01-08 21:15:09,363:INFO:Declaring custom model
2025-01-08 21:15:09,364:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:15:09,365:INFO:Cross validation set to False
2025-01-08 21:15:09,365:INFO:Fitting Model
2025-01-08 21:15:09,647:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:15:09,647:INFO:create_model() successfully completed......................................
2025-01-08 21:15:09,789:INFO:_master_model_container: 38
2025-01-08 21:15:09,790:INFO:_display_container: 8
2025-01-08 21:15:09,790:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:15:09,790:INFO:compare_models() successfully completed......................................
2025-01-08 21:15:44,755:INFO:Initializing plot_model()
2025-01-08 21:15:44,755:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:15:44,755:INFO:Checking exceptions
2025-01-08 21:15:44,797:INFO:Preloading libraries
2025-01-08 21:15:44,897:INFO:Copying training dataset
2025-01-08 21:15:44,897:INFO:Plot type: residuals
2025-01-08 21:15:45,155:INFO:Fitting Model
2025-01-08 21:15:45,156:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:15:45,320:INFO:Scoring test/hold-out set
2025-01-08 21:15:46,015:INFO:Visual Rendered Successfully
2025-01-08 21:15:46,134:INFO:plot_model() successfully completed......................................
2025-01-08 21:16:13,140:INFO:Initializing plot_model()
2025-01-08 21:16:13,140:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:16:13,140:INFO:Checking exceptions
2025-01-08 21:16:13,183:INFO:Preloading libraries
2025-01-08 21:16:13,269:INFO:Copying training dataset
2025-01-08 21:16:13,270:INFO:Plot type: error
2025-01-08 21:16:13,488:INFO:Fitting Model
2025-01-08 21:16:13,488:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:16:13,488:INFO:Scoring test/hold-out set
2025-01-08 21:16:13,915:INFO:Visual Rendered Successfully
2025-01-08 21:16:14,031:INFO:plot_model() successfully completed......................................
2025-01-08 21:16:20,806:INFO:Initializing plot_model()
2025-01-08 21:16:20,806:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:16:20,806:INFO:Checking exceptions
2025-01-08 21:16:20,838:INFO:Preloading libraries
2025-01-08 21:16:20,922:INFO:Copying training dataset
2025-01-08 21:16:20,922:INFO:Plot type: feature
2025-01-08 21:16:20,923:WARNING:No coef_ found. Trying feature_importances_
2025-01-08 21:16:21,171:INFO:Visual Rendered Successfully
2025-01-08 21:16:21,280:INFO:plot_model() successfully completed......................................
2025-01-08 21:17:15,678:INFO:Initializing finalize_model()
2025-01-08 21:17:15,678:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-08 21:17:15,678:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:17:15,683:INFO:Initializing create_model()
2025-01-08 21:17:15,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D3FA110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:17:15,683:INFO:Checking exceptions
2025-01-08 21:17:15,685:INFO:Importing libraries
2025-01-08 21:17:15,685:INFO:Copying training dataset
2025-01-08 21:17:15,686:INFO:Defining folds
2025-01-08 21:17:15,686:INFO:Declaring metric variables
2025-01-08 21:17:15,686:INFO:Importing untrained model
2025-01-08 21:17:15,686:INFO:Declaring custom model
2025-01-08 21:17:15,687:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:17:15,688:INFO:Cross validation set to False
2025-01-08 21:17:15,688:INFO:Fitting Model
2025-01-08 21:17:16,052:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:17:16,052:INFO:create_model() successfully completed......................................
2025-01-08 21:17:16,160:INFO:_master_model_container: 38
2025-01-08 21:17:16,160:INFO:_display_container: 8
2025-01-08 21:17:16,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:17:16,169:INFO:finalize_model() successfully completed......................................
2025-01-08 21:17:16,291:INFO:Initializing save_model()
2025-01-08 21:17:16,291:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=diesel_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-08 21:17:16,291:INFO:Adding model into prep_pipe
2025-01-08 21:17:16,291:WARNING:Only Model saved as it was a pipeline.
2025-01-08 21:17:16,389:INFO:diesel_model.pkl saved in current working directory
2025-01-08 21:17:16,398:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:17:16,398:INFO:save_model() successfully completed......................................
2025-01-08 21:18:52,738:INFO:PyCaret RegressionExperiment
2025-01-08 21:18:52,738:INFO:Logging name: reg-default-name
2025-01-08 21:18:52,738:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 21:18:52,739:INFO:version 3.3.2
2025-01-08 21:18:52,739:INFO:Initializing setup()
2025-01-08 21:18:52,739:INFO:self.USI: 57dc
2025-01-08 21:18:52,739:INFO:self._variable_keys: {'memory', 'y_test', 'exp_id', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'X_train', 'target_param', 'gpu_param', 'y_train', 'pipeline', 'USI', 'fold_shuffle_param', 'X', 'logging_param', 'gpu_n_jobs_param', 'fold_generator', 'X_test', 'data', 'html_param', '_available_plots', 'y', 'seed', 'idx', 'exp_name_log', 'transform_target_param', 'n_jobs_param'}
2025-01-08 21:18:52,739:INFO:Checking environment
2025-01-08 21:18:52,739:INFO:python_version: 3.11.11
2025-01-08 21:18:52,739:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 21:18:52,739:INFO:machine: AMD64
2025-01-08 21:18:52,739:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 21:18:52,739:INFO:Memory: svmem(total=6439919616, available=645345280, percent=90.0, used=5794574336, free=645345280)
2025-01-08 21:18:52,740:INFO:Physical Core: 4
2025-01-08 21:18:52,740:INFO:Logical Core: 4
2025-01-08 21:18:52,740:INFO:Checking libraries
2025-01-08 21:18:52,740:INFO:System:
2025-01-08 21:18:52,740:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 21:18:52,740:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 21:18:52,740:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 21:18:52,740:INFO:PyCaret required dependencies:
2025-01-08 21:18:52,740:INFO:                 pip: 24.2
2025-01-08 21:18:52,740:INFO:          setuptools: 75.1.0
2025-01-08 21:18:52,741:INFO:             pycaret: 3.3.2
2025-01-08 21:18:52,741:INFO:             IPython: 8.30.0
2025-01-08 21:18:52,741:INFO:          ipywidgets: 8.1.5
2025-01-08 21:18:52,741:INFO:                tqdm: 4.67.1
2025-01-08 21:18:52,741:INFO:               numpy: 1.26.4
2025-01-08 21:18:52,741:INFO:              pandas: 2.1.4
2025-01-08 21:18:52,741:INFO:              jinja2: 3.1.4
2025-01-08 21:18:52,741:INFO:               scipy: 1.11.4
2025-01-08 21:18:52,741:INFO:              joblib: 1.3.2
2025-01-08 21:18:52,741:INFO:             sklearn: 1.4.2
2025-01-08 21:18:52,741:INFO:                pyod: 2.0.3
2025-01-08 21:18:52,742:INFO:            imblearn: 0.13.0
2025-01-08 21:18:52,742:INFO:   category_encoders: 2.7.0
2025-01-08 21:18:52,742:INFO:            lightgbm: 4.5.0
2025-01-08 21:18:52,742:INFO:               numba: 0.60.0
2025-01-08 21:18:52,742:INFO:            requests: 2.32.3
2025-01-08 21:18:52,742:INFO:          matplotlib: 3.7.5
2025-01-08 21:18:52,742:INFO:          scikitplot: 0.3.7
2025-01-08 21:18:52,742:INFO:         yellowbrick: 1.5
2025-01-08 21:18:52,742:INFO:              plotly: 5.24.1
2025-01-08 21:18:52,742:INFO:    plotly-resampler: Not installed
2025-01-08 21:18:52,742:INFO:             kaleido: 0.2.1
2025-01-08 21:18:52,742:INFO:           schemdraw: 0.15
2025-01-08 21:18:52,743:INFO:         statsmodels: 0.14.4
2025-01-08 21:18:52,743:INFO:              sktime: 0.26.0
2025-01-08 21:18:52,743:INFO:               tbats: 1.1.3
2025-01-08 21:18:52,743:INFO:            pmdarima: 2.0.4
2025-01-08 21:18:52,743:INFO:              psutil: 5.9.0
2025-01-08 21:18:52,743:INFO:          markupsafe: 2.1.3
2025-01-08 21:18:52,743:INFO:             pickle5: Not installed
2025-01-08 21:18:52,743:INFO:         cloudpickle: 3.1.0
2025-01-08 21:18:52,743:INFO:         deprecation: 2.1.0
2025-01-08 21:18:52,743:INFO:              xxhash: 3.5.0
2025-01-08 21:18:52,743:INFO:           wurlitzer: Not installed
2025-01-08 21:18:52,743:INFO:PyCaret optional dependencies:
2025-01-08 21:18:52,744:INFO:                shap: Not installed
2025-01-08 21:18:52,744:INFO:           interpret: Not installed
2025-01-08 21:18:52,744:INFO:                umap: Not installed
2025-01-08 21:18:52,744:INFO:     ydata_profiling: Not installed
2025-01-08 21:18:52,744:INFO:  explainerdashboard: Not installed
2025-01-08 21:18:52,744:INFO:             autoviz: Not installed
2025-01-08 21:18:52,744:INFO:           fairlearn: Not installed
2025-01-08 21:18:52,744:INFO:          deepchecks: Not installed
2025-01-08 21:18:52,744:INFO:             xgboost: Not installed
2025-01-08 21:18:52,744:INFO:            catboost: Not installed
2025-01-08 21:18:52,745:INFO:              kmodes: Not installed
2025-01-08 21:18:52,745:INFO:             mlxtend: Not installed
2025-01-08 21:18:52,745:INFO:       statsforecast: Not installed
2025-01-08 21:18:52,745:INFO:        tune_sklearn: Not installed
2025-01-08 21:18:52,745:INFO:                 ray: Not installed
2025-01-08 21:18:52,745:INFO:            hyperopt: Not installed
2025-01-08 21:18:52,745:INFO:              optuna: Not installed
2025-01-08 21:18:52,745:INFO:               skopt: Not installed
2025-01-08 21:18:52,745:INFO:              mlflow: Not installed
2025-01-08 21:18:52,745:INFO:              gradio: Not installed
2025-01-08 21:18:52,745:INFO:             fastapi: Not installed
2025-01-08 21:18:52,745:INFO:             uvicorn: Not installed
2025-01-08 21:18:52,746:INFO:              m2cgen: Not installed
2025-01-08 21:18:52,746:INFO:           evidently: Not installed
2025-01-08 21:18:52,746:INFO:               fugue: Not installed
2025-01-08 21:18:52,746:INFO:           streamlit: Not installed
2025-01-08 21:18:52,746:INFO:             prophet: Not installed
2025-01-08 21:18:52,746:INFO:None
2025-01-08 21:18:52,746:INFO:Set up data.
2025-01-08 21:18:52,753:INFO:Set up folding strategy.
2025-01-08 21:18:52,753:INFO:Set up train/test split.
2025-01-08 21:18:52,758:INFO:Set up index.
2025-01-08 21:18:52,759:INFO:Assigning column types.
2025-01-08 21:18:52,763:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 21:18:52,763:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 21:18:52,775:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:18:52,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:52,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,045:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,055:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,067:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,312:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 21:18:53,330:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,341:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,607:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,743:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:53,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:53,851:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 21:18:53,873:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,080:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,465:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 21:18:54,633:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:54,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:54,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:55,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:18:55,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,029:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 21:18:55,186:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:55,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:18:55,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,561:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 21:18:55,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:55,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:56,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:56,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:56,114:INFO:Preparing preprocessing pipeline...
2025-01-08 21:18:56,114:INFO:Set up simple imputation.
2025-01-08 21:18:56,115:INFO:Set up column name cleaning.
2025-01-08 21:18:56,197:INFO:Finished creating preprocessing pipeline.
2025-01-08 21:18:56,205:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 21:18:56,205:INFO:Creating final display dataframe.
2025-01-08 21:18:56,452:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           super95
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              57dc
2025-01-08 21:18:56,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:56,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:57,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:57,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:18:57,028:INFO:setup() successfully completed in 4.3s...............
2025-01-08 21:19:56,962:INFO:Initializing compare_models()
2025-01-08 21:19:56,962:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:19:56,962:INFO:Checking exceptions
2025-01-08 21:19:56,965:INFO:Preparing display monitor
2025-01-08 21:19:56,993:INFO:Initializing Linear Regression
2025-01-08 21:19:56,993:INFO:Total runtime is 0.0 minutes
2025-01-08 21:19:57,002:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:57,002:INFO:Initializing create_model()
2025-01-08 21:19:57,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:57,005:INFO:Checking exceptions
2025-01-08 21:19:57,005:INFO:Importing libraries
2025-01-08 21:19:57,005:INFO:Copying training dataset
2025-01-08 21:19:57,013:INFO:Defining folds
2025-01-08 21:19:57,013:INFO:Declaring metric variables
2025-01-08 21:19:57,020:INFO:Importing untrained model
2025-01-08 21:19:57,026:INFO:Linear Regression Imported successfully
2025-01-08 21:19:57,035:INFO:Starting cross validation
2025-01-08 21:19:57,036:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:57,249:INFO:Calculating mean and std
2025-01-08 21:19:57,250:INFO:Creating metrics dataframe
2025-01-08 21:19:57,252:INFO:Uploading results into container
2025-01-08 21:19:57,253:INFO:Uploading model into container now
2025-01-08 21:19:57,253:INFO:_master_model_container: 1
2025-01-08 21:19:57,253:INFO:_display_container: 2
2025-01-08 21:19:57,253:INFO:LinearRegression(n_jobs=-1)
2025-01-08 21:19:57,253:INFO:create_model() successfully completed......................................
2025-01-08 21:19:57,362:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:57,362:INFO:Creating metrics dataframe
2025-01-08 21:19:57,370:INFO:Initializing Lasso Regression
2025-01-08 21:19:57,371:INFO:Total runtime is 0.0062966585159301754 minutes
2025-01-08 21:19:57,376:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:57,376:INFO:Initializing create_model()
2025-01-08 21:19:57,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:57,376:INFO:Checking exceptions
2025-01-08 21:19:57,377:INFO:Importing libraries
2025-01-08 21:19:57,377:INFO:Copying training dataset
2025-01-08 21:19:57,383:INFO:Defining folds
2025-01-08 21:19:57,383:INFO:Declaring metric variables
2025-01-08 21:19:57,387:INFO:Importing untrained model
2025-01-08 21:19:57,392:INFO:Lasso Regression Imported successfully
2025-01-08 21:19:57,401:INFO:Starting cross validation
2025-01-08 21:19:57,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:57,627:INFO:Calculating mean and std
2025-01-08 21:19:57,628:INFO:Creating metrics dataframe
2025-01-08 21:19:57,631:INFO:Uploading results into container
2025-01-08 21:19:57,631:INFO:Uploading model into container now
2025-01-08 21:19:57,632:INFO:_master_model_container: 2
2025-01-08 21:19:57,632:INFO:_display_container: 2
2025-01-08 21:19:57,632:INFO:Lasso(random_state=123)
2025-01-08 21:19:57,632:INFO:create_model() successfully completed......................................
2025-01-08 21:19:57,742:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:57,742:INFO:Creating metrics dataframe
2025-01-08 21:19:57,752:INFO:Initializing Ridge Regression
2025-01-08 21:19:57,752:INFO:Total runtime is 0.012642125288645426 minutes
2025-01-08 21:19:57,757:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:57,758:INFO:Initializing create_model()
2025-01-08 21:19:57,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:57,758:INFO:Checking exceptions
2025-01-08 21:19:57,758:INFO:Importing libraries
2025-01-08 21:19:57,758:INFO:Copying training dataset
2025-01-08 21:19:57,765:INFO:Defining folds
2025-01-08 21:19:57,765:INFO:Declaring metric variables
2025-01-08 21:19:57,769:INFO:Importing untrained model
2025-01-08 21:19:57,774:INFO:Ridge Regression Imported successfully
2025-01-08 21:19:57,785:INFO:Starting cross validation
2025-01-08 21:19:57,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:57,929:INFO:Calculating mean and std
2025-01-08 21:19:57,930:INFO:Creating metrics dataframe
2025-01-08 21:19:57,932:INFO:Uploading results into container
2025-01-08 21:19:57,933:INFO:Uploading model into container now
2025-01-08 21:19:57,933:INFO:_master_model_container: 3
2025-01-08 21:19:57,933:INFO:_display_container: 2
2025-01-08 21:19:57,933:INFO:Ridge(random_state=123)
2025-01-08 21:19:57,934:INFO:create_model() successfully completed......................................
2025-01-08 21:19:58,053:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:58,053:INFO:Creating metrics dataframe
2025-01-08 21:19:58,064:INFO:Initializing Elastic Net
2025-01-08 21:19:58,065:INFO:Total runtime is 0.017855862776438393 minutes
2025-01-08 21:19:58,069:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:58,069:INFO:Initializing create_model()
2025-01-08 21:19:58,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:58,070:INFO:Checking exceptions
2025-01-08 21:19:58,070:INFO:Importing libraries
2025-01-08 21:19:58,070:INFO:Copying training dataset
2025-01-08 21:19:58,079:INFO:Defining folds
2025-01-08 21:19:58,079:INFO:Declaring metric variables
2025-01-08 21:19:58,085:INFO:Importing untrained model
2025-01-08 21:19:58,091:INFO:Elastic Net Imported successfully
2025-01-08 21:19:58,105:INFO:Starting cross validation
2025-01-08 21:19:58,107:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:58,253:INFO:Calculating mean and std
2025-01-08 21:19:58,254:INFO:Creating metrics dataframe
2025-01-08 21:19:58,260:INFO:Uploading results into container
2025-01-08 21:19:58,261:INFO:Uploading model into container now
2025-01-08 21:19:58,261:INFO:_master_model_container: 4
2025-01-08 21:19:58,261:INFO:_display_container: 2
2025-01-08 21:19:58,262:INFO:ElasticNet(random_state=123)
2025-01-08 21:19:58,262:INFO:create_model() successfully completed......................................
2025-01-08 21:19:58,381:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:58,382:INFO:Creating metrics dataframe
2025-01-08 21:19:58,394:INFO:Initializing Least Angle Regression
2025-01-08 21:19:58,394:INFO:Total runtime is 0.02333540121714274 minutes
2025-01-08 21:19:58,399:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:58,399:INFO:Initializing create_model()
2025-01-08 21:19:58,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:58,400:INFO:Checking exceptions
2025-01-08 21:19:58,400:INFO:Importing libraries
2025-01-08 21:19:58,400:INFO:Copying training dataset
2025-01-08 21:19:58,408:INFO:Defining folds
2025-01-08 21:19:58,408:INFO:Declaring metric variables
2025-01-08 21:19:58,413:INFO:Importing untrained model
2025-01-08 21:19:58,418:INFO:Least Angle Regression Imported successfully
2025-01-08 21:19:58,429:INFO:Starting cross validation
2025-01-08 21:19:58,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:58,557:INFO:Calculating mean and std
2025-01-08 21:19:58,558:INFO:Creating metrics dataframe
2025-01-08 21:19:58,562:INFO:Uploading results into container
2025-01-08 21:19:58,563:INFO:Uploading model into container now
2025-01-08 21:19:58,563:INFO:_master_model_container: 5
2025-01-08 21:19:58,563:INFO:_display_container: 2
2025-01-08 21:19:58,564:INFO:Lars(random_state=123)
2025-01-08 21:19:58,564:INFO:create_model() successfully completed......................................
2025-01-08 21:19:58,679:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:58,680:INFO:Creating metrics dataframe
2025-01-08 21:19:58,692:INFO:Initializing Lasso Least Angle Regression
2025-01-08 21:19:58,692:INFO:Total runtime is 0.028315615653991696 minutes
2025-01-08 21:19:58,697:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:58,697:INFO:Initializing create_model()
2025-01-08 21:19:58,697:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:58,698:INFO:Checking exceptions
2025-01-08 21:19:58,698:INFO:Importing libraries
2025-01-08 21:19:58,698:INFO:Copying training dataset
2025-01-08 21:19:58,706:INFO:Defining folds
2025-01-08 21:19:58,707:INFO:Declaring metric variables
2025-01-08 21:19:58,714:INFO:Importing untrained model
2025-01-08 21:19:58,719:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 21:19:58,755:INFO:Starting cross validation
2025-01-08 21:19:58,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:58,908:INFO:Calculating mean and std
2025-01-08 21:19:58,910:INFO:Creating metrics dataframe
2025-01-08 21:19:58,912:INFO:Uploading results into container
2025-01-08 21:19:58,912:INFO:Uploading model into container now
2025-01-08 21:19:58,913:INFO:_master_model_container: 6
2025-01-08 21:19:58,913:INFO:_display_container: 2
2025-01-08 21:19:58,913:INFO:LassoLars(random_state=123)
2025-01-08 21:19:58,914:INFO:create_model() successfully completed......................................
2025-01-08 21:19:59,026:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:59,026:INFO:Creating metrics dataframe
2025-01-08 21:19:59,036:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 21:19:59,037:INFO:Total runtime is 0.034062667687733965 minutes
2025-01-08 21:19:59,041:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:59,042:INFO:Initializing create_model()
2025-01-08 21:19:59,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:59,042:INFO:Checking exceptions
2025-01-08 21:19:59,042:INFO:Importing libraries
2025-01-08 21:19:59,042:INFO:Copying training dataset
2025-01-08 21:19:59,050:INFO:Defining folds
2025-01-08 21:19:59,050:INFO:Declaring metric variables
2025-01-08 21:19:59,055:INFO:Importing untrained model
2025-01-08 21:19:59,062:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 21:19:59,071:INFO:Starting cross validation
2025-01-08 21:19:59,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:59,216:INFO:Calculating mean and std
2025-01-08 21:19:59,217:INFO:Creating metrics dataframe
2025-01-08 21:19:59,220:INFO:Uploading results into container
2025-01-08 21:19:59,220:INFO:Uploading model into container now
2025-01-08 21:19:59,221:INFO:_master_model_container: 7
2025-01-08 21:19:59,221:INFO:_display_container: 2
2025-01-08 21:19:59,221:INFO:OrthogonalMatchingPursuit()
2025-01-08 21:19:59,222:INFO:create_model() successfully completed......................................
2025-01-08 21:19:59,335:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:59,335:INFO:Creating metrics dataframe
2025-01-08 21:19:59,346:INFO:Initializing Bayesian Ridge
2025-01-08 21:19:59,347:INFO:Total runtime is 0.0392258604367574 minutes
2025-01-08 21:19:59,351:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:59,351:INFO:Initializing create_model()
2025-01-08 21:19:59,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:59,351:INFO:Checking exceptions
2025-01-08 21:19:59,352:INFO:Importing libraries
2025-01-08 21:19:59,352:INFO:Copying training dataset
2025-01-08 21:19:59,360:INFO:Defining folds
2025-01-08 21:19:59,360:INFO:Declaring metric variables
2025-01-08 21:19:59,365:INFO:Importing untrained model
2025-01-08 21:19:59,370:INFO:Bayesian Ridge Imported successfully
2025-01-08 21:19:59,382:INFO:Starting cross validation
2025-01-08 21:19:59,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:59,523:INFO:Calculating mean and std
2025-01-08 21:19:59,525:INFO:Creating metrics dataframe
2025-01-08 21:19:59,528:INFO:Uploading results into container
2025-01-08 21:19:59,528:INFO:Uploading model into container now
2025-01-08 21:19:59,529:INFO:_master_model_container: 8
2025-01-08 21:19:59,529:INFO:_display_container: 2
2025-01-08 21:19:59,529:INFO:BayesianRidge()
2025-01-08 21:19:59,529:INFO:create_model() successfully completed......................................
2025-01-08 21:19:59,649:INFO:SubProcess create_model() end ==================================
2025-01-08 21:19:59,649:INFO:Creating metrics dataframe
2025-01-08 21:19:59,663:INFO:Initializing Passive Aggressive Regressor
2025-01-08 21:19:59,663:INFO:Total runtime is 0.044488823413848876 minutes
2025-01-08 21:19:59,667:INFO:SubProcess create_model() called ==================================
2025-01-08 21:19:59,668:INFO:Initializing create_model()
2025-01-08 21:19:59,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:19:59,668:INFO:Checking exceptions
2025-01-08 21:19:59,668:INFO:Importing libraries
2025-01-08 21:19:59,668:INFO:Copying training dataset
2025-01-08 21:19:59,677:INFO:Defining folds
2025-01-08 21:19:59,678:INFO:Declaring metric variables
2025-01-08 21:19:59,683:INFO:Importing untrained model
2025-01-08 21:19:59,691:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 21:19:59,702:INFO:Starting cross validation
2025-01-08 21:19:59,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:19:59,900:INFO:Calculating mean and std
2025-01-08 21:19:59,901:INFO:Creating metrics dataframe
2025-01-08 21:19:59,904:INFO:Uploading results into container
2025-01-08 21:19:59,905:INFO:Uploading model into container now
2025-01-08 21:19:59,905:INFO:_master_model_container: 9
2025-01-08 21:19:59,905:INFO:_display_container: 2
2025-01-08 21:19:59,906:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 21:19:59,906:INFO:create_model() successfully completed......................................
2025-01-08 21:20:00,088:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:00,088:INFO:Creating metrics dataframe
2025-01-08 21:20:00,101:INFO:Initializing Huber Regressor
2025-01-08 21:20:00,101:INFO:Total runtime is 0.05178448756535848 minutes
2025-01-08 21:20:00,105:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:00,106:INFO:Initializing create_model()
2025-01-08 21:20:00,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:00,106:INFO:Checking exceptions
2025-01-08 21:20:00,106:INFO:Importing libraries
2025-01-08 21:20:00,107:INFO:Copying training dataset
2025-01-08 21:20:00,115:INFO:Defining folds
2025-01-08 21:20:00,116:INFO:Declaring metric variables
2025-01-08 21:20:00,120:INFO:Importing untrained model
2025-01-08 21:20:00,124:INFO:Huber Regressor Imported successfully
2025-01-08 21:20:00,135:INFO:Starting cross validation
2025-01-08 21:20:00,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:00,377:INFO:Calculating mean and std
2025-01-08 21:20:00,378:INFO:Creating metrics dataframe
2025-01-08 21:20:00,381:INFO:Uploading results into container
2025-01-08 21:20:00,381:INFO:Uploading model into container now
2025-01-08 21:20:00,382:INFO:_master_model_container: 10
2025-01-08 21:20:00,382:INFO:_display_container: 2
2025-01-08 21:20:00,382:INFO:HuberRegressor()
2025-01-08 21:20:00,382:INFO:create_model() successfully completed......................................
2025-01-08 21:20:00,494:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:00,494:INFO:Creating metrics dataframe
2025-01-08 21:20:00,508:INFO:Initializing K Neighbors Regressor
2025-01-08 21:20:00,509:INFO:Total runtime is 0.05859666665395101 minutes
2025-01-08 21:20:00,513:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:00,514:INFO:Initializing create_model()
2025-01-08 21:20:00,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:00,514:INFO:Checking exceptions
2025-01-08 21:20:00,514:INFO:Importing libraries
2025-01-08 21:20:00,514:INFO:Copying training dataset
2025-01-08 21:20:00,522:INFO:Defining folds
2025-01-08 21:20:00,522:INFO:Declaring metric variables
2025-01-08 21:20:00,529:INFO:Importing untrained model
2025-01-08 21:20:00,533:INFO:K Neighbors Regressor Imported successfully
2025-01-08 21:20:00,544:INFO:Starting cross validation
2025-01-08 21:20:00,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:00,737:INFO:Calculating mean and std
2025-01-08 21:20:00,739:INFO:Creating metrics dataframe
2025-01-08 21:20:00,741:INFO:Uploading results into container
2025-01-08 21:20:00,743:INFO:Uploading model into container now
2025-01-08 21:20:00,744:INFO:_master_model_container: 11
2025-01-08 21:20:00,744:INFO:_display_container: 2
2025-01-08 21:20:00,744:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 21:20:00,745:INFO:create_model() successfully completed......................................
2025-01-08 21:20:00,861:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:00,861:INFO:Creating metrics dataframe
2025-01-08 21:20:00,876:INFO:Initializing Decision Tree Regressor
2025-01-08 21:20:00,876:INFO:Total runtime is 0.06470127900441487 minutes
2025-01-08 21:20:00,881:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:00,881:INFO:Initializing create_model()
2025-01-08 21:20:00,881:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:00,881:INFO:Checking exceptions
2025-01-08 21:20:00,881:INFO:Importing libraries
2025-01-08 21:20:00,881:INFO:Copying training dataset
2025-01-08 21:20:00,889:INFO:Defining folds
2025-01-08 21:20:00,889:INFO:Declaring metric variables
2025-01-08 21:20:00,896:INFO:Importing untrained model
2025-01-08 21:20:00,901:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:20:00,911:INFO:Starting cross validation
2025-01-08 21:20:00,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:01,097:INFO:Calculating mean and std
2025-01-08 21:20:01,099:INFO:Creating metrics dataframe
2025-01-08 21:20:01,101:INFO:Uploading results into container
2025-01-08 21:20:01,102:INFO:Uploading model into container now
2025-01-08 21:20:01,102:INFO:_master_model_container: 12
2025-01-08 21:20:01,102:INFO:_display_container: 2
2025-01-08 21:20:01,103:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:20:01,104:INFO:create_model() successfully completed......................................
2025-01-08 21:20:01,217:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:01,218:INFO:Creating metrics dataframe
2025-01-08 21:20:01,231:INFO:Initializing Random Forest Regressor
2025-01-08 21:20:01,231:INFO:Total runtime is 0.07063153584798176 minutes
2025-01-08 21:20:01,235:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:01,236:INFO:Initializing create_model()
2025-01-08 21:20:01,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:01,236:INFO:Checking exceptions
2025-01-08 21:20:01,236:INFO:Importing libraries
2025-01-08 21:20:01,236:INFO:Copying training dataset
2025-01-08 21:20:01,245:INFO:Defining folds
2025-01-08 21:20:01,245:INFO:Declaring metric variables
2025-01-08 21:20:01,249:INFO:Importing untrained model
2025-01-08 21:20:01,255:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:20:01,265:INFO:Starting cross validation
2025-01-08 21:20:01,267:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:05,400:INFO:Calculating mean and std
2025-01-08 21:20:05,402:INFO:Creating metrics dataframe
2025-01-08 21:20:05,404:INFO:Uploading results into container
2025-01-08 21:20:05,404:INFO:Uploading model into container now
2025-01-08 21:20:05,405:INFO:_master_model_container: 13
2025-01-08 21:20:05,405:INFO:_display_container: 2
2025-01-08 21:20:05,406:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:05,406:INFO:create_model() successfully completed......................................
2025-01-08 21:20:05,519:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:05,519:INFO:Creating metrics dataframe
2025-01-08 21:20:05,533:INFO:Initializing Extra Trees Regressor
2025-01-08 21:20:05,534:INFO:Total runtime is 0.14234145879745483 minutes
2025-01-08 21:20:05,538:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:05,539:INFO:Initializing create_model()
2025-01-08 21:20:05,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:05,539:INFO:Checking exceptions
2025-01-08 21:20:05,539:INFO:Importing libraries
2025-01-08 21:20:05,539:INFO:Copying training dataset
2025-01-08 21:20:05,547:INFO:Defining folds
2025-01-08 21:20:05,547:INFO:Declaring metric variables
2025-01-08 21:20:05,553:INFO:Importing untrained model
2025-01-08 21:20:05,558:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:20:05,569:INFO:Starting cross validation
2025-01-08 21:20:05,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:08,062:INFO:Calculating mean and std
2025-01-08 21:20:08,064:INFO:Creating metrics dataframe
2025-01-08 21:20:08,067:INFO:Uploading results into container
2025-01-08 21:20:08,068:INFO:Uploading model into container now
2025-01-08 21:20:08,069:INFO:_master_model_container: 14
2025-01-08 21:20:08,069:INFO:_display_container: 2
2025-01-08 21:20:08,070:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:08,070:INFO:create_model() successfully completed......................................
2025-01-08 21:20:08,180:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:08,180:INFO:Creating metrics dataframe
2025-01-08 21:20:08,195:INFO:Initializing AdaBoost Regressor
2025-01-08 21:20:08,195:INFO:Total runtime is 0.1866944392522176 minutes
2025-01-08 21:20:08,200:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:08,201:INFO:Initializing create_model()
2025-01-08 21:20:08,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:08,201:INFO:Checking exceptions
2025-01-08 21:20:08,201:INFO:Importing libraries
2025-01-08 21:20:08,201:INFO:Copying training dataset
2025-01-08 21:20:08,209:INFO:Defining folds
2025-01-08 21:20:08,209:INFO:Declaring metric variables
2025-01-08 21:20:08,215:INFO:Importing untrained model
2025-01-08 21:20:08,221:INFO:AdaBoost Regressor Imported successfully
2025-01-08 21:20:08,230:INFO:Starting cross validation
2025-01-08 21:20:08,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:08,882:INFO:Calculating mean and std
2025-01-08 21:20:08,884:INFO:Creating metrics dataframe
2025-01-08 21:20:08,887:INFO:Uploading results into container
2025-01-08 21:20:08,887:INFO:Uploading model into container now
2025-01-08 21:20:08,888:INFO:_master_model_container: 15
2025-01-08 21:20:08,888:INFO:_display_container: 2
2025-01-08 21:20:08,888:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 21:20:08,889:INFO:create_model() successfully completed......................................
2025-01-08 21:20:09,007:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:09,007:INFO:Creating metrics dataframe
2025-01-08 21:20:09,024:INFO:Initializing Gradient Boosting Regressor
2025-01-08 21:20:09,024:INFO:Total runtime is 0.20050281286239624 minutes
2025-01-08 21:20:09,029:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:09,029:INFO:Initializing create_model()
2025-01-08 21:20:09,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:09,029:INFO:Checking exceptions
2025-01-08 21:20:09,029:INFO:Importing libraries
2025-01-08 21:20:09,030:INFO:Copying training dataset
2025-01-08 21:20:09,039:INFO:Defining folds
2025-01-08 21:20:09,039:INFO:Declaring metric variables
2025-01-08 21:20:09,044:INFO:Importing untrained model
2025-01-08 21:20:09,052:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:20:09,060:INFO:Starting cross validation
2025-01-08 21:20:09,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:10,574:INFO:Calculating mean and std
2025-01-08 21:20:10,575:INFO:Creating metrics dataframe
2025-01-08 21:20:10,578:INFO:Uploading results into container
2025-01-08 21:20:10,578:INFO:Uploading model into container now
2025-01-08 21:20:10,579:INFO:_master_model_container: 16
2025-01-08 21:20:10,579:INFO:_display_container: 2
2025-01-08 21:20:10,579:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:20:10,579:INFO:create_model() successfully completed......................................
2025-01-08 21:20:10,691:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:10,691:INFO:Creating metrics dataframe
2025-01-08 21:20:10,710:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 21:20:10,710:INFO:Total runtime is 0.22860127687454224 minutes
2025-01-08 21:20:10,714:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:10,715:INFO:Initializing create_model()
2025-01-08 21:20:10,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:10,715:INFO:Checking exceptions
2025-01-08 21:20:10,715:INFO:Importing libraries
2025-01-08 21:20:10,715:INFO:Copying training dataset
2025-01-08 21:20:10,724:INFO:Defining folds
2025-01-08 21:20:10,724:INFO:Declaring metric variables
2025-01-08 21:20:10,729:INFO:Importing untrained model
2025-01-08 21:20:10,735:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:20:10,744:INFO:Starting cross validation
2025-01-08 21:20:10,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:11,457:INFO:Calculating mean and std
2025-01-08 21:20:11,458:INFO:Creating metrics dataframe
2025-01-08 21:20:11,461:INFO:Uploading results into container
2025-01-08 21:20:11,461:INFO:Uploading model into container now
2025-01-08 21:20:11,462:INFO:_master_model_container: 17
2025-01-08 21:20:11,462:INFO:_display_container: 2
2025-01-08 21:20:11,462:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:11,463:INFO:create_model() successfully completed......................................
2025-01-08 21:20:11,576:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:11,576:INFO:Creating metrics dataframe
2025-01-08 21:20:11,592:INFO:Initializing Dummy Regressor
2025-01-08 21:20:11,592:INFO:Total runtime is 0.24330863157908122 minutes
2025-01-08 21:20:11,596:INFO:SubProcess create_model() called ==================================
2025-01-08 21:20:11,596:INFO:Initializing create_model()
2025-01-08 21:20:11,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D68F010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:11,597:INFO:Checking exceptions
2025-01-08 21:20:11,597:INFO:Importing libraries
2025-01-08 21:20:11,597:INFO:Copying training dataset
2025-01-08 21:20:11,605:INFO:Defining folds
2025-01-08 21:20:11,605:INFO:Declaring metric variables
2025-01-08 21:20:11,610:INFO:Importing untrained model
2025-01-08 21:20:11,614:INFO:Dummy Regressor Imported successfully
2025-01-08 21:20:11,626:INFO:Starting cross validation
2025-01-08 21:20:11,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:20:11,741:INFO:Calculating mean and std
2025-01-08 21:20:11,742:INFO:Creating metrics dataframe
2025-01-08 21:20:11,745:INFO:Uploading results into container
2025-01-08 21:20:11,745:INFO:Uploading model into container now
2025-01-08 21:20:11,746:INFO:_master_model_container: 18
2025-01-08 21:20:11,746:INFO:_display_container: 2
2025-01-08 21:20:11,746:INFO:DummyRegressor()
2025-01-08 21:20:11,747:INFO:create_model() successfully completed......................................
2025-01-08 21:20:11,861:INFO:SubProcess create_model() end ==================================
2025-01-08 21:20:11,861:INFO:Creating metrics dataframe
2025-01-08 21:20:11,877:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:20:11,891:INFO:Initializing create_model()
2025-01-08 21:20:11,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:11,892:INFO:Checking exceptions
2025-01-08 21:20:11,894:INFO:Importing libraries
2025-01-08 21:20:11,894:INFO:Copying training dataset
2025-01-08 21:20:11,902:INFO:Defining folds
2025-01-08 21:20:11,902:INFO:Declaring metric variables
2025-01-08 21:20:11,903:INFO:Importing untrained model
2025-01-08 21:20:11,903:INFO:Declaring custom model
2025-01-08 21:20:11,904:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:20:11,904:INFO:Cross validation set to False
2025-01-08 21:20:11,905:INFO:Fitting Model
2025-01-08 21:20:12,195:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:12,195:INFO:create_model() successfully completed......................................
2025-01-08 21:20:12,316:INFO:Initializing create_model()
2025-01-08 21:20:12,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:12,318:INFO:Checking exceptions
2025-01-08 21:20:12,322:INFO:Importing libraries
2025-01-08 21:20:12,322:INFO:Copying training dataset
2025-01-08 21:20:12,328:INFO:Defining folds
2025-01-08 21:20:12,329:INFO:Declaring metric variables
2025-01-08 21:20:12,329:INFO:Importing untrained model
2025-01-08 21:20:12,329:INFO:Declaring custom model
2025-01-08 21:20:12,330:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:20:12,331:INFO:Cross validation set to False
2025-01-08 21:20:12,331:INFO:Fitting Model
2025-01-08 21:20:12,809:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:12,809:INFO:create_model() successfully completed......................................
2025-01-08 21:20:12,928:INFO:Initializing create_model()
2025-01-08 21:20:12,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:20:12,928:INFO:Checking exceptions
2025-01-08 21:20:12,930:INFO:Importing libraries
2025-01-08 21:20:12,930:INFO:Copying training dataset
2025-01-08 21:20:12,937:INFO:Defining folds
2025-01-08 21:20:12,937:INFO:Declaring metric variables
2025-01-08 21:20:12,937:INFO:Importing untrained model
2025-01-08 21:20:12,937:INFO:Declaring custom model
2025-01-08 21:20:12,938:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:20:12,939:INFO:Cross validation set to False
2025-01-08 21:20:12,939:INFO:Fitting Model
2025-01-08 21:20:13,020:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:20:13,021:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000143 seconds.
2025-01-08 21:20:13,021:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:20:13,021:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:20:13,021:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:20:13,022:INFO:[LightGBM] [Info] Start training from score 3858.403986
2025-01-08 21:20:13,091:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:20:13,091:INFO:create_model() successfully completed......................................
2025-01-08 21:20:13,244:INFO:_master_model_container: 18
2025-01-08 21:20:13,244:INFO:_display_container: 2
2025-01-08 21:20:13,245:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)]
2025-01-08 21:20:13,246:INFO:compare_models() successfully completed......................................
2025-01-08 21:22:45,769:INFO:Initializing tune_model()
2025-01-08 21:22:45,769:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:22:45,769:INFO:Checking exceptions
2025-01-08 21:22:45,789:INFO:Copying training dataset
2025-01-08 21:22:45,795:INFO:Checking base model
2025-01-08 21:22:45,797:INFO:Base model : Extra Trees Regressor
2025-01-08 21:22:45,801:INFO:Declaring metric variables
2025-01-08 21:22:45,811:INFO:Defining Hyperparameters
2025-01-08 21:22:45,976:INFO:Tuning with n_jobs=-1
2025-01-08 21:22:45,976:INFO:Initializing RandomizedSearchCV
2025-01-08 21:23:48,998:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2025-01-08 21:23:48,999:INFO:Hyperparameter search completed
2025-01-08 21:23:49,000:INFO:SubProcess create_model() called ==================================
2025-01-08 21:23:49,001:INFO:Initializing create_model()
2025-01-08 21:23:49,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D28AC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2025-01-08 21:23:49,001:INFO:Checking exceptions
2025-01-08 21:23:49,002:INFO:Importing libraries
2025-01-08 21:23:49,002:INFO:Copying training dataset
2025-01-08 21:23:49,010:INFO:Defining folds
2025-01-08 21:23:49,010:INFO:Declaring metric variables
2025-01-08 21:23:49,014:INFO:Importing untrained model
2025-01-08 21:23:49,014:INFO:Declaring custom model
2025-01-08 21:23:49,019:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:23:49,029:INFO:Starting cross validation
2025-01-08 21:23:49,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:23:49,949:INFO:Calculating mean and std
2025-01-08 21:23:49,951:INFO:Creating metrics dataframe
2025-01-08 21:23:49,957:INFO:Finalizing model
2025-01-08 21:23:50,161:INFO:Uploading results into container
2025-01-08 21:23:50,162:INFO:Uploading model into container now
2025-01-08 21:23:50,163:INFO:_master_model_container: 19
2025-01-08 21:23:50,163:INFO:_display_container: 3
2025-01-08 21:23:50,164:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.1,
                    min_samples_leaf=4, min_samples_split=7, n_jobs=-1,
                    random_state=123)
2025-01-08 21:23:50,164:INFO:create_model() successfully completed......................................
2025-01-08 21:23:50,288:INFO:SubProcess create_model() end ==================================
2025-01-08 21:23:50,289:INFO:choose_better activated
2025-01-08 21:23:50,293:INFO:SubProcess create_model() called ==================================
2025-01-08 21:23:50,294:INFO:Initializing create_model()
2025-01-08 21:23:50,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:23:50,294:INFO:Checking exceptions
2025-01-08 21:23:50,295:INFO:Importing libraries
2025-01-08 21:23:50,296:INFO:Copying training dataset
2025-01-08 21:23:50,303:INFO:Defining folds
2025-01-08 21:23:50,303:INFO:Declaring metric variables
2025-01-08 21:23:50,304:INFO:Importing untrained model
2025-01-08 21:23:50,304:INFO:Declaring custom model
2025-01-08 21:23:50,305:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:23:50,305:INFO:Starting cross validation
2025-01-08 21:23:50,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:23:52,462:INFO:Calculating mean and std
2025-01-08 21:23:52,463:INFO:Creating metrics dataframe
2025-01-08 21:23:52,465:INFO:Finalizing model
2025-01-08 21:23:52,733:INFO:Uploading results into container
2025-01-08 21:23:52,733:INFO:Uploading model into container now
2025-01-08 21:23:52,734:INFO:_master_model_container: 20
2025-01-08 21:23:52,734:INFO:_display_container: 4
2025-01-08 21:23:52,734:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:23:52,734:INFO:create_model() successfully completed......................................
2025-01-08 21:23:52,848:INFO:SubProcess create_model() end ==================================
2025-01-08 21:23:52,849:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.974
2025-01-08 21:23:52,850:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.1,
                    min_samples_leaf=4, min_samples_split=7, n_jobs=-1,
                    random_state=123) result for R2 is 0.9537
2025-01-08 21:23:52,850:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:23:52,850:INFO:choose_better completed
2025-01-08 21:23:52,851:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:23:52,864:INFO:_master_model_container: 20
2025-01-08 21:23:52,864:INFO:_display_container: 3
2025-01-08 21:23:52,865:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:23:52,865:INFO:tune_model() successfully completed......................................
2025-01-08 21:23:53,023:INFO:Initializing tune_model()
2025-01-08 21:23:53,023:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:23:53,023:INFO:Checking exceptions
2025-01-08 21:23:53,042:INFO:Copying training dataset
2025-01-08 21:23:53,051:INFO:Checking base model
2025-01-08 21:23:53,051:INFO:Base model : Random Forest Regressor
2025-01-08 21:23:53,056:INFO:Declaring metric variables
2025-01-08 21:23:53,062:INFO:Defining Hyperparameters
2025-01-08 21:23:53,196:INFO:Tuning with n_jobs=-1
2025-01-08 21:23:53,196:INFO:Initializing RandomizedSearchCV
2025-01-08 21:26:08,528:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 21:26:08,529:INFO:Hyperparameter search completed
2025-01-08 21:26:08,529:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:08,530:INFO:Initializing create_model()
2025-01-08 21:26:08,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D671690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 21:26:08,531:INFO:Checking exceptions
2025-01-08 21:26:08,532:INFO:Importing libraries
2025-01-08 21:26:08,532:INFO:Copying training dataset
2025-01-08 21:26:08,541:INFO:Defining folds
2025-01-08 21:26:08,542:INFO:Declaring metric variables
2025-01-08 21:26:08,546:INFO:Importing untrained model
2025-01-08 21:26:08,547:INFO:Declaring custom model
2025-01-08 21:26:08,554:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:26:08,565:INFO:Starting cross validation
2025-01-08 21:26:08,569:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:13,157:INFO:Calculating mean and std
2025-01-08 21:26:13,159:INFO:Creating metrics dataframe
2025-01-08 21:26:13,169:INFO:Finalizing model
2025-01-08 21:26:13,741:INFO:Uploading results into container
2025-01-08 21:26:13,742:INFO:Uploading model into container now
2025-01-08 21:26:13,742:INFO:_master_model_container: 21
2025-01-08 21:26:13,743:INFO:_display_container: 4
2025-01-08 21:26:13,743:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='sqrt',
                      min_impurity_decrease=0.0002, min_samples_leaf=5,
                      min_samples_split=7, n_estimators=200, n_jobs=-1,
                      random_state=123)
2025-01-08 21:26:13,743:INFO:create_model() successfully completed......................................
2025-01-08 21:26:13,877:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:13,877:INFO:choose_better activated
2025-01-08 21:26:13,881:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:13,882:INFO:Initializing create_model()
2025-01-08 21:26:13,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:26:13,882:INFO:Checking exceptions
2025-01-08 21:26:13,884:INFO:Importing libraries
2025-01-08 21:26:13,885:INFO:Copying training dataset
2025-01-08 21:26:13,892:INFO:Defining folds
2025-01-08 21:26:13,892:INFO:Declaring metric variables
2025-01-08 21:26:13,892:INFO:Importing untrained model
2025-01-08 21:26:13,892:INFO:Declaring custom model
2025-01-08 21:26:13,893:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:26:13,893:INFO:Starting cross validation
2025-01-08 21:26:13,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:18,042:INFO:Calculating mean and std
2025-01-08 21:26:18,043:INFO:Creating metrics dataframe
2025-01-08 21:26:18,045:INFO:Finalizing model
2025-01-08 21:26:18,517:INFO:Uploading results into container
2025-01-08 21:26:18,518:INFO:Uploading model into container now
2025-01-08 21:26:18,518:INFO:_master_model_container: 22
2025-01-08 21:26:18,518:INFO:_display_container: 5
2025-01-08 21:26:18,519:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:26:18,519:INFO:create_model() successfully completed......................................
2025-01-08 21:26:18,648:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:18,649:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9709
2025-01-08 21:26:18,649:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='sqrt',
                      min_impurity_decrease=0.0002, min_samples_leaf=5,
                      min_samples_split=7, n_estimators=200, n_jobs=-1,
                      random_state=123) result for R2 is 0.9666
2025-01-08 21:26:18,650:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:26:18,650:INFO:choose_better completed
2025-01-08 21:26:18,650:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:26:18,671:INFO:_master_model_container: 22
2025-01-08 21:26:18,671:INFO:_display_container: 4
2025-01-08 21:26:18,672:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:26:18,672:INFO:tune_model() successfully completed......................................
2025-01-08 21:26:18,796:INFO:Initializing tune_model()
2025-01-08 21:26:18,796:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:26:18,796:INFO:Checking exceptions
2025-01-08 21:26:18,818:INFO:Copying training dataset
2025-01-08 21:26:18,828:INFO:Checking base model
2025-01-08 21:26:18,828:INFO:Base model : Light Gradient Boosting Machine
2025-01-08 21:26:18,837:INFO:Declaring metric variables
2025-01-08 21:26:18,844:INFO:Defining Hyperparameters
2025-01-08 21:26:19,032:INFO:Tuning with n_jobs=-1
2025-01-08 21:26:19,032:INFO:Initializing RandomizedSearchCV
2025-01-08 21:26:28,430:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_split_gain': 0.7, 'actual_estimator__min_child_samples': 96, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 4, 'actual_estimator__bagging_fraction': 0.6}
2025-01-08 21:26:28,431:INFO:Hyperparameter search completed
2025-01-08 21:26:28,431:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:28,432:INFO:Initializing create_model()
2025-01-08 21:26:28,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D9612D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0001, 'num_leaves': 10, 'n_estimators': 180, 'min_split_gain': 0.7, 'min_child_samples': 96, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 4, 'bagging_fraction': 0.6})
2025-01-08 21:26:28,433:INFO:Checking exceptions
2025-01-08 21:26:28,434:INFO:Importing libraries
2025-01-08 21:26:28,434:INFO:Copying training dataset
2025-01-08 21:26:28,441:INFO:Defining folds
2025-01-08 21:26:28,441:INFO:Declaring metric variables
2025-01-08 21:26:28,445:INFO:Importing untrained model
2025-01-08 21:26:28,445:INFO:Declaring custom model
2025-01-08 21:26:28,450:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:26:28,459:INFO:Starting cross validation
2025-01-08 21:26:28,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:29,153:INFO:Calculating mean and std
2025-01-08 21:26:29,155:INFO:Creating metrics dataframe
2025-01-08 21:26:29,162:INFO:Finalizing model
2025-01-08 21:26:29,173:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-08 21:26:29,173:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-08 21:26:29,173:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-08 21:26:29,176:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:26:29,176:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-08 21:26:29,176:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-08 21:26:29,177:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-08 21:26:29,178:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000103 seconds.
2025-01-08 21:26:29,178:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:26:29,178:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:26:29,178:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:26:29,178:INFO:[LightGBM] [Info] Start training from score 3858.403986
2025-01-08 21:26:29,288:INFO:Uploading results into container
2025-01-08 21:26:29,289:INFO:Uploading model into container now
2025-01-08 21:26:29,289:INFO:_master_model_container: 23
2025-01-08 21:26:29,290:INFO:_display_container: 5
2025-01-08 21:26:29,291:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1)
2025-01-08 21:26:29,291:INFO:create_model() successfully completed......................................
2025-01-08 21:26:29,415:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:29,415:INFO:choose_better activated
2025-01-08 21:26:29,420:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:29,421:INFO:Initializing create_model()
2025-01-08 21:26:29,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:26:29,421:INFO:Checking exceptions
2025-01-08 21:26:29,424:INFO:Importing libraries
2025-01-08 21:26:29,424:INFO:Copying training dataset
2025-01-08 21:26:29,431:INFO:Defining folds
2025-01-08 21:26:29,431:INFO:Declaring metric variables
2025-01-08 21:26:29,431:INFO:Importing untrained model
2025-01-08 21:26:29,431:INFO:Declaring custom model
2025-01-08 21:26:29,432:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:26:29,432:INFO:Starting cross validation
2025-01-08 21:26:29,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:30,136:INFO:Calculating mean and std
2025-01-08 21:26:30,137:INFO:Creating metrics dataframe
2025-01-08 21:26:30,139:INFO:Finalizing model
2025-01-08 21:26:30,152:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:26:30,152:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000122 seconds.
2025-01-08 21:26:30,152:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:26:30,153:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:26:30,153:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:26:30,153:INFO:[LightGBM] [Info] Start training from score 3858.403986
2025-01-08 21:26:30,276:INFO:Uploading results into container
2025-01-08 21:26:30,277:INFO:Uploading model into container now
2025-01-08 21:26:30,277:INFO:_master_model_container: 24
2025-01-08 21:26:30,278:INFO:_display_container: 6
2025-01-08 21:26:30,278:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:26:30,278:INFO:create_model() successfully completed......................................
2025-01-08 21:26:30,393:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:30,393:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for R2 is 0.964
2025-01-08 21:26:30,394:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1) result for R2 is 0.9467
2025-01-08 21:26:30,395:INFO:LGBMRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:26:30,395:INFO:choose_better completed
2025-01-08 21:26:30,395:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:26:30,409:INFO:_master_model_container: 24
2025-01-08 21:26:30,409:INFO:_display_container: 5
2025-01-08 21:26:30,409:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:26:30,410:INFO:tune_model() successfully completed......................................
2025-01-08 21:26:30,530:INFO:Initializing tune_model()
2025-01-08 21:26:30,530:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:26:30,530:INFO:Checking exceptions
2025-01-08 21:26:30,550:INFO:Copying training dataset
2025-01-08 21:26:30,561:INFO:Checking base model
2025-01-08 21:26:30,562:INFO:Base model : Decision Tree Regressor
2025-01-08 21:26:30,569:INFO:Declaring metric variables
2025-01-08 21:26:30,575:INFO:Defining Hyperparameters
2025-01-08 21:26:30,776:INFO:Tuning with n_jobs=-1
2025-01-08 21:26:30,776:INFO:Initializing RandomizedSearchCV
2025-01-08 21:26:33,218:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'friedman_mse'}
2025-01-08 21:26:33,219:INFO:Hyperparameter search completed
2025-01-08 21:26:33,221:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:33,221:INFO:Initializing create_model()
2025-01-08 21:26:33,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D962B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'friedman_mse'})
2025-01-08 21:26:33,222:INFO:Checking exceptions
2025-01-08 21:26:33,222:INFO:Importing libraries
2025-01-08 21:26:33,222:INFO:Copying training dataset
2025-01-08 21:26:33,230:INFO:Defining folds
2025-01-08 21:26:33,230:INFO:Declaring metric variables
2025-01-08 21:26:33,234:INFO:Importing untrained model
2025-01-08 21:26:33,234:INFO:Declaring custom model
2025-01-08 21:26:33,239:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:26:33,248:INFO:Starting cross validation
2025-01-08 21:26:33,250:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:33,402:INFO:Calculating mean and std
2025-01-08 21:26:33,405:INFO:Creating metrics dataframe
2025-01-08 21:26:33,414:INFO:Finalizing model
2025-01-08 21:26:33,443:INFO:Uploading results into container
2025-01-08 21:26:33,444:INFO:Uploading model into container now
2025-01-08 21:26:33,444:INFO:_master_model_container: 25
2025-01-08 21:26:33,444:INFO:_display_container: 6
2025-01-08 21:26:33,447:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:26:33,447:INFO:create_model() successfully completed......................................
2025-01-08 21:26:33,564:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:33,564:INFO:choose_better activated
2025-01-08 21:26:33,568:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:33,569:INFO:Initializing create_model()
2025-01-08 21:26:33,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:26:33,569:INFO:Checking exceptions
2025-01-08 21:26:33,572:INFO:Importing libraries
2025-01-08 21:26:33,572:INFO:Copying training dataset
2025-01-08 21:26:33,578:INFO:Defining folds
2025-01-08 21:26:33,579:INFO:Declaring metric variables
2025-01-08 21:26:33,579:INFO:Importing untrained model
2025-01-08 21:26:33,579:INFO:Declaring custom model
2025-01-08 21:26:33,580:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:26:33,580:INFO:Starting cross validation
2025-01-08 21:26:33,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:26:33,753:INFO:Calculating mean and std
2025-01-08 21:26:33,754:INFO:Creating metrics dataframe
2025-01-08 21:26:33,756:INFO:Finalizing model
2025-01-08 21:26:33,786:INFO:Uploading results into container
2025-01-08 21:26:33,787:INFO:Uploading model into container now
2025-01-08 21:26:33,787:INFO:_master_model_container: 26
2025-01-08 21:26:33,788:INFO:_display_container: 7
2025-01-08 21:26:33,788:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:26:33,788:INFO:create_model() successfully completed......................................
2025-01-08 21:26:33,897:INFO:SubProcess create_model() end ==================================
2025-01-08 21:26:33,897:INFO:DecisionTreeRegressor(random_state=123) result for R2 is 0.9584
2025-01-08 21:26:33,898:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123) result for R2 is 0.9603
2025-01-08 21:26:33,899:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123) is best model
2025-01-08 21:26:33,899:INFO:choose_better completed
2025-01-08 21:26:33,912:INFO:_master_model_container: 26
2025-01-08 21:26:33,912:INFO:_display_container: 6
2025-01-08 21:26:33,913:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:26:33,913:INFO:tune_model() successfully completed......................................
2025-01-08 21:26:34,027:INFO:Initializing tune_model()
2025-01-08 21:26:34,028:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:26:34,028:INFO:Checking exceptions
2025-01-08 21:26:34,048:INFO:Copying training dataset
2025-01-08 21:26:34,057:INFO:Checking base model
2025-01-08 21:26:34,057:INFO:Base model : Gradient Boosting Regressor
2025-01-08 21:26:34,063:INFO:Declaring metric variables
2025-01-08 21:26:34,068:INFO:Defining Hyperparameters
2025-01-08 21:26:34,259:INFO:Tuning with n_jobs=-1
2025-01-08 21:26:34,259:INFO:Initializing RandomizedSearchCV
2025-01-08 21:26:54,459:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.15}
2025-01-08 21:26:54,460:INFO:Hyperparameter search completed
2025-01-08 21:26:54,460:INFO:SubProcess create_model() called ==================================
2025-01-08 21:26:54,461:INFO:Initializing create_model()
2025-01-08 21:26:54,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06DB65BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.85, 'n_estimators': 230, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'learning_rate': 0.15})
2025-01-08 21:26:54,461:INFO:Checking exceptions
2025-01-08 21:26:54,461:INFO:Importing libraries
2025-01-08 21:26:54,461:INFO:Copying training dataset
2025-01-08 21:26:54,469:INFO:Defining folds
2025-01-08 21:26:54,469:INFO:Declaring metric variables
2025-01-08 21:26:54,474:INFO:Importing untrained model
2025-01-08 21:26:54,474:INFO:Declaring custom model
2025-01-08 21:26:54,480:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:26:54,492:INFO:Starting cross validation
2025-01-08 21:26:54,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:27:00,668:INFO:Calculating mean and std
2025-01-08 21:27:00,670:INFO:Creating metrics dataframe
2025-01-08 21:27:00,678:INFO:Finalizing model
2025-01-08 21:27:02,854:INFO:Uploading results into container
2025-01-08 21:27:02,855:INFO:Uploading model into container now
2025-01-08 21:27:02,856:INFO:_master_model_container: 27
2025-01-08 21:27:02,856:INFO:_display_container: 7
2025-01-08 21:27:02,857:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:27:02,857:INFO:create_model() successfully completed......................................
2025-01-08 21:27:02,978:INFO:SubProcess create_model() end ==================================
2025-01-08 21:27:02,978:INFO:choose_better activated
2025-01-08 21:27:02,983:INFO:SubProcess create_model() called ==================================
2025-01-08 21:27:02,983:INFO:Initializing create_model()
2025-01-08 21:27:02,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:27:02,984:INFO:Checking exceptions
2025-01-08 21:27:02,986:INFO:Importing libraries
2025-01-08 21:27:02,986:INFO:Copying training dataset
2025-01-08 21:27:02,992:INFO:Defining folds
2025-01-08 21:27:02,992:INFO:Declaring metric variables
2025-01-08 21:27:02,992:INFO:Importing untrained model
2025-01-08 21:27:02,992:INFO:Declaring custom model
2025-01-08 21:27:02,993:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:27:02,994:INFO:Starting cross validation
2025-01-08 21:27:02,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:27:04,547:INFO:Calculating mean and std
2025-01-08 21:27:04,548:INFO:Creating metrics dataframe
2025-01-08 21:27:04,550:INFO:Finalizing model
2025-01-08 21:27:05,041:INFO:Uploading results into container
2025-01-08 21:27:05,042:INFO:Uploading model into container now
2025-01-08 21:27:05,042:INFO:_master_model_container: 28
2025-01-08 21:27:05,042:INFO:_display_container: 8
2025-01-08 21:27:05,043:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:27:05,043:INFO:create_model() successfully completed......................................
2025-01-08 21:27:05,154:INFO:SubProcess create_model() end ==================================
2025-01-08 21:27:05,155:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.9561
2025-01-08 21:27:05,156:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85) result for R2 is 0.9676
2025-01-08 21:27:05,156:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85) is best model
2025-01-08 21:27:05,157:INFO:choose_better completed
2025-01-08 21:27:05,170:INFO:_master_model_container: 28
2025-01-08 21:27:05,171:INFO:_display_container: 7
2025-01-08 21:27:05,172:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:27:05,172:INFO:tune_model() successfully completed......................................
2025-01-08 21:28:15,630:INFO:Initializing compare_models()
2025-01-08 21:28:15,630:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:28:15,631:INFO:Checking exceptions
2025-01-08 21:28:15,634:INFO:Preparing display monitor
2025-01-08 21:28:15,668:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:28:15,668:INFO:Total runtime is 0.0 minutes
2025-01-08 21:28:15,674:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:15,675:INFO:Initializing create_model()
2025-01-08 21:28:15,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:15,675:INFO:Checking exceptions
2025-01-08 21:28:15,675:INFO:Importing libraries
2025-01-08 21:28:15,675:INFO:Copying training dataset
2025-01-08 21:28:15,683:INFO:Defining folds
2025-01-08 21:28:15,683:INFO:Declaring metric variables
2025-01-08 21:28:15,687:INFO:Importing untrained model
2025-01-08 21:28:15,688:INFO:Declaring custom model
2025-01-08 21:28:15,693:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:28:15,711:INFO:Starting cross validation
2025-01-08 21:28:15,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:18,226:INFO:Calculating mean and std
2025-01-08 21:28:18,228:INFO:Creating metrics dataframe
2025-01-08 21:28:18,230:INFO:Uploading results into container
2025-01-08 21:28:18,231:INFO:Uploading model into container now
2025-01-08 21:28:18,231:INFO:_master_model_container: 29
2025-01-08 21:28:18,231:INFO:_display_container: 8
2025-01-08 21:28:18,232:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:18,233:INFO:create_model() successfully completed......................................
2025-01-08 21:28:18,349:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:18,350:INFO:Creating metrics dataframe
2025-01-08 21:28:18,359:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:28:18,359:INFO:Total runtime is 0.04484798510869344 minutes
2025-01-08 21:28:18,364:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:18,364:INFO:Initializing create_model()
2025-01-08 21:28:18,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:18,365:INFO:Checking exceptions
2025-01-08 21:28:18,365:INFO:Importing libraries
2025-01-08 21:28:18,365:INFO:Copying training dataset
2025-01-08 21:28:18,373:INFO:Defining folds
2025-01-08 21:28:18,373:INFO:Declaring metric variables
2025-01-08 21:28:18,379:INFO:Importing untrained model
2025-01-08 21:28:18,379:INFO:Declaring custom model
2025-01-08 21:28:18,386:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:28:18,394:INFO:Starting cross validation
2025-01-08 21:28:18,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:22,381:INFO:Calculating mean and std
2025-01-08 21:28:22,383:INFO:Creating metrics dataframe
2025-01-08 21:28:22,385:INFO:Uploading results into container
2025-01-08 21:28:22,385:INFO:Uploading model into container now
2025-01-08 21:28:22,386:INFO:_master_model_container: 30
2025-01-08 21:28:22,386:INFO:_display_container: 8
2025-01-08 21:28:22,386:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:22,387:INFO:create_model() successfully completed......................................
2025-01-08 21:28:22,498:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:22,498:INFO:Creating metrics dataframe
2025-01-08 21:28:22,509:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:28:22,510:INFO:Total runtime is 0.11404387156168619 minutes
2025-01-08 21:28:22,515:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:22,516:INFO:Initializing create_model()
2025-01-08 21:28:22,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:22,516:INFO:Checking exceptions
2025-01-08 21:28:22,517:INFO:Importing libraries
2025-01-08 21:28:22,517:INFO:Copying training dataset
2025-01-08 21:28:22,524:INFO:Defining folds
2025-01-08 21:28:22,524:INFO:Declaring metric variables
2025-01-08 21:28:22,531:INFO:Importing untrained model
2025-01-08 21:28:22,531:INFO:Declaring custom model
2025-01-08 21:28:22,537:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:28:22,547:INFO:Starting cross validation
2025-01-08 21:28:22,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:23,359:INFO:Calculating mean and std
2025-01-08 21:28:23,360:INFO:Creating metrics dataframe
2025-01-08 21:28:23,364:INFO:Uploading results into container
2025-01-08 21:28:23,365:INFO:Uploading model into container now
2025-01-08 21:28:23,366:INFO:_master_model_container: 31
2025-01-08 21:28:23,366:INFO:_display_container: 8
2025-01-08 21:28:23,366:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:23,366:INFO:create_model() successfully completed......................................
2025-01-08 21:28:23,482:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:23,483:INFO:Creating metrics dataframe
2025-01-08 21:28:23,492:INFO:Initializing custom model Decision Tree Regressor
2025-01-08 21:28:23,493:INFO:Total runtime is 0.130417001247406 minutes
2025-01-08 21:28:23,497:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:23,498:INFO:Initializing create_model()
2025-01-08 21:28:23,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:23,498:INFO:Checking exceptions
2025-01-08 21:28:23,498:INFO:Importing libraries
2025-01-08 21:28:23,499:INFO:Copying training dataset
2025-01-08 21:28:23,506:INFO:Defining folds
2025-01-08 21:28:23,506:INFO:Declaring metric variables
2025-01-08 21:28:23,512:INFO:Importing untrained model
2025-01-08 21:28:23,512:INFO:Declaring custom model
2025-01-08 21:28:23,520:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:28:23,531:INFO:Starting cross validation
2025-01-08 21:28:23,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:23,704:INFO:Calculating mean and std
2025-01-08 21:28:23,706:INFO:Creating metrics dataframe
2025-01-08 21:28:23,708:INFO:Uploading results into container
2025-01-08 21:28:23,709:INFO:Uploading model into container now
2025-01-08 21:28:23,709:INFO:_master_model_container: 32
2025-01-08 21:28:23,709:INFO:_display_container: 8
2025-01-08 21:28:23,710:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:28:23,710:INFO:create_model() successfully completed......................................
2025-01-08 21:28:23,823:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:23,824:INFO:Creating metrics dataframe
2025-01-08 21:28:23,836:INFO:Initializing custom model Gradient Boosting Regressor
2025-01-08 21:28:23,836:INFO:Total runtime is 0.13613008658091225 minutes
2025-01-08 21:28:23,840:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:23,841:INFO:Initializing create_model()
2025-01-08 21:28:23,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:23,841:INFO:Checking exceptions
2025-01-08 21:28:23,841:INFO:Importing libraries
2025-01-08 21:28:23,841:INFO:Copying training dataset
2025-01-08 21:28:23,850:INFO:Defining folds
2025-01-08 21:28:23,850:INFO:Declaring metric variables
2025-01-08 21:28:23,855:INFO:Importing untrained model
2025-01-08 21:28:23,856:INFO:Declaring custom model
2025-01-08 21:28:23,861:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:28:23,873:INFO:Starting cross validation
2025-01-08 21:28:23,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:25,489:INFO:Calculating mean and std
2025-01-08 21:28:25,490:INFO:Creating metrics dataframe
2025-01-08 21:28:25,493:INFO:Uploading results into container
2025-01-08 21:28:25,494:INFO:Uploading model into container now
2025-01-08 21:28:25,494:INFO:_master_model_container: 33
2025-01-08 21:28:25,494:INFO:_display_container: 8
2025-01-08 21:28:25,495:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:28:25,495:INFO:create_model() successfully completed......................................
2025-01-08 21:28:25,606:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:25,607:INFO:Creating metrics dataframe
2025-01-08 21:28:25,619:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:28:25,619:INFO:Total runtime is 0.16586123704910277 minutes
2025-01-08 21:28:25,625:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:25,626:INFO:Initializing create_model()
2025-01-08 21:28:25,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:25,626:INFO:Checking exceptions
2025-01-08 21:28:25,626:INFO:Importing libraries
2025-01-08 21:28:25,626:INFO:Copying training dataset
2025-01-08 21:28:25,635:INFO:Defining folds
2025-01-08 21:28:25,635:INFO:Declaring metric variables
2025-01-08 21:28:25,641:INFO:Importing untrained model
2025-01-08 21:28:25,641:INFO:Declaring custom model
2025-01-08 21:28:25,646:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:28:25,658:INFO:Starting cross validation
2025-01-08 21:28:25,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:27,839:INFO:Calculating mean and std
2025-01-08 21:28:27,841:INFO:Creating metrics dataframe
2025-01-08 21:28:27,843:INFO:Uploading results into container
2025-01-08 21:28:27,844:INFO:Uploading model into container now
2025-01-08 21:28:27,844:INFO:_master_model_container: 34
2025-01-08 21:28:27,844:INFO:_display_container: 8
2025-01-08 21:28:27,845:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:27,845:INFO:create_model() successfully completed......................................
2025-01-08 21:28:27,968:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:27,968:INFO:Creating metrics dataframe
2025-01-08 21:28:27,979:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:28:27,979:INFO:Total runtime is 0.20518401861190794 minutes
2025-01-08 21:28:27,983:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:27,984:INFO:Initializing create_model()
2025-01-08 21:28:27,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:27,984:INFO:Checking exceptions
2025-01-08 21:28:27,985:INFO:Importing libraries
2025-01-08 21:28:27,985:INFO:Copying training dataset
2025-01-08 21:28:27,992:INFO:Defining folds
2025-01-08 21:28:27,993:INFO:Declaring metric variables
2025-01-08 21:28:27,998:INFO:Importing untrained model
2025-01-08 21:28:27,998:INFO:Declaring custom model
2025-01-08 21:28:28,005:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:28:28,015:INFO:Starting cross validation
2025-01-08 21:28:28,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:31,975:INFO:Calculating mean and std
2025-01-08 21:28:31,977:INFO:Creating metrics dataframe
2025-01-08 21:28:31,979:INFO:Uploading results into container
2025-01-08 21:28:31,980:INFO:Uploading model into container now
2025-01-08 21:28:31,980:INFO:_master_model_container: 35
2025-01-08 21:28:31,980:INFO:_display_container: 8
2025-01-08 21:28:31,981:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:31,981:INFO:create_model() successfully completed......................................
2025-01-08 21:28:32,094:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:32,094:INFO:Creating metrics dataframe
2025-01-08 21:28:32,107:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:28:32,107:INFO:Total runtime is 0.27399249871571857 minutes
2025-01-08 21:28:32,111:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:32,112:INFO:Initializing create_model()
2025-01-08 21:28:32,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:32,113:INFO:Checking exceptions
2025-01-08 21:28:32,113:INFO:Importing libraries
2025-01-08 21:28:32,113:INFO:Copying training dataset
2025-01-08 21:28:32,121:INFO:Defining folds
2025-01-08 21:28:32,122:INFO:Declaring metric variables
2025-01-08 21:28:32,128:INFO:Importing untrained model
2025-01-08 21:28:32,129:INFO:Declaring custom model
2025-01-08 21:28:32,134:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:28:32,149:INFO:Starting cross validation
2025-01-08 21:28:32,150:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:32,959:INFO:Calculating mean and std
2025-01-08 21:28:32,961:INFO:Creating metrics dataframe
2025-01-08 21:28:32,963:INFO:Uploading results into container
2025-01-08 21:28:32,965:INFO:Uploading model into container now
2025-01-08 21:28:32,966:INFO:_master_model_container: 36
2025-01-08 21:28:32,966:INFO:_display_container: 8
2025-01-08 21:28:32,966:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:32,966:INFO:create_model() successfully completed......................................
2025-01-08 21:28:33,079:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:33,080:INFO:Creating metrics dataframe
2025-01-08 21:28:33,092:INFO:Initializing custom model Decision Tree Regressor
2025-01-08 21:28:33,092:INFO:Total runtime is 0.290398899714152 minutes
2025-01-08 21:28:33,097:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:33,097:INFO:Initializing create_model()
2025-01-08 21:28:33,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:33,098:INFO:Checking exceptions
2025-01-08 21:28:33,098:INFO:Importing libraries
2025-01-08 21:28:33,098:INFO:Copying training dataset
2025-01-08 21:28:33,106:INFO:Defining folds
2025-01-08 21:28:33,106:INFO:Declaring metric variables
2025-01-08 21:28:33,112:INFO:Importing untrained model
2025-01-08 21:28:33,112:INFO:Declaring custom model
2025-01-08 21:28:33,117:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:28:33,128:INFO:Starting cross validation
2025-01-08 21:28:33,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:33,286:INFO:Calculating mean and std
2025-01-08 21:28:33,287:INFO:Creating metrics dataframe
2025-01-08 21:28:33,291:INFO:Uploading results into container
2025-01-08 21:28:33,291:INFO:Uploading model into container now
2025-01-08 21:28:33,292:INFO:_master_model_container: 37
2025-01-08 21:28:33,292:INFO:_display_container: 8
2025-01-08 21:28:33,293:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:28:33,293:INFO:create_model() successfully completed......................................
2025-01-08 21:28:33,406:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:33,406:INFO:Creating metrics dataframe
2025-01-08 21:28:33,419:INFO:Initializing custom model Gradient Boosting Regressor
2025-01-08 21:28:33,419:INFO:Total runtime is 0.2958625555038452 minutes
2025-01-08 21:28:33,423:INFO:SubProcess create_model() called ==================================
2025-01-08 21:28:33,424:INFO:Initializing create_model()
2025-01-08 21:28:33,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D656150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:33,425:INFO:Checking exceptions
2025-01-08 21:28:33,425:INFO:Importing libraries
2025-01-08 21:28:33,425:INFO:Copying training dataset
2025-01-08 21:28:33,432:INFO:Defining folds
2025-01-08 21:28:33,432:INFO:Declaring metric variables
2025-01-08 21:28:33,439:INFO:Importing untrained model
2025-01-08 21:28:33,439:INFO:Declaring custom model
2025-01-08 21:28:33,445:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:28:33,453:INFO:Starting cross validation
2025-01-08 21:28:33,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:28:39,944:INFO:Calculating mean and std
2025-01-08 21:28:39,946:INFO:Creating metrics dataframe
2025-01-08 21:28:39,948:INFO:Uploading results into container
2025-01-08 21:28:39,949:INFO:Uploading model into container now
2025-01-08 21:28:39,949:INFO:_master_model_container: 38
2025-01-08 21:28:39,949:INFO:_display_container: 8
2025-01-08 21:28:39,951:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:28:39,952:INFO:create_model() successfully completed......................................
2025-01-08 21:28:40,066:INFO:SubProcess create_model() end ==================================
2025-01-08 21:28:40,067:INFO:Creating metrics dataframe
2025-01-08 21:28:40,080:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:28:40,094:INFO:Initializing create_model()
2025-01-08 21:28:40,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:28:40,095:INFO:Checking exceptions
2025-01-08 21:28:40,097:INFO:Importing libraries
2025-01-08 21:28:40,097:INFO:Copying training dataset
2025-01-08 21:28:40,103:INFO:Defining folds
2025-01-08 21:28:40,103:INFO:Declaring metric variables
2025-01-08 21:28:40,103:INFO:Importing untrained model
2025-01-08 21:28:40,103:INFO:Declaring custom model
2025-01-08 21:28:40,104:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:28:40,105:INFO:Cross validation set to False
2025-01-08 21:28:40,105:INFO:Fitting Model
2025-01-08 21:28:40,430:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:40,430:INFO:create_model() successfully completed......................................
2025-01-08 21:28:40,578:INFO:_master_model_container: 38
2025-01-08 21:28:40,579:INFO:_display_container: 8
2025-01-08 21:28:40,580:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:28:40,580:INFO:compare_models() successfully completed......................................
2025-01-08 21:29:11,183:INFO:Initializing compare_models()
2025-01-08 21:29:11,183:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:29:11,183:INFO:Checking exceptions
2025-01-08 21:29:11,187:INFO:Preparing display monitor
2025-01-08 21:29:11,226:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:29:11,226:INFO:Total runtime is 1.666545867919922e-05 minutes
2025-01-08 21:29:11,234:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:11,235:INFO:Initializing create_model()
2025-01-08 21:29:11,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:11,235:INFO:Checking exceptions
2025-01-08 21:29:11,235:INFO:Importing libraries
2025-01-08 21:29:11,235:INFO:Copying training dataset
2025-01-08 21:29:11,244:INFO:Defining folds
2025-01-08 21:29:11,244:INFO:Declaring metric variables
2025-01-08 21:29:11,248:INFO:Importing untrained model
2025-01-08 21:29:11,248:INFO:Declaring custom model
2025-01-08 21:29:11,259:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:29:11,281:INFO:Starting cross validation
2025-01-08 21:29:11,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:13,629:INFO:Calculating mean and std
2025-01-08 21:29:13,631:INFO:Creating metrics dataframe
2025-01-08 21:29:13,634:INFO:Uploading results into container
2025-01-08 21:29:13,635:INFO:Uploading model into container now
2025-01-08 21:29:13,636:INFO:_master_model_container: 39
2025-01-08 21:29:13,636:INFO:_display_container: 9
2025-01-08 21:29:13,637:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:13,637:INFO:create_model() successfully completed......................................
2025-01-08 21:29:13,762:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:13,762:INFO:Creating metrics dataframe
2025-01-08 21:29:13,771:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:29:13,771:INFO:Total runtime is 0.042436301708221436 minutes
2025-01-08 21:29:13,776:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:13,777:INFO:Initializing create_model()
2025-01-08 21:29:13,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:13,777:INFO:Checking exceptions
2025-01-08 21:29:13,778:INFO:Importing libraries
2025-01-08 21:29:13,778:INFO:Copying training dataset
2025-01-08 21:29:13,785:INFO:Defining folds
2025-01-08 21:29:13,785:INFO:Declaring metric variables
2025-01-08 21:29:13,791:INFO:Importing untrained model
2025-01-08 21:29:13,792:INFO:Declaring custom model
2025-01-08 21:29:13,797:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:29:13,807:INFO:Starting cross validation
2025-01-08 21:29:13,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:17,758:INFO:Calculating mean and std
2025-01-08 21:29:17,760:INFO:Creating metrics dataframe
2025-01-08 21:29:17,763:INFO:Uploading results into container
2025-01-08 21:29:17,764:INFO:Uploading model into container now
2025-01-08 21:29:17,764:INFO:_master_model_container: 40
2025-01-08 21:29:17,765:INFO:_display_container: 9
2025-01-08 21:29:17,766:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:17,766:INFO:create_model() successfully completed......................................
2025-01-08 21:29:17,878:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:17,878:INFO:Creating metrics dataframe
2025-01-08 21:29:17,888:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:29:17,888:INFO:Total runtime is 0.11105352242787679 minutes
2025-01-08 21:29:17,893:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:17,893:INFO:Initializing create_model()
2025-01-08 21:29:17,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:17,894:INFO:Checking exceptions
2025-01-08 21:29:17,894:INFO:Importing libraries
2025-01-08 21:29:17,894:INFO:Copying training dataset
2025-01-08 21:29:17,902:INFO:Defining folds
2025-01-08 21:29:17,903:INFO:Declaring metric variables
2025-01-08 21:29:17,909:INFO:Importing untrained model
2025-01-08 21:29:17,909:INFO:Declaring custom model
2025-01-08 21:29:17,916:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:29:17,927:INFO:Starting cross validation
2025-01-08 21:29:17,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:18,633:INFO:Calculating mean and std
2025-01-08 21:29:18,635:INFO:Creating metrics dataframe
2025-01-08 21:29:18,638:INFO:Uploading results into container
2025-01-08 21:29:18,639:INFO:Uploading model into container now
2025-01-08 21:29:18,640:INFO:_master_model_container: 41
2025-01-08 21:29:18,640:INFO:_display_container: 9
2025-01-08 21:29:18,640:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:18,640:INFO:create_model() successfully completed......................................
2025-01-08 21:29:18,752:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:18,752:INFO:Creating metrics dataframe
2025-01-08 21:29:18,762:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:29:18,762:INFO:Total runtime is 0.1256276806195577 minutes
2025-01-08 21:29:18,767:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:18,767:INFO:Initializing create_model()
2025-01-08 21:29:18,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:18,768:INFO:Checking exceptions
2025-01-08 21:29:18,768:INFO:Importing libraries
2025-01-08 21:29:18,768:INFO:Copying training dataset
2025-01-08 21:29:18,775:INFO:Defining folds
2025-01-08 21:29:18,775:INFO:Declaring metric variables
2025-01-08 21:29:18,780:INFO:Importing untrained model
2025-01-08 21:29:18,780:INFO:Declaring custom model
2025-01-08 21:29:18,786:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:29:18,797:INFO:Starting cross validation
2025-01-08 21:29:18,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:20,934:INFO:Calculating mean and std
2025-01-08 21:29:20,936:INFO:Creating metrics dataframe
2025-01-08 21:29:20,938:INFO:Uploading results into container
2025-01-08 21:29:20,939:INFO:Uploading model into container now
2025-01-08 21:29:20,939:INFO:_master_model_container: 42
2025-01-08 21:29:20,939:INFO:_display_container: 9
2025-01-08 21:29:20,940:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:20,941:INFO:create_model() successfully completed......................................
2025-01-08 21:29:21,052:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:21,053:INFO:Creating metrics dataframe
2025-01-08 21:29:21,063:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:29:21,063:INFO:Total runtime is 0.16397568782170613 minutes
2025-01-08 21:29:21,068:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:21,068:INFO:Initializing create_model()
2025-01-08 21:29:21,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:21,069:INFO:Checking exceptions
2025-01-08 21:29:21,069:INFO:Importing libraries
2025-01-08 21:29:21,069:INFO:Copying training dataset
2025-01-08 21:29:21,076:INFO:Defining folds
2025-01-08 21:29:21,076:INFO:Declaring metric variables
2025-01-08 21:29:21,082:INFO:Importing untrained model
2025-01-08 21:29:21,083:INFO:Declaring custom model
2025-01-08 21:29:21,088:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:29:21,098:INFO:Starting cross validation
2025-01-08 21:29:21,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:25,074:INFO:Calculating mean and std
2025-01-08 21:29:25,076:INFO:Creating metrics dataframe
2025-01-08 21:29:25,078:INFO:Uploading results into container
2025-01-08 21:29:25,079:INFO:Uploading model into container now
2025-01-08 21:29:25,079:INFO:_master_model_container: 43
2025-01-08 21:29:25,079:INFO:_display_container: 9
2025-01-08 21:29:25,079:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:25,080:INFO:create_model() successfully completed......................................
2025-01-08 21:29:25,194:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:25,195:INFO:Creating metrics dataframe
2025-01-08 21:29:25,206:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-08 21:29:25,206:INFO:Total runtime is 0.2330194115638733 minutes
2025-01-08 21:29:25,210:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:25,211:INFO:Initializing create_model()
2025-01-08 21:29:25,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:25,211:INFO:Checking exceptions
2025-01-08 21:29:25,211:INFO:Importing libraries
2025-01-08 21:29:25,212:INFO:Copying training dataset
2025-01-08 21:29:25,219:INFO:Defining folds
2025-01-08 21:29:25,219:INFO:Declaring metric variables
2025-01-08 21:29:25,225:INFO:Importing untrained model
2025-01-08 21:29:25,225:INFO:Declaring custom model
2025-01-08 21:29:25,232:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:29:25,242:INFO:Starting cross validation
2025-01-08 21:29:25,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:26,036:INFO:Calculating mean and std
2025-01-08 21:29:26,037:INFO:Creating metrics dataframe
2025-01-08 21:29:26,040:INFO:Uploading results into container
2025-01-08 21:29:26,041:INFO:Uploading model into container now
2025-01-08 21:29:26,041:INFO:_master_model_container: 44
2025-01-08 21:29:26,041:INFO:_display_container: 9
2025-01-08 21:29:26,042:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:26,042:INFO:create_model() successfully completed......................................
2025-01-08 21:29:26,155:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:26,156:INFO:Creating metrics dataframe
2025-01-08 21:29:26,167:INFO:Initializing custom model Decision Tree Regressor
2025-01-08 21:29:26,167:INFO:Total runtime is 0.24904271761576335 minutes
2025-01-08 21:29:26,171:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:26,172:INFO:Initializing create_model()
2025-01-08 21:29:26,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:26,172:INFO:Checking exceptions
2025-01-08 21:29:26,172:INFO:Importing libraries
2025-01-08 21:29:26,173:INFO:Copying training dataset
2025-01-08 21:29:26,180:INFO:Defining folds
2025-01-08 21:29:26,180:INFO:Declaring metric variables
2025-01-08 21:29:26,187:INFO:Importing untrained model
2025-01-08 21:29:26,187:INFO:Declaring custom model
2025-01-08 21:29:26,193:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:29:26,203:INFO:Starting cross validation
2025-01-08 21:29:26,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:26,372:INFO:Calculating mean and std
2025-01-08 21:29:26,373:INFO:Creating metrics dataframe
2025-01-08 21:29:26,376:INFO:Uploading results into container
2025-01-08 21:29:26,376:INFO:Uploading model into container now
2025-01-08 21:29:26,377:INFO:_master_model_container: 45
2025-01-08 21:29:26,378:INFO:_display_container: 9
2025-01-08 21:29:26,378:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=10, max_features=1.0,
                      min_impurity_decrease=0.01, min_samples_leaf=2,
                      min_samples_split=9, random_state=123)
2025-01-08 21:29:26,379:INFO:create_model() successfully completed......................................
2025-01-08 21:29:26,545:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:26,545:INFO:Creating metrics dataframe
2025-01-08 21:29:26,558:INFO:Initializing custom model Gradient Boosting Regressor
2025-01-08 21:29:26,558:INFO:Total runtime is 0.2555549343427022 minutes
2025-01-08 21:29:26,562:INFO:SubProcess create_model() called ==================================
2025-01-08 21:29:26,563:INFO:Initializing create_model()
2025-01-08 21:29:26,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F06D5CF010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:26,564:INFO:Checking exceptions
2025-01-08 21:29:26,564:INFO:Importing libraries
2025-01-08 21:29:26,564:INFO:Copying training dataset
2025-01-08 21:29:26,571:INFO:Defining folds
2025-01-08 21:29:26,571:INFO:Declaring metric variables
2025-01-08 21:29:26,575:INFO:Importing untrained model
2025-01-08 21:29:26,575:INFO:Declaring custom model
2025-01-08 21:29:26,584:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:29:26,593:INFO:Starting cross validation
2025-01-08 21:29:26,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:29:32,677:INFO:Calculating mean and std
2025-01-08 21:29:32,678:INFO:Creating metrics dataframe
2025-01-08 21:29:32,681:INFO:Uploading results into container
2025-01-08 21:29:32,682:INFO:Uploading model into container now
2025-01-08 21:29:32,682:INFO:_master_model_container: 46
2025-01-08 21:29:32,683:INFO:_display_container: 9
2025-01-08 21:29:32,684:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=7, max_features=1.0,
                          min_impurity_decrease=0.02, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=230,
                          random_state=123, subsample=0.85)
2025-01-08 21:29:32,684:INFO:create_model() successfully completed......................................
2025-01-08 21:29:32,798:INFO:SubProcess create_model() end ==================================
2025-01-08 21:29:32,798:INFO:Creating metrics dataframe
2025-01-08 21:29:32,811:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:29:32,846:INFO:Initializing create_model()
2025-01-08 21:29:32,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:29:32,846:INFO:Checking exceptions
2025-01-08 21:29:32,848:INFO:Importing libraries
2025-01-08 21:29:32,848:INFO:Copying training dataset
2025-01-08 21:29:32,855:INFO:Defining folds
2025-01-08 21:29:32,855:INFO:Declaring metric variables
2025-01-08 21:29:32,855:INFO:Importing untrained model
2025-01-08 21:29:32,855:INFO:Declaring custom model
2025-01-08 21:29:32,856:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:29:32,877:INFO:Cross validation set to False
2025-01-08 21:29:32,877:INFO:Fitting Model
2025-01-08 21:29:33,181:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:33,181:INFO:create_model() successfully completed......................................
2025-01-08 21:29:33,326:INFO:_master_model_container: 46
2025-01-08 21:29:33,326:INFO:_display_container: 9
2025-01-08 21:29:33,327:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:29:33,327:INFO:compare_models() successfully completed......................................
2025-01-08 21:30:28,485:INFO:Initializing plot_model()
2025-01-08 21:30:28,485:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:30:28,485:INFO:Checking exceptions
2025-01-08 21:30:28,518:INFO:Preloading libraries
2025-01-08 21:30:28,612:INFO:Copying training dataset
2025-01-08 21:30:28,612:INFO:Plot type: residuals
2025-01-08 21:30:28,876:INFO:Fitting Model
2025-01-08 21:30:28,876:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:30:29,037:INFO:Scoring test/hold-out set
2025-01-08 21:30:29,832:INFO:Visual Rendered Successfully
2025-01-08 21:30:29,971:INFO:plot_model() successfully completed......................................
2025-01-08 21:31:11,295:INFO:Initializing plot_model()
2025-01-08 21:31:11,295:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:31:11,295:INFO:Checking exceptions
2025-01-08 21:31:11,340:INFO:Preloading libraries
2025-01-08 21:31:11,433:INFO:Copying training dataset
2025-01-08 21:31:11,433:INFO:Plot type: error
2025-01-08 21:31:11,663:INFO:Fitting Model
2025-01-08 21:31:11,663:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:31:11,663:INFO:Scoring test/hold-out set
2025-01-08 21:31:12,094:INFO:Visual Rendered Successfully
2025-01-08 21:31:12,210:INFO:plot_model() successfully completed......................................
2025-01-08 21:31:38,222:INFO:Initializing plot_model()
2025-01-08 21:31:38,222:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:31:38,222:INFO:Checking exceptions
2025-01-08 21:31:38,256:INFO:Preloading libraries
2025-01-08 21:31:38,354:INFO:Copying training dataset
2025-01-08 21:31:38,354:INFO:Plot type: feature
2025-01-08 21:31:38,355:WARNING:No coef_ found. Trying feature_importances_
2025-01-08 21:31:38,611:INFO:Visual Rendered Successfully
2025-01-08 21:31:38,725:INFO:plot_model() successfully completed......................................
2025-01-08 21:33:20,164:INFO:Initializing finalize_model()
2025-01-08 21:33:20,164:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-08 21:33:20,165:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:33:20,169:INFO:Initializing create_model()
2025-01-08 21:33:20,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F06D2D9410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:33:20,169:INFO:Checking exceptions
2025-01-08 21:33:20,171:INFO:Importing libraries
2025-01-08 21:33:20,171:INFO:Copying training dataset
2025-01-08 21:33:20,172:INFO:Defining folds
2025-01-08 21:33:20,172:INFO:Declaring metric variables
2025-01-08 21:33:20,172:INFO:Importing untrained model
2025-01-08 21:33:20,172:INFO:Declaring custom model
2025-01-08 21:33:20,173:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:33:20,174:INFO:Cross validation set to False
2025-01-08 21:33:20,174:INFO:Fitting Model
2025-01-08 21:33:20,544:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:33:20,544:INFO:create_model() successfully completed......................................
2025-01-08 21:33:20,657:INFO:_master_model_container: 46
2025-01-08 21:33:20,657:INFO:_display_container: 9
2025-01-08 21:33:20,666:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:33:20,666:INFO:finalize_model() successfully completed......................................
2025-01-08 21:33:20,798:INFO:Initializing save_model()
2025-01-08 21:33:20,799:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=super95_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-08 21:33:20,831:INFO:Adding model into prep_pipe
2025-01-08 21:33:20,831:WARNING:Only Model saved as it was a pipeline.
2025-01-08 21:33:20,951:INFO:super95_model.pkl saved in current working directory
2025-01-08 21:33:20,959:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 21:33:20,959:INFO:save_model() successfully completed......................................
2025-01-08 21:52:35,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 21:52:35,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 21:52:35,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 21:52:35,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-08 21:53:46,289:INFO:PyCaret RegressionExperiment
2025-01-08 21:53:46,289:INFO:Logging name: reg-default-name
2025-01-08 21:53:46,289:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 21:53:46,289:INFO:version 3.3.2
2025-01-08 21:53:46,289:INFO:Initializing setup()
2025-01-08 21:53:46,289:INFO:self.USI: 3c4a
2025-01-08 21:53:46,289:INFO:self._variable_keys: {'_ml_usecase', 'X_test', 'fold_groups_param', '_available_plots', 'transform_target_param', 'memory', 'gpu_n_jobs_param', 'X', 'fold_generator', 'exp_id', 'pipeline', 'idx', 'data', 'y', 'gpu_param', 'logging_param', 'USI', 'seed', 'n_jobs_param', 'log_plots_param', 'exp_name_log', 'html_param', 'y_test', 'fold_shuffle_param', 'target_param', 'y_train', 'X_train'}
2025-01-08 21:53:46,289:INFO:Checking environment
2025-01-08 21:53:46,289:INFO:python_version: 3.11.11
2025-01-08 21:53:46,290:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 21:53:46,290:INFO:machine: AMD64
2025-01-08 21:53:46,290:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 21:53:46,290:INFO:Memory: svmem(total=6439919616, available=924598272, percent=85.6, used=5515321344, free=924598272)
2025-01-08 21:53:46,290:INFO:Physical Core: 4
2025-01-08 21:53:46,291:INFO:Logical Core: 4
2025-01-08 21:53:46,291:INFO:Checking libraries
2025-01-08 21:53:46,291:INFO:System:
2025-01-08 21:53:46,291:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 21:53:46,291:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 21:53:46,291:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 21:53:46,291:INFO:PyCaret required dependencies:
2025-01-08 21:53:46,346:INFO:                 pip: 24.2
2025-01-08 21:53:46,346:INFO:          setuptools: 75.1.0
2025-01-08 21:53:46,346:INFO:             pycaret: 3.3.2
2025-01-08 21:53:46,346:INFO:             IPython: 8.30.0
2025-01-08 21:53:46,346:INFO:          ipywidgets: 8.1.5
2025-01-08 21:53:46,347:INFO:                tqdm: 4.67.1
2025-01-08 21:53:46,347:INFO:               numpy: 1.26.4
2025-01-08 21:53:46,347:INFO:              pandas: 2.1.4
2025-01-08 21:53:46,347:INFO:              jinja2: 3.1.4
2025-01-08 21:53:46,347:INFO:               scipy: 1.11.4
2025-01-08 21:53:46,347:INFO:              joblib: 1.3.2
2025-01-08 21:53:46,347:INFO:             sklearn: 1.4.2
2025-01-08 21:53:46,347:INFO:                pyod: 2.0.3
2025-01-08 21:53:46,347:INFO:            imblearn: 0.13.0
2025-01-08 21:53:46,347:INFO:   category_encoders: 2.7.0
2025-01-08 21:53:46,347:INFO:            lightgbm: 4.5.0
2025-01-08 21:53:46,348:INFO:               numba: 0.60.0
2025-01-08 21:53:46,348:INFO:            requests: 2.32.3
2025-01-08 21:53:46,348:INFO:          matplotlib: 3.7.5
2025-01-08 21:53:46,348:INFO:          scikitplot: 0.3.7
2025-01-08 21:53:46,348:INFO:         yellowbrick: 1.5
2025-01-08 21:53:46,348:INFO:              plotly: 5.24.1
2025-01-08 21:53:46,348:INFO:    plotly-resampler: Not installed
2025-01-08 21:53:46,348:INFO:             kaleido: 0.2.1
2025-01-08 21:53:46,348:INFO:           schemdraw: 0.15
2025-01-08 21:53:46,348:INFO:         statsmodels: 0.14.4
2025-01-08 21:53:46,348:INFO:              sktime: 0.26.0
2025-01-08 21:53:46,348:INFO:               tbats: 1.1.3
2025-01-08 21:53:46,348:INFO:            pmdarima: 2.0.4
2025-01-08 21:53:46,349:INFO:              psutil: 5.9.0
2025-01-08 21:53:46,349:INFO:          markupsafe: 2.1.3
2025-01-08 21:53:46,349:INFO:             pickle5: Not installed
2025-01-08 21:53:46,349:INFO:         cloudpickle: 3.1.0
2025-01-08 21:53:46,349:INFO:         deprecation: 2.1.0
2025-01-08 21:53:46,349:INFO:              xxhash: 3.5.0
2025-01-08 21:53:46,349:INFO:           wurlitzer: Not installed
2025-01-08 21:53:46,349:INFO:PyCaret optional dependencies:
2025-01-08 21:53:46,374:INFO:                shap: Not installed
2025-01-08 21:53:46,374:INFO:           interpret: Not installed
2025-01-08 21:53:46,374:INFO:                umap: Not installed
2025-01-08 21:53:46,374:INFO:     ydata_profiling: Not installed
2025-01-08 21:53:46,374:INFO:  explainerdashboard: Not installed
2025-01-08 21:53:46,375:INFO:             autoviz: Not installed
2025-01-08 21:53:46,375:INFO:           fairlearn: Not installed
2025-01-08 21:53:46,375:INFO:          deepchecks: Not installed
2025-01-08 21:53:46,375:INFO:             xgboost: Not installed
2025-01-08 21:53:46,375:INFO:            catboost: Not installed
2025-01-08 21:53:46,375:INFO:              kmodes: Not installed
2025-01-08 21:53:46,375:INFO:             mlxtend: Not installed
2025-01-08 21:53:46,375:INFO:       statsforecast: Not installed
2025-01-08 21:53:46,375:INFO:        tune_sklearn: Not installed
2025-01-08 21:53:46,375:INFO:                 ray: Not installed
2025-01-08 21:53:46,375:INFO:            hyperopt: Not installed
2025-01-08 21:53:46,375:INFO:              optuna: Not installed
2025-01-08 21:53:46,376:INFO:               skopt: Not installed
2025-01-08 21:53:46,376:INFO:              mlflow: Not installed
2025-01-08 21:53:46,376:INFO:              gradio: Not installed
2025-01-08 21:53:46,376:INFO:             fastapi: Not installed
2025-01-08 21:53:46,376:INFO:             uvicorn: Not installed
2025-01-08 21:53:46,376:INFO:              m2cgen: Not installed
2025-01-08 21:53:46,376:INFO:           evidently: Not installed
2025-01-08 21:53:46,376:INFO:               fugue: Not installed
2025-01-08 21:53:46,376:INFO:           streamlit: Not installed
2025-01-08 21:53:46,376:INFO:             prophet: Not installed
2025-01-08 21:53:46,376:INFO:None
2025-01-08 21:53:46,376:INFO:Set up data.
2025-01-08 21:53:46,387:INFO:Set up folding strategy.
2025-01-08 21:53:46,387:INFO:Set up train/test split.
2025-01-08 21:53:46,394:INFO:Set up index.
2025-01-08 21:53:46,395:INFO:Assigning column types.
2025-01-08 21:53:46,399:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 21:53:46,400:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,411:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,556:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:46,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:46,663:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,674:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:46,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:46,920:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 21:53:46,932:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:53:46,942:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,192:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,203:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,444:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 21:53:47,465:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,735:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:47,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 21:53:47,901:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,006:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,008:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 21:53:48,161:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,419:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 21:53:48,679:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:48,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:48,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 21:53:49,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,043:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 21:53:49,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:49,566:INFO:Preparing preprocessing pipeline...
2025-01-08 21:53:49,566:INFO:Set up simple imputation.
2025-01-08 21:53:49,567:INFO:Set up column name cleaning.
2025-01-08 21:53:49,656:INFO:Finished creating preprocessing pipeline.
2025-01-08 21:53:49,665:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 21:53:49,665:INFO:Creating final display dataframe.
2025-01-08 21:53:49,875:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3c4a
2025-01-08 21:53:50,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:50,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:50,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:50,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 21:53:50,417:INFO:setup() successfully completed in 4.14s...............
2025-01-08 21:53:56,303:INFO:Initializing compare_models()
2025-01-08 21:53:56,304:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:53:56,304:INFO:Checking exceptions
2025-01-08 21:53:56,306:INFO:Preparing display monitor
2025-01-08 21:53:56,338:INFO:Initializing Linear Regression
2025-01-08 21:53:56,338:INFO:Total runtime is 0.0 minutes
2025-01-08 21:53:56,343:INFO:SubProcess create_model() called ==================================
2025-01-08 21:53:56,344:INFO:Initializing create_model()
2025-01-08 21:53:56,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:53:56,344:INFO:Checking exceptions
2025-01-08 21:53:56,344:INFO:Importing libraries
2025-01-08 21:53:56,345:INFO:Copying training dataset
2025-01-08 21:53:56,352:INFO:Defining folds
2025-01-08 21:53:56,352:INFO:Declaring metric variables
2025-01-08 21:53:56,356:INFO:Importing untrained model
2025-01-08 21:53:56,364:INFO:Linear Regression Imported successfully
2025-01-08 21:53:56,375:INFO:Starting cross validation
2025-01-08 21:53:56,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:01,416:INFO:Calculating mean and std
2025-01-08 21:54:01,418:INFO:Creating metrics dataframe
2025-01-08 21:54:01,422:INFO:Uploading results into container
2025-01-08 21:54:01,424:INFO:Uploading model into container now
2025-01-08 21:54:01,425:INFO:_master_model_container: 1
2025-01-08 21:54:01,425:INFO:_display_container: 2
2025-01-08 21:54:01,425:INFO:LinearRegression(n_jobs=-1)
2025-01-08 21:54:01,425:INFO:create_model() successfully completed......................................
2025-01-08 21:54:01,524:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:01,524:INFO:Creating metrics dataframe
2025-01-08 21:54:01,536:INFO:Initializing Lasso Regression
2025-01-08 21:54:01,536:INFO:Total runtime is 0.08662943045298259 minutes
2025-01-08 21:54:01,542:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:01,542:INFO:Initializing create_model()
2025-01-08 21:54:01,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:01,543:INFO:Checking exceptions
2025-01-08 21:54:01,543:INFO:Importing libraries
2025-01-08 21:54:01,543:INFO:Copying training dataset
2025-01-08 21:54:01,550:INFO:Defining folds
2025-01-08 21:54:01,550:INFO:Declaring metric variables
2025-01-08 21:54:01,557:INFO:Importing untrained model
2025-01-08 21:54:01,561:INFO:Lasso Regression Imported successfully
2025-01-08 21:54:01,572:INFO:Starting cross validation
2025-01-08 21:54:01,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:01,713:INFO:Calculating mean and std
2025-01-08 21:54:01,715:INFO:Creating metrics dataframe
2025-01-08 21:54:01,718:INFO:Uploading results into container
2025-01-08 21:54:01,718:INFO:Uploading model into container now
2025-01-08 21:54:01,719:INFO:_master_model_container: 2
2025-01-08 21:54:01,719:INFO:_display_container: 2
2025-01-08 21:54:01,719:INFO:Lasso(random_state=123)
2025-01-08 21:54:01,720:INFO:create_model() successfully completed......................................
2025-01-08 21:54:01,816:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:01,817:INFO:Creating metrics dataframe
2025-01-08 21:54:01,828:INFO:Initializing Ridge Regression
2025-01-08 21:54:01,828:INFO:Total runtime is 0.09149357080459596 minutes
2025-01-08 21:54:01,832:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:01,832:INFO:Initializing create_model()
2025-01-08 21:54:01,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:01,833:INFO:Checking exceptions
2025-01-08 21:54:01,833:INFO:Importing libraries
2025-01-08 21:54:01,833:INFO:Copying training dataset
2025-01-08 21:54:01,841:INFO:Defining folds
2025-01-08 21:54:01,841:INFO:Declaring metric variables
2025-01-08 21:54:01,845:INFO:Importing untrained model
2025-01-08 21:54:01,850:INFO:Ridge Regression Imported successfully
2025-01-08 21:54:01,859:INFO:Starting cross validation
2025-01-08 21:54:01,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:01,991:INFO:Calculating mean and std
2025-01-08 21:54:01,992:INFO:Creating metrics dataframe
2025-01-08 21:54:01,995:INFO:Uploading results into container
2025-01-08 21:54:01,995:INFO:Uploading model into container now
2025-01-08 21:54:01,996:INFO:_master_model_container: 3
2025-01-08 21:54:01,996:INFO:_display_container: 2
2025-01-08 21:54:01,997:INFO:Ridge(random_state=123)
2025-01-08 21:54:01,997:INFO:create_model() successfully completed......................................
2025-01-08 21:54:02,091:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:02,091:INFO:Creating metrics dataframe
2025-01-08 21:54:02,101:INFO:Initializing Elastic Net
2025-01-08 21:54:02,101:INFO:Total runtime is 0.0960405468940735 minutes
2025-01-08 21:54:02,105:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:02,105:INFO:Initializing create_model()
2025-01-08 21:54:02,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:02,105:INFO:Checking exceptions
2025-01-08 21:54:02,106:INFO:Importing libraries
2025-01-08 21:54:02,106:INFO:Copying training dataset
2025-01-08 21:54:02,113:INFO:Defining folds
2025-01-08 21:54:02,113:INFO:Declaring metric variables
2025-01-08 21:54:02,122:INFO:Importing untrained model
2025-01-08 21:54:02,127:INFO:Elastic Net Imported successfully
2025-01-08 21:54:02,138:INFO:Starting cross validation
2025-01-08 21:54:02,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:02,330:INFO:Calculating mean and std
2025-01-08 21:54:02,332:INFO:Creating metrics dataframe
2025-01-08 21:54:02,334:INFO:Uploading results into container
2025-01-08 21:54:02,335:INFO:Uploading model into container now
2025-01-08 21:54:02,335:INFO:_master_model_container: 4
2025-01-08 21:54:02,335:INFO:_display_container: 2
2025-01-08 21:54:02,336:INFO:ElasticNet(random_state=123)
2025-01-08 21:54:02,336:INFO:create_model() successfully completed......................................
2025-01-08 21:54:02,431:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:02,431:INFO:Creating metrics dataframe
2025-01-08 21:54:02,442:INFO:Initializing Least Angle Regression
2025-01-08 21:54:02,442:INFO:Total runtime is 0.10173722505569459 minutes
2025-01-08 21:54:02,446:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:02,447:INFO:Initializing create_model()
2025-01-08 21:54:02,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:02,447:INFO:Checking exceptions
2025-01-08 21:54:02,447:INFO:Importing libraries
2025-01-08 21:54:02,447:INFO:Copying training dataset
2025-01-08 21:54:02,455:INFO:Defining folds
2025-01-08 21:54:02,455:INFO:Declaring metric variables
2025-01-08 21:54:02,460:INFO:Importing untrained model
2025-01-08 21:54:02,464:INFO:Least Angle Regression Imported successfully
2025-01-08 21:54:02,476:INFO:Starting cross validation
2025-01-08 21:54:02,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:02,630:INFO:Calculating mean and std
2025-01-08 21:54:02,632:INFO:Creating metrics dataframe
2025-01-08 21:54:02,636:INFO:Uploading results into container
2025-01-08 21:54:02,638:INFO:Uploading model into container now
2025-01-08 21:54:02,639:INFO:_master_model_container: 5
2025-01-08 21:54:02,640:INFO:_display_container: 2
2025-01-08 21:54:02,641:INFO:Lars(random_state=123)
2025-01-08 21:54:02,642:INFO:create_model() successfully completed......................................
2025-01-08 21:54:02,745:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:02,745:INFO:Creating metrics dataframe
2025-01-08 21:54:02,756:INFO:Initializing Lasso Least Angle Regression
2025-01-08 21:54:02,756:INFO:Total runtime is 0.10696638425191245 minutes
2025-01-08 21:54:02,760:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:02,761:INFO:Initializing create_model()
2025-01-08 21:54:02,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:02,761:INFO:Checking exceptions
2025-01-08 21:54:02,761:INFO:Importing libraries
2025-01-08 21:54:02,762:INFO:Copying training dataset
2025-01-08 21:54:02,768:INFO:Defining folds
2025-01-08 21:54:02,768:INFO:Declaring metric variables
2025-01-08 21:54:02,775:INFO:Importing untrained model
2025-01-08 21:54:02,779:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 21:54:02,790:INFO:Starting cross validation
2025-01-08 21:54:02,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:02,912:INFO:Calculating mean and std
2025-01-08 21:54:02,913:INFO:Creating metrics dataframe
2025-01-08 21:54:02,916:INFO:Uploading results into container
2025-01-08 21:54:02,916:INFO:Uploading model into container now
2025-01-08 21:54:02,917:INFO:_master_model_container: 6
2025-01-08 21:54:02,917:INFO:_display_container: 2
2025-01-08 21:54:02,917:INFO:LassoLars(random_state=123)
2025-01-08 21:54:02,918:INFO:create_model() successfully completed......................................
2025-01-08 21:54:03,013:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:03,014:INFO:Creating metrics dataframe
2025-01-08 21:54:03,029:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 21:54:03,029:INFO:Total runtime is 0.11151354710261029 minutes
2025-01-08 21:54:03,034:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:03,034:INFO:Initializing create_model()
2025-01-08 21:54:03,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:03,035:INFO:Checking exceptions
2025-01-08 21:54:03,035:INFO:Importing libraries
2025-01-08 21:54:03,035:INFO:Copying training dataset
2025-01-08 21:54:03,044:INFO:Defining folds
2025-01-08 21:54:03,044:INFO:Declaring metric variables
2025-01-08 21:54:03,048:INFO:Importing untrained model
2025-01-08 21:54:03,056:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 21:54:03,070:INFO:Starting cross validation
2025-01-08 21:54:03,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:03,211:INFO:Calculating mean and std
2025-01-08 21:54:03,213:INFO:Creating metrics dataframe
2025-01-08 21:54:03,215:INFO:Uploading results into container
2025-01-08 21:54:03,215:INFO:Uploading model into container now
2025-01-08 21:54:03,216:INFO:_master_model_container: 7
2025-01-08 21:54:03,216:INFO:_display_container: 2
2025-01-08 21:54:03,216:INFO:OrthogonalMatchingPursuit()
2025-01-08 21:54:03,216:INFO:create_model() successfully completed......................................
2025-01-08 21:54:03,311:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:03,311:INFO:Creating metrics dataframe
2025-01-08 21:54:03,323:INFO:Initializing Bayesian Ridge
2025-01-08 21:54:03,323:INFO:Total runtime is 0.11641048192977907 minutes
2025-01-08 21:54:03,327:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:03,328:INFO:Initializing create_model()
2025-01-08 21:54:03,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:03,328:INFO:Checking exceptions
2025-01-08 21:54:03,328:INFO:Importing libraries
2025-01-08 21:54:03,328:INFO:Copying training dataset
2025-01-08 21:54:03,335:INFO:Defining folds
2025-01-08 21:54:03,335:INFO:Declaring metric variables
2025-01-08 21:54:03,342:INFO:Importing untrained model
2025-01-08 21:54:03,347:INFO:Bayesian Ridge Imported successfully
2025-01-08 21:54:03,358:INFO:Starting cross validation
2025-01-08 21:54:03,359:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:03,508:INFO:Calculating mean and std
2025-01-08 21:54:03,509:INFO:Creating metrics dataframe
2025-01-08 21:54:03,512:INFO:Uploading results into container
2025-01-08 21:54:03,512:INFO:Uploading model into container now
2025-01-08 21:54:03,513:INFO:_master_model_container: 8
2025-01-08 21:54:03,513:INFO:_display_container: 2
2025-01-08 21:54:03,514:INFO:BayesianRidge()
2025-01-08 21:54:03,514:INFO:create_model() successfully completed......................................
2025-01-08 21:54:03,610:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:03,610:INFO:Creating metrics dataframe
2025-01-08 21:54:03,622:INFO:Initializing Passive Aggressive Regressor
2025-01-08 21:54:03,622:INFO:Total runtime is 0.12139072418212893 minutes
2025-01-08 21:54:03,627:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:03,627:INFO:Initializing create_model()
2025-01-08 21:54:03,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:03,628:INFO:Checking exceptions
2025-01-08 21:54:03,628:INFO:Importing libraries
2025-01-08 21:54:03,628:INFO:Copying training dataset
2025-01-08 21:54:03,635:INFO:Defining folds
2025-01-08 21:54:03,635:INFO:Declaring metric variables
2025-01-08 21:54:03,640:INFO:Importing untrained model
2025-01-08 21:54:03,645:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 21:54:03,654:INFO:Starting cross validation
2025-01-08 21:54:03,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:03,848:INFO:Calculating mean and std
2025-01-08 21:54:03,850:INFO:Creating metrics dataframe
2025-01-08 21:54:03,852:INFO:Uploading results into container
2025-01-08 21:54:03,852:INFO:Uploading model into container now
2025-01-08 21:54:03,853:INFO:_master_model_container: 9
2025-01-08 21:54:03,853:INFO:_display_container: 2
2025-01-08 21:54:03,853:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 21:54:03,853:INFO:create_model() successfully completed......................................
2025-01-08 21:54:03,946:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:03,947:INFO:Creating metrics dataframe
2025-01-08 21:54:03,962:INFO:Initializing Huber Regressor
2025-01-08 21:54:03,962:INFO:Total runtime is 0.12707101504007978 minutes
2025-01-08 21:54:03,967:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:03,967:INFO:Initializing create_model()
2025-01-08 21:54:03,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:03,967:INFO:Checking exceptions
2025-01-08 21:54:03,968:INFO:Importing libraries
2025-01-08 21:54:03,968:INFO:Copying training dataset
2025-01-08 21:54:03,976:INFO:Defining folds
2025-01-08 21:54:03,976:INFO:Declaring metric variables
2025-01-08 21:54:03,980:INFO:Importing untrained model
2025-01-08 21:54:03,985:INFO:Huber Regressor Imported successfully
2025-01-08 21:54:03,995:INFO:Starting cross validation
2025-01-08 21:54:03,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:04,236:INFO:Calculating mean and std
2025-01-08 21:54:04,237:INFO:Creating metrics dataframe
2025-01-08 21:54:04,241:INFO:Uploading results into container
2025-01-08 21:54:04,242:INFO:Uploading model into container now
2025-01-08 21:54:04,242:INFO:_master_model_container: 10
2025-01-08 21:54:04,243:INFO:_display_container: 2
2025-01-08 21:54:04,243:INFO:HuberRegressor()
2025-01-08 21:54:04,243:INFO:create_model() successfully completed......................................
2025-01-08 21:54:04,336:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:04,336:INFO:Creating metrics dataframe
2025-01-08 21:54:04,349:INFO:Initializing K Neighbors Regressor
2025-01-08 21:54:04,349:INFO:Total runtime is 0.13351683219273888 minutes
2025-01-08 21:54:04,353:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:04,354:INFO:Initializing create_model()
2025-01-08 21:54:04,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:04,354:INFO:Checking exceptions
2025-01-08 21:54:04,354:INFO:Importing libraries
2025-01-08 21:54:04,354:INFO:Copying training dataset
2025-01-08 21:54:04,363:INFO:Defining folds
2025-01-08 21:54:04,364:INFO:Declaring metric variables
2025-01-08 21:54:04,370:INFO:Importing untrained model
2025-01-08 21:54:04,376:INFO:K Neighbors Regressor Imported successfully
2025-01-08 21:54:04,391:INFO:Starting cross validation
2025-01-08 21:54:04,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:04,641:INFO:Calculating mean and std
2025-01-08 21:54:04,643:INFO:Creating metrics dataframe
2025-01-08 21:54:04,646:INFO:Uploading results into container
2025-01-08 21:54:04,646:INFO:Uploading model into container now
2025-01-08 21:54:04,647:INFO:_master_model_container: 11
2025-01-08 21:54:04,647:INFO:_display_container: 2
2025-01-08 21:54:04,648:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 21:54:04,648:INFO:create_model() successfully completed......................................
2025-01-08 21:54:04,741:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:04,741:INFO:Creating metrics dataframe
2025-01-08 21:54:04,754:INFO:Initializing Decision Tree Regressor
2025-01-08 21:54:04,754:INFO:Total runtime is 0.140268349647522 minutes
2025-01-08 21:54:04,759:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:04,760:INFO:Initializing create_model()
2025-01-08 21:54:04,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:04,760:INFO:Checking exceptions
2025-01-08 21:54:04,760:INFO:Importing libraries
2025-01-08 21:54:04,760:INFO:Copying training dataset
2025-01-08 21:54:04,768:INFO:Defining folds
2025-01-08 21:54:04,768:INFO:Declaring metric variables
2025-01-08 21:54:04,774:INFO:Importing untrained model
2025-01-08 21:54:04,780:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:54:04,790:INFO:Starting cross validation
2025-01-08 21:54:04,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:04,972:INFO:Calculating mean and std
2025-01-08 21:54:04,974:INFO:Creating metrics dataframe
2025-01-08 21:54:04,977:INFO:Uploading results into container
2025-01-08 21:54:04,978:INFO:Uploading model into container now
2025-01-08 21:54:04,978:INFO:_master_model_container: 12
2025-01-08 21:54:04,979:INFO:_display_container: 2
2025-01-08 21:54:04,979:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:54:04,979:INFO:create_model() successfully completed......................................
2025-01-08 21:54:05,073:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:05,073:INFO:Creating metrics dataframe
2025-01-08 21:54:05,087:INFO:Initializing Random Forest Regressor
2025-01-08 21:54:05,087:INFO:Total runtime is 0.14581533670425417 minutes
2025-01-08 21:54:05,092:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:05,092:INFO:Initializing create_model()
2025-01-08 21:54:05,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:05,092:INFO:Checking exceptions
2025-01-08 21:54:05,093:INFO:Importing libraries
2025-01-08 21:54:05,093:INFO:Copying training dataset
2025-01-08 21:54:05,100:INFO:Defining folds
2025-01-08 21:54:05,100:INFO:Declaring metric variables
2025-01-08 21:54:05,105:INFO:Importing untrained model
2025-01-08 21:54:05,114:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:54:05,128:INFO:Starting cross validation
2025-01-08 21:54:05,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:09,324:INFO:Calculating mean and std
2025-01-08 21:54:09,325:INFO:Creating metrics dataframe
2025-01-08 21:54:09,329:INFO:Uploading results into container
2025-01-08 21:54:09,329:INFO:Uploading model into container now
2025-01-08 21:54:09,331:INFO:_master_model_container: 13
2025-01-08 21:54:09,331:INFO:_display_container: 2
2025-01-08 21:54:09,331:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:09,331:INFO:create_model() successfully completed......................................
2025-01-08 21:54:09,424:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:09,424:INFO:Creating metrics dataframe
2025-01-08 21:54:09,438:INFO:Initializing Extra Trees Regressor
2025-01-08 21:54:09,438:INFO:Total runtime is 0.21834007501602176 minutes
2025-01-08 21:54:09,442:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:09,443:INFO:Initializing create_model()
2025-01-08 21:54:09,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:09,443:INFO:Checking exceptions
2025-01-08 21:54:09,444:INFO:Importing libraries
2025-01-08 21:54:09,444:INFO:Copying training dataset
2025-01-08 21:54:09,451:INFO:Defining folds
2025-01-08 21:54:09,454:INFO:Declaring metric variables
2025-01-08 21:54:09,487:INFO:Importing untrained model
2025-01-08 21:54:09,520:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:54:09,541:INFO:Starting cross validation
2025-01-08 21:54:09,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:11,779:INFO:Calculating mean and std
2025-01-08 21:54:11,781:INFO:Creating metrics dataframe
2025-01-08 21:54:11,784:INFO:Uploading results into container
2025-01-08 21:54:11,785:INFO:Uploading model into container now
2025-01-08 21:54:11,786:INFO:_master_model_container: 14
2025-01-08 21:54:11,786:INFO:_display_container: 2
2025-01-08 21:54:11,787:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:11,787:INFO:create_model() successfully completed......................................
2025-01-08 21:54:11,878:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:11,878:INFO:Creating metrics dataframe
2025-01-08 21:54:11,893:INFO:Initializing AdaBoost Regressor
2025-01-08 21:54:11,893:INFO:Total runtime is 0.25924984614054364 minutes
2025-01-08 21:54:11,897:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:11,897:INFO:Initializing create_model()
2025-01-08 21:54:11,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:11,898:INFO:Checking exceptions
2025-01-08 21:54:11,898:INFO:Importing libraries
2025-01-08 21:54:11,898:INFO:Copying training dataset
2025-01-08 21:54:11,905:INFO:Defining folds
2025-01-08 21:54:11,905:INFO:Declaring metric variables
2025-01-08 21:54:11,910:INFO:Importing untrained model
2025-01-08 21:54:11,918:INFO:AdaBoost Regressor Imported successfully
2025-01-08 21:54:11,926:INFO:Starting cross validation
2025-01-08 21:54:11,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:12,770:INFO:Calculating mean and std
2025-01-08 21:54:12,772:INFO:Creating metrics dataframe
2025-01-08 21:54:12,774:INFO:Uploading results into container
2025-01-08 21:54:12,775:INFO:Uploading model into container now
2025-01-08 21:54:12,775:INFO:_master_model_container: 15
2025-01-08 21:54:12,776:INFO:_display_container: 2
2025-01-08 21:54:12,776:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 21:54:12,776:INFO:create_model() successfully completed......................................
2025-01-08 21:54:12,868:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:12,868:INFO:Creating metrics dataframe
2025-01-08 21:54:12,884:INFO:Initializing Gradient Boosting Regressor
2025-01-08 21:54:12,885:INFO:Total runtime is 0.27578968604405724 minutes
2025-01-08 21:54:12,889:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:12,889:INFO:Initializing create_model()
2025-01-08 21:54:12,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:12,890:INFO:Checking exceptions
2025-01-08 21:54:12,890:INFO:Importing libraries
2025-01-08 21:54:12,890:INFO:Copying training dataset
2025-01-08 21:54:12,897:INFO:Defining folds
2025-01-08 21:54:12,897:INFO:Declaring metric variables
2025-01-08 21:54:12,903:INFO:Importing untrained model
2025-01-08 21:54:12,908:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:54:12,918:INFO:Starting cross validation
2025-01-08 21:54:12,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:14,451:INFO:Calculating mean and std
2025-01-08 21:54:14,452:INFO:Creating metrics dataframe
2025-01-08 21:54:14,456:INFO:Uploading results into container
2025-01-08 21:54:14,456:INFO:Uploading model into container now
2025-01-08 21:54:14,457:INFO:_master_model_container: 16
2025-01-08 21:54:14,457:INFO:_display_container: 2
2025-01-08 21:54:14,457:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:54:14,457:INFO:create_model() successfully completed......................................
2025-01-08 21:54:14,549:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:14,549:INFO:Creating metrics dataframe
2025-01-08 21:54:14,564:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 21:54:14,565:INFO:Total runtime is 0.30378801822662355 minutes
2025-01-08 21:54:14,569:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:14,569:INFO:Initializing create_model()
2025-01-08 21:54:14,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:14,570:INFO:Checking exceptions
2025-01-08 21:54:14,570:INFO:Importing libraries
2025-01-08 21:54:14,570:INFO:Copying training dataset
2025-01-08 21:54:14,577:INFO:Defining folds
2025-01-08 21:54:14,577:INFO:Declaring metric variables
2025-01-08 21:54:14,583:INFO:Importing untrained model
2025-01-08 21:54:14,588:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:54:14,598:INFO:Starting cross validation
2025-01-08 21:54:14,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:15,368:INFO:Calculating mean and std
2025-01-08 21:54:15,369:INFO:Creating metrics dataframe
2025-01-08 21:54:15,372:INFO:Uploading results into container
2025-01-08 21:54:15,373:INFO:Uploading model into container now
2025-01-08 21:54:15,373:INFO:_master_model_container: 17
2025-01-08 21:54:15,373:INFO:_display_container: 2
2025-01-08 21:54:15,374:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:15,374:INFO:create_model() successfully completed......................................
2025-01-08 21:54:15,467:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:15,468:INFO:Creating metrics dataframe
2025-01-08 21:54:15,483:INFO:Initializing Dummy Regressor
2025-01-08 21:54:15,484:INFO:Total runtime is 0.3190951148668925 minutes
2025-01-08 21:54:15,488:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:15,489:INFO:Initializing create_model()
2025-01-08 21:54:15,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6BB8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:15,489:INFO:Checking exceptions
2025-01-08 21:54:15,489:INFO:Importing libraries
2025-01-08 21:54:15,489:INFO:Copying training dataset
2025-01-08 21:54:15,497:INFO:Defining folds
2025-01-08 21:54:15,497:INFO:Declaring metric variables
2025-01-08 21:54:15,505:INFO:Importing untrained model
2025-01-08 21:54:15,509:INFO:Dummy Regressor Imported successfully
2025-01-08 21:54:15,519:INFO:Starting cross validation
2025-01-08 21:54:15,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:15,631:INFO:Calculating mean and std
2025-01-08 21:54:15,633:INFO:Creating metrics dataframe
2025-01-08 21:54:15,635:INFO:Uploading results into container
2025-01-08 21:54:15,636:INFO:Uploading model into container now
2025-01-08 21:54:15,636:INFO:_master_model_container: 18
2025-01-08 21:54:15,637:INFO:_display_container: 2
2025-01-08 21:54:15,637:INFO:DummyRegressor()
2025-01-08 21:54:15,637:INFO:create_model() successfully completed......................................
2025-01-08 21:54:15,733:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:15,734:INFO:Creating metrics dataframe
2025-01-08 21:54:15,755:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:54:15,767:INFO:Initializing create_model()
2025-01-08 21:54:15,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:15,768:INFO:Checking exceptions
2025-01-08 21:54:15,770:INFO:Importing libraries
2025-01-08 21:54:15,770:INFO:Copying training dataset
2025-01-08 21:54:15,776:INFO:Defining folds
2025-01-08 21:54:15,776:INFO:Declaring metric variables
2025-01-08 21:54:15,777:INFO:Importing untrained model
2025-01-08 21:54:15,777:INFO:Declaring custom model
2025-01-08 21:54:15,778:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:54:15,778:INFO:Cross validation set to False
2025-01-08 21:54:15,779:INFO:Fitting Model
2025-01-08 21:54:16,055:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:16,055:INFO:create_model() successfully completed......................................
2025-01-08 21:54:16,156:INFO:Initializing create_model()
2025-01-08 21:54:16,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:16,157:INFO:Checking exceptions
2025-01-08 21:54:16,159:INFO:Importing libraries
2025-01-08 21:54:16,159:INFO:Copying training dataset
2025-01-08 21:54:16,165:INFO:Defining folds
2025-01-08 21:54:16,166:INFO:Declaring metric variables
2025-01-08 21:54:16,166:INFO:Importing untrained model
2025-01-08 21:54:16,166:INFO:Declaring custom model
2025-01-08 21:54:16,167:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:54:16,168:INFO:Cross validation set to False
2025-01-08 21:54:16,168:INFO:Fitting Model
2025-01-08 21:54:16,669:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:16,669:INFO:create_model() successfully completed......................................
2025-01-08 21:54:16,765:INFO:Initializing create_model()
2025-01-08 21:54:16,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:16,765:INFO:Checking exceptions
2025-01-08 21:54:16,768:INFO:Importing libraries
2025-01-08 21:54:16,768:INFO:Copying training dataset
2025-01-08 21:54:16,774:INFO:Defining folds
2025-01-08 21:54:16,774:INFO:Declaring metric variables
2025-01-08 21:54:16,774:INFO:Importing untrained model
2025-01-08 21:54:16,774:INFO:Declaring custom model
2025-01-08 21:54:16,775:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:54:16,776:INFO:Cross validation set to False
2025-01-08 21:54:16,776:INFO:Fitting Model
2025-01-08 21:54:16,793:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-08 21:54:16,793:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000094 seconds.
2025-01-08 21:54:16,793:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-08 21:54:16,794:INFO:[LightGBM] [Info] Total Bins 510
2025-01-08 21:54:16,795:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-08 21:54:16,795:INFO:[LightGBM] [Info] Start training from score 3.808225
2025-01-08 21:54:16,846:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:16,846:INFO:create_model() successfully completed......................................
2025-01-08 21:54:16,943:INFO:Initializing create_model()
2025-01-08 21:54:16,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:16,944:INFO:Checking exceptions
2025-01-08 21:54:16,947:INFO:Importing libraries
2025-01-08 21:54:16,947:INFO:Copying training dataset
2025-01-08 21:54:16,954:INFO:Defining folds
2025-01-08 21:54:16,954:INFO:Declaring metric variables
2025-01-08 21:54:16,954:INFO:Importing untrained model
2025-01-08 21:54:16,954:INFO:Declaring custom model
2025-01-08 21:54:16,955:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:54:16,956:INFO:Cross validation set to False
2025-01-08 21:54:16,956:INFO:Fitting Model
2025-01-08 21:54:16,986:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:54:16,986:INFO:create_model() successfully completed......................................
2025-01-08 21:54:17,086:INFO:Initializing create_model()
2025-01-08 21:54:17,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:17,086:INFO:Checking exceptions
2025-01-08 21:54:17,089:INFO:Importing libraries
2025-01-08 21:54:17,089:INFO:Copying training dataset
2025-01-08 21:54:17,095:INFO:Defining folds
2025-01-08 21:54:17,095:INFO:Declaring metric variables
2025-01-08 21:54:17,095:INFO:Importing untrained model
2025-01-08 21:54:17,095:INFO:Declaring custom model
2025-01-08 21:54:17,096:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:54:17,097:INFO:Cross validation set to False
2025-01-08 21:54:17,097:INFO:Fitting Model
2025-01-08 21:54:17,577:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:54:17,577:INFO:create_model() successfully completed......................................
2025-01-08 21:54:17,710:INFO:_master_model_container: 18
2025-01-08 21:54:17,710:INFO:_display_container: 2
2025-01-08 21:54:17,712:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), DecisionTreeRegressor(random_state=123), GradientBoostingRegressor(random_state=123)]
2025-01-08 21:54:17,712:INFO:compare_models() successfully completed......................................
2025-01-08 21:54:49,094:INFO:Initializing compare_models()
2025-01-08 21:54:49,094:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:54:49,095:INFO:Checking exceptions
2025-01-08 21:54:49,098:INFO:Preparing display monitor
2025-01-08 21:54:49,126:INFO:Initializing Linear Regression
2025-01-08 21:54:49,126:INFO:Total runtime is 0.0 minutes
2025-01-08 21:54:49,134:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:49,137:INFO:Initializing create_model()
2025-01-08 21:54:49,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:49,137:INFO:Checking exceptions
2025-01-08 21:54:49,137:INFO:Importing libraries
2025-01-08 21:54:49,137:INFO:Copying training dataset
2025-01-08 21:54:49,144:INFO:Defining folds
2025-01-08 21:54:49,144:INFO:Declaring metric variables
2025-01-08 21:54:49,150:INFO:Importing untrained model
2025-01-08 21:54:49,158:INFO:Linear Regression Imported successfully
2025-01-08 21:54:49,168:INFO:Starting cross validation
2025-01-08 21:54:49,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:49,298:INFO:Calculating mean and std
2025-01-08 21:54:49,299:INFO:Creating metrics dataframe
2025-01-08 21:54:49,301:INFO:Uploading results into container
2025-01-08 21:54:49,302:INFO:Uploading model into container now
2025-01-08 21:54:49,302:INFO:_master_model_container: 19
2025-01-08 21:54:49,302:INFO:_display_container: 3
2025-01-08 21:54:49,302:INFO:LinearRegression(n_jobs=-1)
2025-01-08 21:54:49,303:INFO:create_model() successfully completed......................................
2025-01-08 21:54:49,415:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:49,415:INFO:Creating metrics dataframe
2025-01-08 21:54:49,425:INFO:Initializing Lasso Regression
2025-01-08 21:54:49,425:INFO:Total runtime is 0.0049802939097086584 minutes
2025-01-08 21:54:49,429:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:49,430:INFO:Initializing create_model()
2025-01-08 21:54:49,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:49,430:INFO:Checking exceptions
2025-01-08 21:54:49,430:INFO:Importing libraries
2025-01-08 21:54:49,431:INFO:Copying training dataset
2025-01-08 21:54:49,437:INFO:Defining folds
2025-01-08 21:54:49,437:INFO:Declaring metric variables
2025-01-08 21:54:49,441:INFO:Importing untrained model
2025-01-08 21:54:49,448:INFO:Lasso Regression Imported successfully
2025-01-08 21:54:49,456:INFO:Starting cross validation
2025-01-08 21:54:49,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:49,623:INFO:Calculating mean and std
2025-01-08 21:54:49,624:INFO:Creating metrics dataframe
2025-01-08 21:54:49,627:INFO:Uploading results into container
2025-01-08 21:54:49,627:INFO:Uploading model into container now
2025-01-08 21:54:49,628:INFO:_master_model_container: 20
2025-01-08 21:54:49,628:INFO:_display_container: 3
2025-01-08 21:54:49,628:INFO:Lasso(random_state=123)
2025-01-08 21:54:49,628:INFO:create_model() successfully completed......................................
2025-01-08 21:54:49,723:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:49,723:INFO:Creating metrics dataframe
2025-01-08 21:54:49,733:INFO:Initializing Ridge Regression
2025-01-08 21:54:49,733:INFO:Total runtime is 0.010121774673461915 minutes
2025-01-08 21:54:49,737:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:49,737:INFO:Initializing create_model()
2025-01-08 21:54:49,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:49,737:INFO:Checking exceptions
2025-01-08 21:54:49,738:INFO:Importing libraries
2025-01-08 21:54:49,738:INFO:Copying training dataset
2025-01-08 21:54:49,744:INFO:Defining folds
2025-01-08 21:54:49,745:INFO:Declaring metric variables
2025-01-08 21:54:49,748:INFO:Importing untrained model
2025-01-08 21:54:49,752:INFO:Ridge Regression Imported successfully
2025-01-08 21:54:49,761:INFO:Starting cross validation
2025-01-08 21:54:49,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:49,897:INFO:Calculating mean and std
2025-01-08 21:54:49,898:INFO:Creating metrics dataframe
2025-01-08 21:54:49,900:INFO:Uploading results into container
2025-01-08 21:54:49,901:INFO:Uploading model into container now
2025-01-08 21:54:49,901:INFO:_master_model_container: 21
2025-01-08 21:54:49,901:INFO:_display_container: 3
2025-01-08 21:54:49,901:INFO:Ridge(random_state=123)
2025-01-08 21:54:49,901:INFO:create_model() successfully completed......................................
2025-01-08 21:54:49,997:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:49,997:INFO:Creating metrics dataframe
2025-01-08 21:54:50,007:INFO:Initializing Elastic Net
2025-01-08 21:54:50,007:INFO:Total runtime is 0.014685881137847901 minutes
2025-01-08 21:54:50,012:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:50,013:INFO:Initializing create_model()
2025-01-08 21:54:50,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:50,013:INFO:Checking exceptions
2025-01-08 21:54:50,013:INFO:Importing libraries
2025-01-08 21:54:50,013:INFO:Copying training dataset
2025-01-08 21:54:50,019:INFO:Defining folds
2025-01-08 21:54:50,020:INFO:Declaring metric variables
2025-01-08 21:54:50,023:INFO:Importing untrained model
2025-01-08 21:54:50,028:INFO:Elastic Net Imported successfully
2025-01-08 21:54:50,036:INFO:Starting cross validation
2025-01-08 21:54:50,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:50,168:INFO:Calculating mean and std
2025-01-08 21:54:50,170:INFO:Creating metrics dataframe
2025-01-08 21:54:50,173:INFO:Uploading results into container
2025-01-08 21:54:50,173:INFO:Uploading model into container now
2025-01-08 21:54:50,174:INFO:_master_model_container: 22
2025-01-08 21:54:50,174:INFO:_display_container: 3
2025-01-08 21:54:50,174:INFO:ElasticNet(random_state=123)
2025-01-08 21:54:50,174:INFO:create_model() successfully completed......................................
2025-01-08 21:54:50,274:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:50,275:INFO:Creating metrics dataframe
2025-01-08 21:54:50,286:INFO:Initializing Least Angle Regression
2025-01-08 21:54:50,286:INFO:Total runtime is 0.019332242012023926 minutes
2025-01-08 21:54:50,290:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:50,291:INFO:Initializing create_model()
2025-01-08 21:54:50,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:50,291:INFO:Checking exceptions
2025-01-08 21:54:50,291:INFO:Importing libraries
2025-01-08 21:54:50,291:INFO:Copying training dataset
2025-01-08 21:54:50,301:INFO:Defining folds
2025-01-08 21:54:50,301:INFO:Declaring metric variables
2025-01-08 21:54:50,307:INFO:Importing untrained model
2025-01-08 21:54:50,313:INFO:Least Angle Regression Imported successfully
2025-01-08 21:54:50,323:INFO:Starting cross validation
2025-01-08 21:54:50,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:50,462:INFO:Calculating mean and std
2025-01-08 21:54:50,463:INFO:Creating metrics dataframe
2025-01-08 21:54:50,466:INFO:Uploading results into container
2025-01-08 21:54:50,466:INFO:Uploading model into container now
2025-01-08 21:54:50,467:INFO:_master_model_container: 23
2025-01-08 21:54:50,467:INFO:_display_container: 3
2025-01-08 21:54:50,467:INFO:Lars(random_state=123)
2025-01-08 21:54:50,467:INFO:create_model() successfully completed......................................
2025-01-08 21:54:50,563:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:50,563:INFO:Creating metrics dataframe
2025-01-08 21:54:50,576:INFO:Initializing Lasso Least Angle Regression
2025-01-08 21:54:50,576:INFO:Total runtime is 0.024162809054056805 minutes
2025-01-08 21:54:50,582:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:50,583:INFO:Initializing create_model()
2025-01-08 21:54:50,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:50,583:INFO:Checking exceptions
2025-01-08 21:54:50,583:INFO:Importing libraries
2025-01-08 21:54:50,583:INFO:Copying training dataset
2025-01-08 21:54:50,591:INFO:Defining folds
2025-01-08 21:54:50,591:INFO:Declaring metric variables
2025-01-08 21:54:50,597:INFO:Importing untrained model
2025-01-08 21:54:50,603:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 21:54:50,613:INFO:Starting cross validation
2025-01-08 21:54:50,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:50,775:INFO:Calculating mean and std
2025-01-08 21:54:50,777:INFO:Creating metrics dataframe
2025-01-08 21:54:50,780:INFO:Uploading results into container
2025-01-08 21:54:50,782:INFO:Uploading model into container now
2025-01-08 21:54:50,782:INFO:_master_model_container: 24
2025-01-08 21:54:50,782:INFO:_display_container: 3
2025-01-08 21:54:50,783:INFO:LassoLars(random_state=123)
2025-01-08 21:54:50,783:INFO:create_model() successfully completed......................................
2025-01-08 21:54:50,922:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:50,922:INFO:Creating metrics dataframe
2025-01-08 21:54:50,935:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 21:54:50,935:INFO:Total runtime is 0.030150858561197917 minutes
2025-01-08 21:54:50,939:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:50,940:INFO:Initializing create_model()
2025-01-08 21:54:50,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:50,940:INFO:Checking exceptions
2025-01-08 21:54:50,940:INFO:Importing libraries
2025-01-08 21:54:50,940:INFO:Copying training dataset
2025-01-08 21:54:50,949:INFO:Defining folds
2025-01-08 21:54:50,949:INFO:Declaring metric variables
2025-01-08 21:54:50,955:INFO:Importing untrained model
2025-01-08 21:54:50,963:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 21:54:50,975:INFO:Starting cross validation
2025-01-08 21:54:50,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:51,138:INFO:Calculating mean and std
2025-01-08 21:54:51,139:INFO:Creating metrics dataframe
2025-01-08 21:54:51,142:INFO:Uploading results into container
2025-01-08 21:54:51,143:INFO:Uploading model into container now
2025-01-08 21:54:51,143:INFO:_master_model_container: 25
2025-01-08 21:54:51,143:INFO:_display_container: 3
2025-01-08 21:54:51,144:INFO:OrthogonalMatchingPursuit()
2025-01-08 21:54:51,144:INFO:create_model() successfully completed......................................
2025-01-08 21:54:51,247:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:51,247:INFO:Creating metrics dataframe
2025-01-08 21:54:51,258:INFO:Initializing Bayesian Ridge
2025-01-08 21:54:51,258:INFO:Total runtime is 0.03553080956141154 minutes
2025-01-08 21:54:51,264:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:51,264:INFO:Initializing create_model()
2025-01-08 21:54:51,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:51,265:INFO:Checking exceptions
2025-01-08 21:54:51,265:INFO:Importing libraries
2025-01-08 21:54:51,265:INFO:Copying training dataset
2025-01-08 21:54:51,273:INFO:Defining folds
2025-01-08 21:54:51,273:INFO:Declaring metric variables
2025-01-08 21:54:51,281:INFO:Importing untrained model
2025-01-08 21:54:51,315:INFO:Bayesian Ridge Imported successfully
2025-01-08 21:54:51,374:INFO:Starting cross validation
2025-01-08 21:54:51,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:51,535:INFO:Calculating mean and std
2025-01-08 21:54:51,536:INFO:Creating metrics dataframe
2025-01-08 21:54:51,539:INFO:Uploading results into container
2025-01-08 21:54:51,540:INFO:Uploading model into container now
2025-01-08 21:54:51,540:INFO:_master_model_container: 26
2025-01-08 21:54:51,541:INFO:_display_container: 3
2025-01-08 21:54:51,542:INFO:BayesianRidge()
2025-01-08 21:54:51,542:INFO:create_model() successfully completed......................................
2025-01-08 21:54:51,639:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:51,639:INFO:Creating metrics dataframe
2025-01-08 21:54:51,652:INFO:Initializing Passive Aggressive Regressor
2025-01-08 21:54:51,652:INFO:Total runtime is 0.042110733191172284 minutes
2025-01-08 21:54:51,657:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:51,657:INFO:Initializing create_model()
2025-01-08 21:54:51,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:51,658:INFO:Checking exceptions
2025-01-08 21:54:51,658:INFO:Importing libraries
2025-01-08 21:54:51,658:INFO:Copying training dataset
2025-01-08 21:54:51,666:INFO:Defining folds
2025-01-08 21:54:51,666:INFO:Declaring metric variables
2025-01-08 21:54:51,673:INFO:Importing untrained model
2025-01-08 21:54:51,681:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 21:54:51,694:INFO:Starting cross validation
2025-01-08 21:54:51,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:51,918:INFO:Calculating mean and std
2025-01-08 21:54:51,919:INFO:Creating metrics dataframe
2025-01-08 21:54:51,922:INFO:Uploading results into container
2025-01-08 21:54:51,923:INFO:Uploading model into container now
2025-01-08 21:54:51,923:INFO:_master_model_container: 27
2025-01-08 21:54:51,923:INFO:_display_container: 3
2025-01-08 21:54:51,924:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 21:54:51,924:INFO:create_model() successfully completed......................................
2025-01-08 21:54:52,022:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:52,022:INFO:Creating metrics dataframe
2025-01-08 21:54:52,035:INFO:Initializing Huber Regressor
2025-01-08 21:54:52,035:INFO:Total runtime is 0.04849151770273845 minutes
2025-01-08 21:54:52,040:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:52,040:INFO:Initializing create_model()
2025-01-08 21:54:52,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:52,040:INFO:Checking exceptions
2025-01-08 21:54:52,041:INFO:Importing libraries
2025-01-08 21:54:52,041:INFO:Copying training dataset
2025-01-08 21:54:52,051:INFO:Defining folds
2025-01-08 21:54:52,051:INFO:Declaring metric variables
2025-01-08 21:54:52,055:INFO:Importing untrained model
2025-01-08 21:54:52,061:INFO:Huber Regressor Imported successfully
2025-01-08 21:54:52,074:INFO:Starting cross validation
2025-01-08 21:54:52,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:52,319:INFO:Calculating mean and std
2025-01-08 21:54:52,321:INFO:Creating metrics dataframe
2025-01-08 21:54:52,323:INFO:Uploading results into container
2025-01-08 21:54:52,323:INFO:Uploading model into container now
2025-01-08 21:54:52,324:INFO:_master_model_container: 28
2025-01-08 21:54:52,324:INFO:_display_container: 3
2025-01-08 21:54:52,324:INFO:HuberRegressor()
2025-01-08 21:54:52,325:INFO:create_model() successfully completed......................................
2025-01-08 21:54:52,421:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:52,421:INFO:Creating metrics dataframe
2025-01-08 21:54:52,436:INFO:Initializing K Neighbors Regressor
2025-01-08 21:54:52,436:INFO:Total runtime is 0.05516510009765625 minutes
2025-01-08 21:54:52,440:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:52,441:INFO:Initializing create_model()
2025-01-08 21:54:52,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:52,441:INFO:Checking exceptions
2025-01-08 21:54:52,441:INFO:Importing libraries
2025-01-08 21:54:52,442:INFO:Copying training dataset
2025-01-08 21:54:52,450:INFO:Defining folds
2025-01-08 21:54:52,450:INFO:Declaring metric variables
2025-01-08 21:54:52,458:INFO:Importing untrained model
2025-01-08 21:54:52,463:INFO:K Neighbors Regressor Imported successfully
2025-01-08 21:54:52,475:INFO:Starting cross validation
2025-01-08 21:54:52,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:52,666:INFO:Calculating mean and std
2025-01-08 21:54:52,668:INFO:Creating metrics dataframe
2025-01-08 21:54:52,670:INFO:Uploading results into container
2025-01-08 21:54:52,671:INFO:Uploading model into container now
2025-01-08 21:54:52,671:INFO:_master_model_container: 29
2025-01-08 21:54:52,671:INFO:_display_container: 3
2025-01-08 21:54:52,672:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 21:54:52,672:INFO:create_model() successfully completed......................................
2025-01-08 21:54:52,771:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:52,771:INFO:Creating metrics dataframe
2025-01-08 21:54:52,785:INFO:Initializing Decision Tree Regressor
2025-01-08 21:54:52,785:INFO:Total runtime is 0.060984039306640626 minutes
2025-01-08 21:54:52,790:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:52,790:INFO:Initializing create_model()
2025-01-08 21:54:52,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:52,790:INFO:Checking exceptions
2025-01-08 21:54:52,790:INFO:Importing libraries
2025-01-08 21:54:52,790:INFO:Copying training dataset
2025-01-08 21:54:52,799:INFO:Defining folds
2025-01-08 21:54:52,799:INFO:Declaring metric variables
2025-01-08 21:54:52,806:INFO:Importing untrained model
2025-01-08 21:54:52,811:INFO:Decision Tree Regressor Imported successfully
2025-01-08 21:54:52,822:INFO:Starting cross validation
2025-01-08 21:54:52,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:53,015:INFO:Calculating mean and std
2025-01-08 21:54:53,017:INFO:Creating metrics dataframe
2025-01-08 21:54:53,019:INFO:Uploading results into container
2025-01-08 21:54:53,020:INFO:Uploading model into container now
2025-01-08 21:54:53,020:INFO:_master_model_container: 30
2025-01-08 21:54:53,020:INFO:_display_container: 3
2025-01-08 21:54:53,020:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 21:54:53,021:INFO:create_model() successfully completed......................................
2025-01-08 21:54:53,117:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:53,117:INFO:Creating metrics dataframe
2025-01-08 21:54:53,132:INFO:Initializing Random Forest Regressor
2025-01-08 21:54:53,133:INFO:Total runtime is 0.06678040822347005 minutes
2025-01-08 21:54:53,137:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:53,137:INFO:Initializing create_model()
2025-01-08 21:54:53,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:53,137:INFO:Checking exceptions
2025-01-08 21:54:53,137:INFO:Importing libraries
2025-01-08 21:54:53,138:INFO:Copying training dataset
2025-01-08 21:54:53,145:INFO:Defining folds
2025-01-08 21:54:53,146:INFO:Declaring metric variables
2025-01-08 21:54:53,153:INFO:Importing untrained model
2025-01-08 21:54:53,160:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:54:53,171:INFO:Starting cross validation
2025-01-08 21:54:53,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:57,579:INFO:Calculating mean and std
2025-01-08 21:54:57,581:INFO:Creating metrics dataframe
2025-01-08 21:54:57,585:INFO:Uploading results into container
2025-01-08 21:54:57,586:INFO:Uploading model into container now
2025-01-08 21:54:57,587:INFO:_master_model_container: 31
2025-01-08 21:54:57,587:INFO:_display_container: 3
2025-01-08 21:54:57,588:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:57,588:INFO:create_model() successfully completed......................................
2025-01-08 21:54:57,688:INFO:SubProcess create_model() end ==================================
2025-01-08 21:54:57,689:INFO:Creating metrics dataframe
2025-01-08 21:54:57,704:INFO:Initializing Extra Trees Regressor
2025-01-08 21:54:57,705:INFO:Total runtime is 0.14298116763432822 minutes
2025-01-08 21:54:57,709:INFO:SubProcess create_model() called ==================================
2025-01-08 21:54:57,709:INFO:Initializing create_model()
2025-01-08 21:54:57,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:54:57,709:INFO:Checking exceptions
2025-01-08 21:54:57,710:INFO:Importing libraries
2025-01-08 21:54:57,710:INFO:Copying training dataset
2025-01-08 21:54:57,718:INFO:Defining folds
2025-01-08 21:54:57,718:INFO:Declaring metric variables
2025-01-08 21:54:57,725:INFO:Importing untrained model
2025-01-08 21:54:57,729:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:54:57,742:INFO:Starting cross validation
2025-01-08 21:54:57,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:54:59,932:INFO:Calculating mean and std
2025-01-08 21:54:59,934:INFO:Creating metrics dataframe
2025-01-08 21:54:59,937:INFO:Uploading results into container
2025-01-08 21:54:59,938:INFO:Uploading model into container now
2025-01-08 21:54:59,939:INFO:_master_model_container: 32
2025-01-08 21:54:59,939:INFO:_display_container: 3
2025-01-08 21:54:59,939:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:54:59,939:INFO:create_model() successfully completed......................................
2025-01-08 21:55:00,040:INFO:SubProcess create_model() end ==================================
2025-01-08 21:55:00,040:INFO:Creating metrics dataframe
2025-01-08 21:55:00,055:INFO:Initializing AdaBoost Regressor
2025-01-08 21:55:00,055:INFO:Total runtime is 0.18215021292368572 minutes
2025-01-08 21:55:00,059:INFO:SubProcess create_model() called ==================================
2025-01-08 21:55:00,059:INFO:Initializing create_model()
2025-01-08 21:55:00,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:00,060:INFO:Checking exceptions
2025-01-08 21:55:00,060:INFO:Importing libraries
2025-01-08 21:55:00,060:INFO:Copying training dataset
2025-01-08 21:55:00,068:INFO:Defining folds
2025-01-08 21:55:00,068:INFO:Declaring metric variables
2025-01-08 21:55:00,075:INFO:Importing untrained model
2025-01-08 21:55:00,079:INFO:AdaBoost Regressor Imported successfully
2025-01-08 21:55:00,090:INFO:Starting cross validation
2025-01-08 21:55:00,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:55:01,030:INFO:Calculating mean and std
2025-01-08 21:55:01,032:INFO:Creating metrics dataframe
2025-01-08 21:55:01,034:INFO:Uploading results into container
2025-01-08 21:55:01,035:INFO:Uploading model into container now
2025-01-08 21:55:01,035:INFO:_master_model_container: 33
2025-01-08 21:55:01,036:INFO:_display_container: 3
2025-01-08 21:55:01,036:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 21:55:01,036:INFO:create_model() successfully completed......................................
2025-01-08 21:55:01,133:INFO:SubProcess create_model() end ==================================
2025-01-08 21:55:01,133:INFO:Creating metrics dataframe
2025-01-08 21:55:01,151:INFO:Initializing Gradient Boosting Regressor
2025-01-08 21:55:01,152:INFO:Total runtime is 0.20044096708297732 minutes
2025-01-08 21:55:01,160:INFO:SubProcess create_model() called ==================================
2025-01-08 21:55:01,160:INFO:Initializing create_model()
2025-01-08 21:55:01,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:01,161:INFO:Checking exceptions
2025-01-08 21:55:01,161:INFO:Importing libraries
2025-01-08 21:55:01,161:INFO:Copying training dataset
2025-01-08 21:55:01,168:INFO:Defining folds
2025-01-08 21:55:01,171:INFO:Declaring metric variables
2025-01-08 21:55:01,195:INFO:Importing untrained model
2025-01-08 21:55:01,206:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 21:55:01,214:INFO:Starting cross validation
2025-01-08 21:55:01,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:55:02,718:INFO:Calculating mean and std
2025-01-08 21:55:02,719:INFO:Creating metrics dataframe
2025-01-08 21:55:02,723:INFO:Uploading results into container
2025-01-08 21:55:02,724:INFO:Uploading model into container now
2025-01-08 21:55:02,724:INFO:_master_model_container: 34
2025-01-08 21:55:02,724:INFO:_display_container: 3
2025-01-08 21:55:02,725:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 21:55:02,725:INFO:create_model() successfully completed......................................
2025-01-08 21:55:02,850:INFO:SubProcess create_model() end ==================================
2025-01-08 21:55:02,850:INFO:Creating metrics dataframe
2025-01-08 21:55:02,865:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 21:55:02,865:INFO:Total runtime is 0.22898583014806115 minutes
2025-01-08 21:55:02,869:INFO:SubProcess create_model() called ==================================
2025-01-08 21:55:02,870:INFO:Initializing create_model()
2025-01-08 21:55:02,870:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:02,870:INFO:Checking exceptions
2025-01-08 21:55:02,870:INFO:Importing libraries
2025-01-08 21:55:02,870:INFO:Copying training dataset
2025-01-08 21:55:02,879:INFO:Defining folds
2025-01-08 21:55:02,879:INFO:Declaring metric variables
2025-01-08 21:55:02,885:INFO:Importing untrained model
2025-01-08 21:55:02,891:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 21:55:02,899:INFO:Starting cross validation
2025-01-08 21:55:02,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:55:03,612:INFO:Calculating mean and std
2025-01-08 21:55:03,614:INFO:Creating metrics dataframe
2025-01-08 21:55:03,617:INFO:Uploading results into container
2025-01-08 21:55:03,619:INFO:Uploading model into container now
2025-01-08 21:55:03,619:INFO:_master_model_container: 35
2025-01-08 21:55:03,619:INFO:_display_container: 3
2025-01-08 21:55:03,620:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:55:03,620:INFO:create_model() successfully completed......................................
2025-01-08 21:55:03,715:INFO:SubProcess create_model() end ==================================
2025-01-08 21:55:03,715:INFO:Creating metrics dataframe
2025-01-08 21:55:03,731:INFO:Initializing Dummy Regressor
2025-01-08 21:55:03,732:INFO:Total runtime is 0.2434373736381531 minutes
2025-01-08 21:55:03,736:INFO:SubProcess create_model() called ==================================
2025-01-08 21:55:03,736:INFO:Initializing create_model()
2025-01-08 21:55:03,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6DDDE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:03,736:INFO:Checking exceptions
2025-01-08 21:55:03,736:INFO:Importing libraries
2025-01-08 21:55:03,737:INFO:Copying training dataset
2025-01-08 21:55:03,744:INFO:Defining folds
2025-01-08 21:55:03,745:INFO:Declaring metric variables
2025-01-08 21:55:03,750:INFO:Importing untrained model
2025-01-08 21:55:03,755:INFO:Dummy Regressor Imported successfully
2025-01-08 21:55:03,765:INFO:Starting cross validation
2025-01-08 21:55:03,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:55:03,891:INFO:Calculating mean and std
2025-01-08 21:55:03,893:INFO:Creating metrics dataframe
2025-01-08 21:55:03,895:INFO:Uploading results into container
2025-01-08 21:55:03,896:INFO:Uploading model into container now
2025-01-08 21:55:03,896:INFO:_master_model_container: 36
2025-01-08 21:55:03,897:INFO:_display_container: 3
2025-01-08 21:55:03,898:INFO:DummyRegressor()
2025-01-08 21:55:03,899:INFO:create_model() successfully completed......................................
2025-01-08 21:55:03,997:INFO:SubProcess create_model() end ==================================
2025-01-08 21:55:03,997:INFO:Creating metrics dataframe
2025-01-08 21:55:04,014:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:55:04,028:INFO:Initializing create_model()
2025-01-08 21:55:04,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:04,029:INFO:Checking exceptions
2025-01-08 21:55:04,031:INFO:Importing libraries
2025-01-08 21:55:04,031:INFO:Copying training dataset
2025-01-08 21:55:04,038:INFO:Defining folds
2025-01-08 21:55:04,038:INFO:Declaring metric variables
2025-01-08 21:55:04,040:INFO:Importing untrained model
2025-01-08 21:55:04,040:INFO:Declaring custom model
2025-01-08 21:55:04,041:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:55:04,042:INFO:Cross validation set to False
2025-01-08 21:55:04,042:INFO:Fitting Model
2025-01-08 21:55:04,311:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:55:04,311:INFO:create_model() successfully completed......................................
2025-01-08 21:55:04,414:INFO:Initializing create_model()
2025-01-08 21:55:04,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:55:04,414:INFO:Checking exceptions
2025-01-08 21:55:04,416:INFO:Importing libraries
2025-01-08 21:55:04,416:INFO:Copying training dataset
2025-01-08 21:55:04,423:INFO:Defining folds
2025-01-08 21:55:04,423:INFO:Declaring metric variables
2025-01-08 21:55:04,423:INFO:Importing untrained model
2025-01-08 21:55:04,423:INFO:Declaring custom model
2025-01-08 21:55:04,424:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:55:04,425:INFO:Cross validation set to False
2025-01-08 21:55:04,425:INFO:Fitting Model
2025-01-08 21:55:04,916:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:55:04,916:INFO:create_model() successfully completed......................................
2025-01-08 21:55:05,053:INFO:_master_model_container: 36
2025-01-08 21:55:05,053:INFO:_display_container: 3
2025-01-08 21:55:05,054:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)]
2025-01-08 21:55:05,054:INFO:compare_models() successfully completed......................................
2025-01-08 21:55:13,794:INFO:Initializing tune_model()
2025-01-08 21:55:13,795:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:55:13,795:INFO:Checking exceptions
2025-01-08 21:55:13,815:INFO:Copying training dataset
2025-01-08 21:55:13,822:INFO:Checking base model
2025-01-08 21:55:13,822:INFO:Base model : Extra Trees Regressor
2025-01-08 21:55:13,827:INFO:Declaring metric variables
2025-01-08 21:55:13,833:INFO:Defining Hyperparameters
2025-01-08 21:55:13,965:INFO:Tuning with n_jobs=-1
2025-01-08 21:55:13,965:INFO:Initializing RandomizedSearchCV
2025-01-08 21:55:58,427:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 21:55:58,428:INFO:Hyperparameter search completed
2025-01-08 21:55:58,428:INFO:SubProcess create_model() called ==================================
2025-01-08 21:55:58,429:INFO:Initializing create_model()
2025-01-08 21:55:58,429:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5993C8990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 21:55:58,430:INFO:Checking exceptions
2025-01-08 21:55:58,430:INFO:Importing libraries
2025-01-08 21:55:58,430:INFO:Copying training dataset
2025-01-08 21:55:58,440:INFO:Defining folds
2025-01-08 21:55:58,440:INFO:Declaring metric variables
2025-01-08 21:55:58,444:INFO:Importing untrained model
2025-01-08 21:55:58,445:INFO:Declaring custom model
2025-01-08 21:55:58,450:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:55:58,463:INFO:Starting cross validation
2025-01-08 21:55:58,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:55:59,848:INFO:Calculating mean and std
2025-01-08 21:55:59,850:INFO:Creating metrics dataframe
2025-01-08 21:55:59,857:INFO:Finalizing model
2025-01-08 21:56:00,146:INFO:Uploading results into container
2025-01-08 21:56:00,148:INFO:Uploading model into container now
2025-01-08 21:56:00,148:INFO:_master_model_container: 37
2025-01-08 21:56:00,148:INFO:_display_container: 4
2025-01-08 21:56:00,150:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123)
2025-01-08 21:56:00,150:INFO:create_model() successfully completed......................................
2025-01-08 21:56:00,252:INFO:SubProcess create_model() end ==================================
2025-01-08 21:56:00,252:INFO:choose_better activated
2025-01-08 21:56:00,257:INFO:SubProcess create_model() called ==================================
2025-01-08 21:56:00,258:INFO:Initializing create_model()
2025-01-08 21:56:00,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:56:00,258:INFO:Checking exceptions
2025-01-08 21:56:00,260:INFO:Importing libraries
2025-01-08 21:56:00,260:INFO:Copying training dataset
2025-01-08 21:56:00,267:INFO:Defining folds
2025-01-08 21:56:00,267:INFO:Declaring metric variables
2025-01-08 21:56:00,267:INFO:Importing untrained model
2025-01-08 21:56:00,267:INFO:Declaring custom model
2025-01-08 21:56:00,268:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:56:00,268:INFO:Starting cross validation
2025-01-08 21:56:00,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:56:02,612:INFO:Calculating mean and std
2025-01-08 21:56:02,613:INFO:Creating metrics dataframe
2025-01-08 21:56:02,615:INFO:Finalizing model
2025-01-08 21:56:02,867:INFO:Uploading results into container
2025-01-08 21:56:02,868:INFO:Uploading model into container now
2025-01-08 21:56:02,869:INFO:_master_model_container: 38
2025-01-08 21:56:02,869:INFO:_display_container: 5
2025-01-08 21:56:02,869:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:56:02,869:INFO:create_model() successfully completed......................................
2025-01-08 21:56:02,962:INFO:SubProcess create_model() end ==================================
2025-01-08 21:56:02,962:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9755
2025-01-08 21:56:02,963:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123) result for R2 is 0.7092
2025-01-08 21:56:02,964:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:56:02,964:INFO:choose_better completed
2025-01-08 21:56:02,964:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:56:02,978:INFO:_master_model_container: 38
2025-01-08 21:56:02,978:INFO:_display_container: 4
2025-01-08 21:56:02,979:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:56:02,979:INFO:tune_model() successfully completed......................................
2025-01-08 21:56:03,078:INFO:Initializing tune_model()
2025-01-08 21:56:03,078:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 21:56:03,078:INFO:Checking exceptions
2025-01-08 21:56:03,098:INFO:Copying training dataset
2025-01-08 21:56:03,107:INFO:Checking base model
2025-01-08 21:56:03,107:INFO:Base model : Random Forest Regressor
2025-01-08 21:56:03,113:INFO:Declaring metric variables
2025-01-08 21:56:03,120:INFO:Defining Hyperparameters
2025-01-08 21:56:03,236:INFO:Tuning with n_jobs=-1
2025-01-08 21:56:03,236:INFO:Initializing RandomizedSearchCV
2025-01-08 21:57:40,012:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 21:57:40,013:INFO:Hyperparameter search completed
2025-01-08 21:57:40,013:INFO:SubProcess create_model() called ==================================
2025-01-08 21:57:40,014:INFO:Initializing create_model()
2025-01-08 21:57:40,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6D2C810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 21:57:40,014:INFO:Checking exceptions
2025-01-08 21:57:40,015:INFO:Importing libraries
2025-01-08 21:57:40,015:INFO:Copying training dataset
2025-01-08 21:57:40,024:INFO:Defining folds
2025-01-08 21:57:40,024:INFO:Declaring metric variables
2025-01-08 21:57:40,028:INFO:Importing untrained model
2025-01-08 21:57:40,029:INFO:Declaring custom model
2025-01-08 21:57:40,033:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:57:40,042:INFO:Starting cross validation
2025-01-08 21:57:40,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:57:43,967:INFO:Calculating mean and std
2025-01-08 21:57:43,969:INFO:Creating metrics dataframe
2025-01-08 21:57:43,977:INFO:Finalizing model
2025-01-08 21:57:44,465:INFO:Uploading results into container
2025-01-08 21:57:44,466:INFO:Uploading model into container now
2025-01-08 21:57:44,467:INFO:_master_model_container: 39
2025-01-08 21:57:44,467:INFO:_display_container: 5
2025-01-08 21:57:44,468:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123)
2025-01-08 21:57:44,468:INFO:create_model() successfully completed......................................
2025-01-08 21:57:44,574:INFO:SubProcess create_model() end ==================================
2025-01-08 21:57:44,574:INFO:choose_better activated
2025-01-08 21:57:44,578:INFO:SubProcess create_model() called ==================================
2025-01-08 21:57:44,579:INFO:Initializing create_model()
2025-01-08 21:57:44,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:57:44,579:INFO:Checking exceptions
2025-01-08 21:57:44,582:INFO:Importing libraries
2025-01-08 21:57:44,582:INFO:Copying training dataset
2025-01-08 21:57:44,588:INFO:Defining folds
2025-01-08 21:57:44,588:INFO:Declaring metric variables
2025-01-08 21:57:44,588:INFO:Importing untrained model
2025-01-08 21:57:44,588:INFO:Declaring custom model
2025-01-08 21:57:44,589:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:57:44,589:INFO:Starting cross validation
2025-01-08 21:57:44,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:57:48,681:INFO:Calculating mean and std
2025-01-08 21:57:48,682:INFO:Creating metrics dataframe
2025-01-08 21:57:48,684:INFO:Finalizing model
2025-01-08 21:57:49,168:INFO:Uploading results into container
2025-01-08 21:57:49,168:INFO:Uploading model into container now
2025-01-08 21:57:49,169:INFO:_master_model_container: 40
2025-01-08 21:57:49,169:INFO:_display_container: 6
2025-01-08 21:57:49,169:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:57:49,169:INFO:create_model() successfully completed......................................
2025-01-08 21:57:49,268:INFO:SubProcess create_model() end ==================================
2025-01-08 21:57:49,268:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9748
2025-01-08 21:57:49,269:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123) result for R2 is 0.9645
2025-01-08 21:57:49,270:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 21:57:49,270:INFO:choose_better completed
2025-01-08 21:57:49,270:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 21:57:49,284:INFO:_master_model_container: 40
2025-01-08 21:57:49,284:INFO:_display_container: 5
2025-01-08 21:57:49,285:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:57:49,286:INFO:tune_model() successfully completed......................................
2025-01-08 21:58:08,992:INFO:Initializing compare_models()
2025-01-08 21:58:08,992:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 21:58:08,992:INFO:Checking exceptions
2025-01-08 21:58:08,996:INFO:Preparing display monitor
2025-01-08 21:58:09,023:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:58:09,026:INFO:Total runtime is 3.331899642944336e-05 minutes
2025-01-08 21:58:09,030:INFO:SubProcess create_model() called ==================================
2025-01-08 21:58:09,031:INFO:Initializing create_model()
2025-01-08 21:58:09,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E36E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:58:09,031:INFO:Checking exceptions
2025-01-08 21:58:09,032:INFO:Importing libraries
2025-01-08 21:58:09,032:INFO:Copying training dataset
2025-01-08 21:58:09,040:INFO:Defining folds
2025-01-08 21:58:09,040:INFO:Declaring metric variables
2025-01-08 21:58:09,049:INFO:Importing untrained model
2025-01-08 21:58:09,049:INFO:Declaring custom model
2025-01-08 21:58:09,054:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:58:09,064:INFO:Starting cross validation
2025-01-08 21:58:09,066:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:58:11,512:INFO:Calculating mean and std
2025-01-08 21:58:11,514:INFO:Creating metrics dataframe
2025-01-08 21:58:11,518:INFO:Uploading results into container
2025-01-08 21:58:11,519:INFO:Uploading model into container now
2025-01-08 21:58:11,519:INFO:_master_model_container: 41
2025-01-08 21:58:11,520:INFO:_display_container: 6
2025-01-08 21:58:11,520:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:11,520:INFO:create_model() successfully completed......................................
2025-01-08 21:58:11,620:INFO:SubProcess create_model() end ==================================
2025-01-08 21:58:11,620:INFO:Creating metrics dataframe
2025-01-08 21:58:11,629:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:58:11,629:INFO:Total runtime is 0.04342631896336873 minutes
2025-01-08 21:58:11,634:INFO:SubProcess create_model() called ==================================
2025-01-08 21:58:11,635:INFO:Initializing create_model()
2025-01-08 21:58:11,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E36E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:58:11,635:INFO:Checking exceptions
2025-01-08 21:58:11,635:INFO:Importing libraries
2025-01-08 21:58:11,635:INFO:Copying training dataset
2025-01-08 21:58:11,643:INFO:Defining folds
2025-01-08 21:58:11,643:INFO:Declaring metric variables
2025-01-08 21:58:11,650:INFO:Importing untrained model
2025-01-08 21:58:11,650:INFO:Declaring custom model
2025-01-08 21:58:11,656:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:58:11,664:INFO:Starting cross validation
2025-01-08 21:58:11,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:58:15,707:INFO:Calculating mean and std
2025-01-08 21:58:15,709:INFO:Creating metrics dataframe
2025-01-08 21:58:15,711:INFO:Uploading results into container
2025-01-08 21:58:15,712:INFO:Uploading model into container now
2025-01-08 21:58:15,712:INFO:_master_model_container: 42
2025-01-08 21:58:15,712:INFO:_display_container: 6
2025-01-08 21:58:15,713:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:15,713:INFO:create_model() successfully completed......................................
2025-01-08 21:58:15,807:INFO:SubProcess create_model() end ==================================
2025-01-08 21:58:15,808:INFO:Creating metrics dataframe
2025-01-08 21:58:15,817:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 21:58:15,817:INFO:Total runtime is 0.11322640180587767 minutes
2025-01-08 21:58:15,822:INFO:SubProcess create_model() called ==================================
2025-01-08 21:58:15,823:INFO:Initializing create_model()
2025-01-08 21:58:15,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E36E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:58:15,823:INFO:Checking exceptions
2025-01-08 21:58:15,823:INFO:Importing libraries
2025-01-08 21:58:15,823:INFO:Copying training dataset
2025-01-08 21:58:15,830:INFO:Defining folds
2025-01-08 21:58:15,830:INFO:Declaring metric variables
2025-01-08 21:58:15,837:INFO:Importing untrained model
2025-01-08 21:58:15,837:INFO:Declaring custom model
2025-01-08 21:58:15,843:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:58:15,851:INFO:Starting cross validation
2025-01-08 21:58:15,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:58:18,073:INFO:Calculating mean and std
2025-01-08 21:58:18,075:INFO:Creating metrics dataframe
2025-01-08 21:58:18,077:INFO:Uploading results into container
2025-01-08 21:58:18,078:INFO:Uploading model into container now
2025-01-08 21:58:18,078:INFO:_master_model_container: 43
2025-01-08 21:58:18,078:INFO:_display_container: 6
2025-01-08 21:58:18,079:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:18,079:INFO:create_model() successfully completed......................................
2025-01-08 21:58:18,176:INFO:SubProcess create_model() end ==================================
2025-01-08 21:58:18,176:INFO:Creating metrics dataframe
2025-01-08 21:58:18,186:INFO:Initializing custom model Random Forest Regressor
2025-01-08 21:58:18,187:INFO:Total runtime is 0.15272779464721678 minutes
2025-01-08 21:58:18,191:INFO:SubProcess create_model() called ==================================
2025-01-08 21:58:18,191:INFO:Initializing create_model()
2025-01-08 21:58:18,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E36E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:58:18,191:INFO:Checking exceptions
2025-01-08 21:58:18,192:INFO:Importing libraries
2025-01-08 21:58:18,192:INFO:Copying training dataset
2025-01-08 21:58:18,199:INFO:Defining folds
2025-01-08 21:58:18,199:INFO:Declaring metric variables
2025-01-08 21:58:18,205:INFO:Importing untrained model
2025-01-08 21:58:18,205:INFO:Declaring custom model
2025-01-08 21:58:18,211:INFO:Random Forest Regressor Imported successfully
2025-01-08 21:58:18,221:INFO:Starting cross validation
2025-01-08 21:58:18,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 21:58:22,295:INFO:Calculating mean and std
2025-01-08 21:58:22,297:INFO:Creating metrics dataframe
2025-01-08 21:58:22,299:INFO:Uploading results into container
2025-01-08 21:58:22,301:INFO:Uploading model into container now
2025-01-08 21:58:22,301:INFO:_master_model_container: 44
2025-01-08 21:58:22,302:INFO:_display_container: 6
2025-01-08 21:58:22,302:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:22,302:INFO:create_model() successfully completed......................................
2025-01-08 21:58:22,396:INFO:SubProcess create_model() end ==================================
2025-01-08 21:58:22,397:INFO:Creating metrics dataframe
2025-01-08 21:58:22,408:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 21:58:22,420:INFO:Initializing create_model()
2025-01-08 21:58:22,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 21:58:22,420:INFO:Checking exceptions
2025-01-08 21:58:22,422:INFO:Importing libraries
2025-01-08 21:58:22,422:INFO:Copying training dataset
2025-01-08 21:58:22,429:INFO:Defining folds
2025-01-08 21:58:22,429:INFO:Declaring metric variables
2025-01-08 21:58:22,429:INFO:Importing untrained model
2025-01-08 21:58:22,429:INFO:Declaring custom model
2025-01-08 21:58:22,430:INFO:Extra Trees Regressor Imported successfully
2025-01-08 21:58:22,431:INFO:Cross validation set to False
2025-01-08 21:58:22,431:INFO:Fitting Model
2025-01-08 21:58:22,687:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:22,687:INFO:create_model() successfully completed......................................
2025-01-08 21:58:22,805:INFO:_master_model_container: 44
2025-01-08 21:58:22,805:INFO:_display_container: 6
2025-01-08 21:58:22,806:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 21:58:22,806:INFO:compare_models() successfully completed......................................
2025-01-08 21:58:37,403:INFO:Initializing plot_model()
2025-01-08 21:58:37,403:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:58:37,403:INFO:Checking exceptions
2025-01-08 21:58:37,446:INFO:Preloading libraries
2025-01-08 21:58:37,536:INFO:Copying training dataset
2025-01-08 21:58:37,536:INFO:Plot type: residuals
2025-01-08 21:58:37,838:INFO:Fitting Model
2025-01-08 21:58:37,840:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:58:38,017:INFO:Scoring test/hold-out set
2025-01-08 21:58:39,023:INFO:Visual Rendered Successfully
2025-01-08 21:58:39,123:INFO:plot_model() successfully completed......................................
2025-01-08 21:58:45,859:INFO:Initializing plot_model()
2025-01-08 21:58:45,859:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:58:45,859:INFO:Checking exceptions
2025-01-08 21:58:45,902:INFO:Preloading libraries
2025-01-08 21:58:45,989:INFO:Copying training dataset
2025-01-08 21:58:45,989:INFO:Plot type: error
2025-01-08 21:58:46,207:INFO:Fitting Model
2025-01-08 21:58:46,207:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 21:58:46,207:INFO:Scoring test/hold-out set
2025-01-08 21:58:46,638:INFO:Visual Rendered Successfully
2025-01-08 21:58:46,739:INFO:plot_model() successfully completed......................................
2025-01-08 21:58:53,730:INFO:Initializing plot_model()
2025-01-08 21:58:53,730:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 21:58:53,730:INFO:Checking exceptions
2025-01-08 21:58:53,777:INFO:Preloading libraries
2025-01-08 21:58:53,866:INFO:Copying training dataset
2025-01-08 21:58:53,866:INFO:Plot type: feature
2025-01-08 21:58:53,866:WARNING:No coef_ found. Trying feature_importances_
2025-01-08 21:58:54,124:INFO:Visual Rendered Successfully
2025-01-08 21:58:54,223:INFO:plot_model() successfully completed......................................
2025-01-08 22:00:23,623:INFO:Initializing finalize_model()
2025-01-08 22:00:23,623:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-08 22:00:23,623:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:00:23,628:INFO:Initializing create_model()
2025-01-08 22:00:23,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A6C54ED0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:00:23,628:INFO:Checking exceptions
2025-01-08 22:00:23,630:INFO:Importing libraries
2025-01-08 22:00:23,630:INFO:Copying training dataset
2025-01-08 22:00:23,631:INFO:Defining folds
2025-01-08 22:00:23,631:INFO:Declaring metric variables
2025-01-08 22:00:23,631:INFO:Importing untrained model
2025-01-08 22:00:23,631:INFO:Declaring custom model
2025-01-08 22:00:23,632:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:00:23,633:INFO:Cross validation set to False
2025-01-08 22:00:23,633:INFO:Fitting Model
2025-01-08 22:00:23,994:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:00:23,994:INFO:create_model() successfully completed......................................
2025-01-08 22:00:24,086:INFO:_master_model_container: 44
2025-01-08 22:00:24,086:INFO:_display_container: 6
2025-01-08 22:00:24,095:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:00:24,095:INFO:finalize_model() successfully completed......................................
2025-01-08 22:00:24,205:INFO:Initializing save_model()
2025-01-08 22:00:24,205:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=diesel_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-08 22:00:24,205:INFO:Adding model into prep_pipe
2025-01-08 22:00:24,205:WARNING:Only Model saved as it was a pipeline.
2025-01-08 22:00:24,298:INFO:diesel_model.pkl saved in current working directory
2025-01-08 22:00:24,308:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:00:24,308:INFO:save_model() successfully completed......................................
2025-01-08 22:01:26,375:INFO:PyCaret RegressionExperiment
2025-01-08 22:01:26,376:INFO:Logging name: reg-default-name
2025-01-08 22:01:26,376:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-08 22:01:26,376:INFO:version 3.3.2
2025-01-08 22:01:26,376:INFO:Initializing setup()
2025-01-08 22:01:26,376:INFO:self.USI: 60b5
2025-01-08 22:01:26,376:INFO:self._variable_keys: {'_ml_usecase', 'X_test', 'fold_groups_param', '_available_plots', 'transform_target_param', 'memory', 'gpu_n_jobs_param', 'X', 'fold_generator', 'exp_id', 'pipeline', 'idx', 'data', 'y', 'gpu_param', 'logging_param', 'USI', 'seed', 'n_jobs_param', 'log_plots_param', 'exp_name_log', 'html_param', 'y_test', 'fold_shuffle_param', 'target_param', 'y_train', 'X_train'}
2025-01-08 22:01:26,376:INFO:Checking environment
2025-01-08 22:01:26,376:INFO:python_version: 3.11.11
2025-01-08 22:01:26,377:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-08 22:01:26,377:INFO:machine: AMD64
2025-01-08 22:01:26,377:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-08 22:01:26,377:INFO:Memory: svmem(total=6439919616, available=1124106240, percent=82.5, used=5315813376, free=1124106240)
2025-01-08 22:01:26,377:INFO:Physical Core: 4
2025-01-08 22:01:26,377:INFO:Logical Core: 4
2025-01-08 22:01:26,377:INFO:Checking libraries
2025-01-08 22:01:26,377:INFO:System:
2025-01-08 22:01:26,377:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-08 22:01:26,377:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-08 22:01:26,378:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-08 22:01:26,378:INFO:PyCaret required dependencies:
2025-01-08 22:01:26,378:INFO:                 pip: 24.2
2025-01-08 22:01:26,378:INFO:          setuptools: 75.1.0
2025-01-08 22:01:26,378:INFO:             pycaret: 3.3.2
2025-01-08 22:01:26,378:INFO:             IPython: 8.30.0
2025-01-08 22:01:26,378:INFO:          ipywidgets: 8.1.5
2025-01-08 22:01:26,378:INFO:                tqdm: 4.67.1
2025-01-08 22:01:26,378:INFO:               numpy: 1.26.4
2025-01-08 22:01:26,379:INFO:              pandas: 2.1.4
2025-01-08 22:01:26,379:INFO:              jinja2: 3.1.4
2025-01-08 22:01:26,379:INFO:               scipy: 1.11.4
2025-01-08 22:01:26,379:INFO:              joblib: 1.3.2
2025-01-08 22:01:26,379:INFO:             sklearn: 1.4.2
2025-01-08 22:01:26,379:INFO:                pyod: 2.0.3
2025-01-08 22:01:26,379:INFO:            imblearn: 0.13.0
2025-01-08 22:01:26,379:INFO:   category_encoders: 2.7.0
2025-01-08 22:01:26,379:INFO:            lightgbm: 4.5.0
2025-01-08 22:01:26,379:INFO:               numba: 0.60.0
2025-01-08 22:01:26,379:INFO:            requests: 2.32.3
2025-01-08 22:01:26,380:INFO:          matplotlib: 3.7.5
2025-01-08 22:01:26,380:INFO:          scikitplot: 0.3.7
2025-01-08 22:01:26,380:INFO:         yellowbrick: 1.5
2025-01-08 22:01:26,380:INFO:              plotly: 5.24.1
2025-01-08 22:01:26,380:INFO:    plotly-resampler: Not installed
2025-01-08 22:01:26,380:INFO:             kaleido: 0.2.1
2025-01-08 22:01:26,380:INFO:           schemdraw: 0.15
2025-01-08 22:01:26,380:INFO:         statsmodels: 0.14.4
2025-01-08 22:01:26,380:INFO:              sktime: 0.26.0
2025-01-08 22:01:26,380:INFO:               tbats: 1.1.3
2025-01-08 22:01:26,380:INFO:            pmdarima: 2.0.4
2025-01-08 22:01:26,381:INFO:              psutil: 5.9.0
2025-01-08 22:01:26,381:INFO:          markupsafe: 2.1.3
2025-01-08 22:01:26,381:INFO:             pickle5: Not installed
2025-01-08 22:01:26,381:INFO:         cloudpickle: 3.1.0
2025-01-08 22:01:26,381:INFO:         deprecation: 2.1.0
2025-01-08 22:01:26,381:INFO:              xxhash: 3.5.0
2025-01-08 22:01:26,381:INFO:           wurlitzer: Not installed
2025-01-08 22:01:26,381:INFO:PyCaret optional dependencies:
2025-01-08 22:01:26,381:INFO:                shap: Not installed
2025-01-08 22:01:26,381:INFO:           interpret: Not installed
2025-01-08 22:01:26,381:INFO:                umap: Not installed
2025-01-08 22:01:26,382:INFO:     ydata_profiling: Not installed
2025-01-08 22:01:26,382:INFO:  explainerdashboard: Not installed
2025-01-08 22:01:26,382:INFO:             autoviz: Not installed
2025-01-08 22:01:26,382:INFO:           fairlearn: Not installed
2025-01-08 22:01:26,382:INFO:          deepchecks: Not installed
2025-01-08 22:01:26,382:INFO:             xgboost: Not installed
2025-01-08 22:01:26,382:INFO:            catboost: Not installed
2025-01-08 22:01:26,382:INFO:              kmodes: Not installed
2025-01-08 22:01:26,382:INFO:             mlxtend: Not installed
2025-01-08 22:01:26,382:INFO:       statsforecast: Not installed
2025-01-08 22:01:26,382:INFO:        tune_sklearn: Not installed
2025-01-08 22:01:26,383:INFO:                 ray: Not installed
2025-01-08 22:01:26,383:INFO:            hyperopt: Not installed
2025-01-08 22:01:26,383:INFO:              optuna: Not installed
2025-01-08 22:01:26,383:INFO:               skopt: Not installed
2025-01-08 22:01:26,383:INFO:              mlflow: Not installed
2025-01-08 22:01:26,383:INFO:              gradio: Not installed
2025-01-08 22:01:26,383:INFO:             fastapi: Not installed
2025-01-08 22:01:26,383:INFO:             uvicorn: Not installed
2025-01-08 22:01:26,383:INFO:              m2cgen: Not installed
2025-01-08 22:01:26,383:INFO:           evidently: Not installed
2025-01-08 22:01:26,383:INFO:               fugue: Not installed
2025-01-08 22:01:26,384:INFO:           streamlit: Not installed
2025-01-08 22:01:26,384:INFO:             prophet: Not installed
2025-01-08 22:01:26,384:INFO:None
2025-01-08 22:01:26,384:INFO:Set up data.
2025-01-08 22:01:26,389:INFO:Set up folding strategy.
2025-01-08 22:01:26,391:INFO:Set up train/test split.
2025-01-08 22:01:26,396:INFO:Set up index.
2025-01-08 22:01:26,396:INFO:Assigning column types.
2025-01-08 22:01:26,401:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-08 22:01:26,401:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,418:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,429:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:26,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:26,682:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,693:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:26,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:26,944:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-08 22:01:26,956:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 22:01:26,966:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,098:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,215:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,225:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,470:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-08 22:01:27,491:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,623:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:27,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-08 22:01:27,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,038:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,039:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-08 22:01:28,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,567:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,573:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-08 22:01:28,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:28,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:28,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-08 22:01:29,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,112:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-08 22:01:29,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:29,644:INFO:Preparing preprocessing pipeline...
2025-01-08 22:01:29,644:INFO:Set up simple imputation.
2025-01-08 22:01:29,645:INFO:Set up column name cleaning.
2025-01-08 22:01:29,730:INFO:Finished creating preprocessing pipeline.
2025-01-08 22:01:29,737:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-08 22:01:29,737:INFO:Creating final display dataframe.
2025-01-08 22:01:29,948:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           super95
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              60b5
2025-01-08 22:01:30,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:30,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:30,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:30,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-08 22:01:30,484:INFO:setup() successfully completed in 4.11s...............
2025-01-08 22:01:33,343:INFO:Initializing compare_models()
2025-01-08 22:01:33,343:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 22:01:33,343:INFO:Checking exceptions
2025-01-08 22:01:33,347:INFO:Preparing display monitor
2025-01-08 22:01:33,373:INFO:Initializing Linear Regression
2025-01-08 22:01:33,374:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-01-08 22:01:33,378:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:33,378:INFO:Initializing create_model()
2025-01-08 22:01:33,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:33,378:INFO:Checking exceptions
2025-01-08 22:01:33,379:INFO:Importing libraries
2025-01-08 22:01:33,379:INFO:Copying training dataset
2025-01-08 22:01:33,389:INFO:Defining folds
2025-01-08 22:01:33,389:INFO:Declaring metric variables
2025-01-08 22:01:33,393:INFO:Importing untrained model
2025-01-08 22:01:33,397:INFO:Linear Regression Imported successfully
2025-01-08 22:01:33,407:INFO:Starting cross validation
2025-01-08 22:01:33,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:33,554:INFO:Calculating mean and std
2025-01-08 22:01:33,555:INFO:Creating metrics dataframe
2025-01-08 22:01:33,558:INFO:Uploading results into container
2025-01-08 22:01:33,558:INFO:Uploading model into container now
2025-01-08 22:01:33,558:INFO:_master_model_container: 1
2025-01-08 22:01:33,559:INFO:_display_container: 2
2025-01-08 22:01:33,559:INFO:LinearRegression(n_jobs=-1)
2025-01-08 22:01:33,559:INFO:create_model() successfully completed......................................
2025-01-08 22:01:33,672:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:33,672:INFO:Creating metrics dataframe
2025-01-08 22:01:33,681:INFO:Initializing Lasso Regression
2025-01-08 22:01:33,681:INFO:Total runtime is 0.00513077974319458 minutes
2025-01-08 22:01:33,686:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:33,686:INFO:Initializing create_model()
2025-01-08 22:01:33,686:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:33,687:INFO:Checking exceptions
2025-01-08 22:01:33,687:INFO:Importing libraries
2025-01-08 22:01:33,687:INFO:Copying training dataset
2025-01-08 22:01:33,694:INFO:Defining folds
2025-01-08 22:01:33,694:INFO:Declaring metric variables
2025-01-08 22:01:33,697:INFO:Importing untrained model
2025-01-08 22:01:33,702:INFO:Lasso Regression Imported successfully
2025-01-08 22:01:33,711:INFO:Starting cross validation
2025-01-08 22:01:33,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:33,842:INFO:Calculating mean and std
2025-01-08 22:01:33,843:INFO:Creating metrics dataframe
2025-01-08 22:01:33,845:INFO:Uploading results into container
2025-01-08 22:01:33,846:INFO:Uploading model into container now
2025-01-08 22:01:33,846:INFO:_master_model_container: 2
2025-01-08 22:01:33,846:INFO:_display_container: 2
2025-01-08 22:01:33,846:INFO:Lasso(random_state=123)
2025-01-08 22:01:33,847:INFO:create_model() successfully completed......................................
2025-01-08 22:01:33,955:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:33,955:INFO:Creating metrics dataframe
2025-01-08 22:01:33,964:INFO:Initializing Ridge Regression
2025-01-08 22:01:33,964:INFO:Total runtime is 0.009844481945037842 minutes
2025-01-08 22:01:33,969:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:33,970:INFO:Initializing create_model()
2025-01-08 22:01:33,970:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:33,970:INFO:Checking exceptions
2025-01-08 22:01:33,970:INFO:Importing libraries
2025-01-08 22:01:33,970:INFO:Copying training dataset
2025-01-08 22:01:33,977:INFO:Defining folds
2025-01-08 22:01:33,977:INFO:Declaring metric variables
2025-01-08 22:01:33,980:INFO:Importing untrained model
2025-01-08 22:01:33,985:INFO:Ridge Regression Imported successfully
2025-01-08 22:01:33,994:INFO:Starting cross validation
2025-01-08 22:01:33,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:34,118:INFO:Calculating mean and std
2025-01-08 22:01:34,119:INFO:Creating metrics dataframe
2025-01-08 22:01:34,121:INFO:Uploading results into container
2025-01-08 22:01:34,122:INFO:Uploading model into container now
2025-01-08 22:01:34,122:INFO:_master_model_container: 3
2025-01-08 22:01:34,122:INFO:_display_container: 2
2025-01-08 22:01:34,122:INFO:Ridge(random_state=123)
2025-01-08 22:01:34,123:INFO:create_model() successfully completed......................................
2025-01-08 22:01:34,230:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:34,230:INFO:Creating metrics dataframe
2025-01-08 22:01:34,240:INFO:Initializing Elastic Net
2025-01-08 22:01:34,240:INFO:Total runtime is 0.014458056290944418 minutes
2025-01-08 22:01:34,245:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:34,245:INFO:Initializing create_model()
2025-01-08 22:01:34,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:34,246:INFO:Checking exceptions
2025-01-08 22:01:34,246:INFO:Importing libraries
2025-01-08 22:01:34,246:INFO:Copying training dataset
2025-01-08 22:01:34,253:INFO:Defining folds
2025-01-08 22:01:34,253:INFO:Declaring metric variables
2025-01-08 22:01:34,257:INFO:Importing untrained model
2025-01-08 22:01:34,262:INFO:Elastic Net Imported successfully
2025-01-08 22:01:34,271:INFO:Starting cross validation
2025-01-08 22:01:34,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:34,400:INFO:Calculating mean and std
2025-01-08 22:01:34,402:INFO:Creating metrics dataframe
2025-01-08 22:01:34,404:INFO:Uploading results into container
2025-01-08 22:01:34,405:INFO:Uploading model into container now
2025-01-08 22:01:34,405:INFO:_master_model_container: 4
2025-01-08 22:01:34,405:INFO:_display_container: 2
2025-01-08 22:01:34,406:INFO:ElasticNet(random_state=123)
2025-01-08 22:01:34,406:INFO:create_model() successfully completed......................................
2025-01-08 22:01:34,514:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:34,514:INFO:Creating metrics dataframe
2025-01-08 22:01:34,527:INFO:Initializing Least Angle Regression
2025-01-08 22:01:34,527:INFO:Total runtime is 0.019238229592641196 minutes
2025-01-08 22:01:34,531:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:34,532:INFO:Initializing create_model()
2025-01-08 22:01:34,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:34,532:INFO:Checking exceptions
2025-01-08 22:01:34,532:INFO:Importing libraries
2025-01-08 22:01:34,532:INFO:Copying training dataset
2025-01-08 22:01:34,540:INFO:Defining folds
2025-01-08 22:01:34,541:INFO:Declaring metric variables
2025-01-08 22:01:34,546:INFO:Importing untrained model
2025-01-08 22:01:34,551:INFO:Least Angle Regression Imported successfully
2025-01-08 22:01:34,560:INFO:Starting cross validation
2025-01-08 22:01:34,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:34,686:INFO:Calculating mean and std
2025-01-08 22:01:34,688:INFO:Creating metrics dataframe
2025-01-08 22:01:34,690:INFO:Uploading results into container
2025-01-08 22:01:34,691:INFO:Uploading model into container now
2025-01-08 22:01:34,692:INFO:_master_model_container: 5
2025-01-08 22:01:34,692:INFO:_display_container: 2
2025-01-08 22:01:34,693:INFO:Lars(random_state=123)
2025-01-08 22:01:34,693:INFO:create_model() successfully completed......................................
2025-01-08 22:01:34,838:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:34,838:INFO:Creating metrics dataframe
2025-01-08 22:01:34,848:INFO:Initializing Lasso Least Angle Regression
2025-01-08 22:01:34,849:INFO:Total runtime is 0.0246017058690389 minutes
2025-01-08 22:01:34,854:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:34,855:INFO:Initializing create_model()
2025-01-08 22:01:34,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:34,855:INFO:Checking exceptions
2025-01-08 22:01:34,856:INFO:Importing libraries
2025-01-08 22:01:34,856:INFO:Copying training dataset
2025-01-08 22:01:34,863:INFO:Defining folds
2025-01-08 22:01:34,863:INFO:Declaring metric variables
2025-01-08 22:01:34,870:INFO:Importing untrained model
2025-01-08 22:01:34,875:INFO:Lasso Least Angle Regression Imported successfully
2025-01-08 22:01:34,884:INFO:Starting cross validation
2025-01-08 22:01:34,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:35,018:INFO:Calculating mean and std
2025-01-08 22:01:35,020:INFO:Creating metrics dataframe
2025-01-08 22:01:35,022:INFO:Uploading results into container
2025-01-08 22:01:35,023:INFO:Uploading model into container now
2025-01-08 22:01:35,024:INFO:_master_model_container: 6
2025-01-08 22:01:35,024:INFO:_display_container: 2
2025-01-08 22:01:35,025:INFO:LassoLars(random_state=123)
2025-01-08 22:01:35,025:INFO:create_model() successfully completed......................................
2025-01-08 22:01:35,144:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:35,144:INFO:Creating metrics dataframe
2025-01-08 22:01:35,156:INFO:Initializing Orthogonal Matching Pursuit
2025-01-08 22:01:35,157:INFO:Total runtime is 0.029731404781341553 minutes
2025-01-08 22:01:35,162:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:35,162:INFO:Initializing create_model()
2025-01-08 22:01:35,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:35,162:INFO:Checking exceptions
2025-01-08 22:01:35,163:INFO:Importing libraries
2025-01-08 22:01:35,163:INFO:Copying training dataset
2025-01-08 22:01:35,172:INFO:Defining folds
2025-01-08 22:01:35,172:INFO:Declaring metric variables
2025-01-08 22:01:35,184:INFO:Importing untrained model
2025-01-08 22:01:35,193:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-08 22:01:35,203:INFO:Starting cross validation
2025-01-08 22:01:35,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:35,328:INFO:Calculating mean and std
2025-01-08 22:01:35,329:INFO:Creating metrics dataframe
2025-01-08 22:01:35,332:INFO:Uploading results into container
2025-01-08 22:01:35,332:INFO:Uploading model into container now
2025-01-08 22:01:35,333:INFO:_master_model_container: 7
2025-01-08 22:01:35,333:INFO:_display_container: 2
2025-01-08 22:01:35,333:INFO:OrthogonalMatchingPursuit()
2025-01-08 22:01:35,333:INFO:create_model() successfully completed......................................
2025-01-08 22:01:35,448:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:35,448:INFO:Creating metrics dataframe
2025-01-08 22:01:35,461:INFO:Initializing Bayesian Ridge
2025-01-08 22:01:35,462:INFO:Total runtime is 0.03479566971460978 minutes
2025-01-08 22:01:35,466:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:35,466:INFO:Initializing create_model()
2025-01-08 22:01:35,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:35,466:INFO:Checking exceptions
2025-01-08 22:01:35,467:INFO:Importing libraries
2025-01-08 22:01:35,467:INFO:Copying training dataset
2025-01-08 22:01:35,476:INFO:Defining folds
2025-01-08 22:01:35,476:INFO:Declaring metric variables
2025-01-08 22:01:35,482:INFO:Importing untrained model
2025-01-08 22:01:35,487:INFO:Bayesian Ridge Imported successfully
2025-01-08 22:01:35,500:INFO:Starting cross validation
2025-01-08 22:01:35,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:35,630:INFO:Calculating mean and std
2025-01-08 22:01:35,632:INFO:Creating metrics dataframe
2025-01-08 22:01:35,636:INFO:Uploading results into container
2025-01-08 22:01:35,636:INFO:Uploading model into container now
2025-01-08 22:01:35,637:INFO:_master_model_container: 8
2025-01-08 22:01:35,637:INFO:_display_container: 2
2025-01-08 22:01:35,638:INFO:BayesianRidge()
2025-01-08 22:01:35,638:INFO:create_model() successfully completed......................................
2025-01-08 22:01:35,747:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:35,747:INFO:Creating metrics dataframe
2025-01-08 22:01:35,760:INFO:Initializing Passive Aggressive Regressor
2025-01-08 22:01:35,761:INFO:Total runtime is 0.039792064825693765 minutes
2025-01-08 22:01:35,764:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:35,765:INFO:Initializing create_model()
2025-01-08 22:01:35,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:35,765:INFO:Checking exceptions
2025-01-08 22:01:35,765:INFO:Importing libraries
2025-01-08 22:01:35,766:INFO:Copying training dataset
2025-01-08 22:01:35,773:INFO:Defining folds
2025-01-08 22:01:35,774:INFO:Declaring metric variables
2025-01-08 22:01:35,779:INFO:Importing untrained model
2025-01-08 22:01:35,783:INFO:Passive Aggressive Regressor Imported successfully
2025-01-08 22:01:35,795:INFO:Starting cross validation
2025-01-08 22:01:35,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:35,969:INFO:Calculating mean and std
2025-01-08 22:01:35,971:INFO:Creating metrics dataframe
2025-01-08 22:01:35,973:INFO:Uploading results into container
2025-01-08 22:01:35,973:INFO:Uploading model into container now
2025-01-08 22:01:35,974:INFO:_master_model_container: 9
2025-01-08 22:01:35,974:INFO:_display_container: 2
2025-01-08 22:01:35,974:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-08 22:01:35,974:INFO:create_model() successfully completed......................................
2025-01-08 22:01:36,087:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:36,088:INFO:Creating metrics dataframe
2025-01-08 22:01:36,101:INFO:Initializing Huber Regressor
2025-01-08 22:01:36,102:INFO:Total runtime is 0.0454882025718689 minutes
2025-01-08 22:01:36,107:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:36,107:INFO:Initializing create_model()
2025-01-08 22:01:36,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:36,108:INFO:Checking exceptions
2025-01-08 22:01:36,108:INFO:Importing libraries
2025-01-08 22:01:36,108:INFO:Copying training dataset
2025-01-08 22:01:36,115:INFO:Defining folds
2025-01-08 22:01:36,115:INFO:Declaring metric variables
2025-01-08 22:01:36,124:INFO:Importing untrained model
2025-01-08 22:01:36,131:INFO:Huber Regressor Imported successfully
2025-01-08 22:01:36,172:INFO:Starting cross validation
2025-01-08 22:01:36,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:36,405:INFO:Calculating mean and std
2025-01-08 22:01:36,406:INFO:Creating metrics dataframe
2025-01-08 22:01:36,409:INFO:Uploading results into container
2025-01-08 22:01:36,409:INFO:Uploading model into container now
2025-01-08 22:01:36,410:INFO:_master_model_container: 10
2025-01-08 22:01:36,410:INFO:_display_container: 2
2025-01-08 22:01:36,410:INFO:HuberRegressor()
2025-01-08 22:01:36,410:INFO:create_model() successfully completed......................................
2025-01-08 22:01:36,521:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:36,522:INFO:Creating metrics dataframe
2025-01-08 22:01:36,534:INFO:Initializing K Neighbors Regressor
2025-01-08 22:01:36,535:INFO:Total runtime is 0.052700356642405195 minutes
2025-01-08 22:01:36,539:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:36,539:INFO:Initializing create_model()
2025-01-08 22:01:36,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:36,539:INFO:Checking exceptions
2025-01-08 22:01:36,540:INFO:Importing libraries
2025-01-08 22:01:36,540:INFO:Copying training dataset
2025-01-08 22:01:36,547:INFO:Defining folds
2025-01-08 22:01:36,547:INFO:Declaring metric variables
2025-01-08 22:01:36,552:INFO:Importing untrained model
2025-01-08 22:01:36,610:INFO:K Neighbors Regressor Imported successfully
2025-01-08 22:01:36,620:INFO:Starting cross validation
2025-01-08 22:01:36,621:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:36,813:INFO:Calculating mean and std
2025-01-08 22:01:36,814:INFO:Creating metrics dataframe
2025-01-08 22:01:36,817:INFO:Uploading results into container
2025-01-08 22:01:36,818:INFO:Uploading model into container now
2025-01-08 22:01:36,818:INFO:_master_model_container: 11
2025-01-08 22:01:36,819:INFO:_display_container: 2
2025-01-08 22:01:36,821:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-08 22:01:36,821:INFO:create_model() successfully completed......................................
2025-01-08 22:01:36,934:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:36,934:INFO:Creating metrics dataframe
2025-01-08 22:01:36,948:INFO:Initializing Decision Tree Regressor
2025-01-08 22:01:36,948:INFO:Total runtime is 0.05957939624786377 minutes
2025-01-08 22:01:36,953:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:36,953:INFO:Initializing create_model()
2025-01-08 22:01:36,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:36,954:INFO:Checking exceptions
2025-01-08 22:01:36,954:INFO:Importing libraries
2025-01-08 22:01:36,954:INFO:Copying training dataset
2025-01-08 22:01:36,961:INFO:Defining folds
2025-01-08 22:01:36,961:INFO:Declaring metric variables
2025-01-08 22:01:36,966:INFO:Importing untrained model
2025-01-08 22:01:36,971:INFO:Decision Tree Regressor Imported successfully
2025-01-08 22:01:36,982:INFO:Starting cross validation
2025-01-08 22:01:36,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:37,164:INFO:Calculating mean and std
2025-01-08 22:01:37,166:INFO:Creating metrics dataframe
2025-01-08 22:01:37,168:INFO:Uploading results into container
2025-01-08 22:01:37,169:INFO:Uploading model into container now
2025-01-08 22:01:37,170:INFO:_master_model_container: 12
2025-01-08 22:01:37,170:INFO:_display_container: 2
2025-01-08 22:01:37,170:INFO:DecisionTreeRegressor(random_state=123)
2025-01-08 22:01:37,170:INFO:create_model() successfully completed......................................
2025-01-08 22:01:37,280:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:37,280:INFO:Creating metrics dataframe
2025-01-08 22:01:37,295:INFO:Initializing Random Forest Regressor
2025-01-08 22:01:37,295:INFO:Total runtime is 0.06537576516469319 minutes
2025-01-08 22:01:37,300:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:37,301:INFO:Initializing create_model()
2025-01-08 22:01:37,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:37,302:INFO:Checking exceptions
2025-01-08 22:01:37,302:INFO:Importing libraries
2025-01-08 22:01:37,302:INFO:Copying training dataset
2025-01-08 22:01:37,310:INFO:Defining folds
2025-01-08 22:01:37,311:INFO:Declaring metric variables
2025-01-08 22:01:37,315:INFO:Importing untrained model
2025-01-08 22:01:37,321:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:01:37,330:INFO:Starting cross validation
2025-01-08 22:01:37,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:41,475:INFO:Calculating mean and std
2025-01-08 22:01:41,477:INFO:Creating metrics dataframe
2025-01-08 22:01:41,480:INFO:Uploading results into container
2025-01-08 22:01:41,481:INFO:Uploading model into container now
2025-01-08 22:01:41,481:INFO:_master_model_container: 13
2025-01-08 22:01:41,481:INFO:_display_container: 2
2025-01-08 22:01:41,482:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:01:41,482:INFO:create_model() successfully completed......................................
2025-01-08 22:01:41,591:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:41,592:INFO:Creating metrics dataframe
2025-01-08 22:01:41,605:INFO:Initializing Extra Trees Regressor
2025-01-08 22:01:41,606:INFO:Total runtime is 0.13722134033838906 minutes
2025-01-08 22:01:41,610:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:41,610:INFO:Initializing create_model()
2025-01-08 22:01:41,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:41,611:INFO:Checking exceptions
2025-01-08 22:01:41,611:INFO:Importing libraries
2025-01-08 22:01:41,611:INFO:Copying training dataset
2025-01-08 22:01:41,618:INFO:Defining folds
2025-01-08 22:01:41,618:INFO:Declaring metric variables
2025-01-08 22:01:41,626:INFO:Importing untrained model
2025-01-08 22:01:41,630:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:01:41,640:INFO:Starting cross validation
2025-01-08 22:01:41,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:43,801:INFO:Calculating mean and std
2025-01-08 22:01:43,802:INFO:Creating metrics dataframe
2025-01-08 22:01:43,805:INFO:Uploading results into container
2025-01-08 22:01:43,805:INFO:Uploading model into container now
2025-01-08 22:01:43,806:INFO:_master_model_container: 14
2025-01-08 22:01:43,806:INFO:_display_container: 2
2025-01-08 22:01:43,807:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:01:43,808:INFO:create_model() successfully completed......................................
2025-01-08 22:01:43,919:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:43,919:INFO:Creating metrics dataframe
2025-01-08 22:01:43,934:INFO:Initializing AdaBoost Regressor
2025-01-08 22:01:43,934:INFO:Total runtime is 0.17601781686147053 minutes
2025-01-08 22:01:43,938:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:43,938:INFO:Initializing create_model()
2025-01-08 22:01:43,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:43,939:INFO:Checking exceptions
2025-01-08 22:01:43,939:INFO:Importing libraries
2025-01-08 22:01:43,939:INFO:Copying training dataset
2025-01-08 22:01:43,947:INFO:Defining folds
2025-01-08 22:01:43,948:INFO:Declaring metric variables
2025-01-08 22:01:43,953:INFO:Importing untrained model
2025-01-08 22:01:43,959:INFO:AdaBoost Regressor Imported successfully
2025-01-08 22:01:43,968:INFO:Starting cross validation
2025-01-08 22:01:43,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:44,568:INFO:Calculating mean and std
2025-01-08 22:01:44,570:INFO:Creating metrics dataframe
2025-01-08 22:01:44,572:INFO:Uploading results into container
2025-01-08 22:01:44,573:INFO:Uploading model into container now
2025-01-08 22:01:44,574:INFO:_master_model_container: 15
2025-01-08 22:01:44,574:INFO:_display_container: 2
2025-01-08 22:01:44,574:INFO:AdaBoostRegressor(random_state=123)
2025-01-08 22:01:44,574:INFO:create_model() successfully completed......................................
2025-01-08 22:01:44,683:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:44,683:INFO:Creating metrics dataframe
2025-01-08 22:01:44,701:INFO:Initializing Gradient Boosting Regressor
2025-01-08 22:01:44,702:INFO:Total runtime is 0.1888265530268351 minutes
2025-01-08 22:01:44,706:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:44,706:INFO:Initializing create_model()
2025-01-08 22:01:44,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:44,706:INFO:Checking exceptions
2025-01-08 22:01:44,707:INFO:Importing libraries
2025-01-08 22:01:44,707:INFO:Copying training dataset
2025-01-08 22:01:44,715:INFO:Defining folds
2025-01-08 22:01:44,715:INFO:Declaring metric variables
2025-01-08 22:01:44,720:INFO:Importing untrained model
2025-01-08 22:01:44,726:INFO:Gradient Boosting Regressor Imported successfully
2025-01-08 22:01:44,737:INFO:Starting cross validation
2025-01-08 22:01:44,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:46,331:INFO:Calculating mean and std
2025-01-08 22:01:46,332:INFO:Creating metrics dataframe
2025-01-08 22:01:46,335:INFO:Uploading results into container
2025-01-08 22:01:46,336:INFO:Uploading model into container now
2025-01-08 22:01:46,336:INFO:_master_model_container: 16
2025-01-08 22:01:46,336:INFO:_display_container: 2
2025-01-08 22:01:46,337:INFO:GradientBoostingRegressor(random_state=123)
2025-01-08 22:01:46,337:INFO:create_model() successfully completed......................................
2025-01-08 22:01:46,447:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:46,447:INFO:Creating metrics dataframe
2025-01-08 22:01:46,462:INFO:Initializing Light Gradient Boosting Machine
2025-01-08 22:01:46,463:INFO:Total runtime is 0.21817505757013955 minutes
2025-01-08 22:01:46,467:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:46,467:INFO:Initializing create_model()
2025-01-08 22:01:46,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:46,467:INFO:Checking exceptions
2025-01-08 22:01:46,467:INFO:Importing libraries
2025-01-08 22:01:46,467:INFO:Copying training dataset
2025-01-08 22:01:46,475:INFO:Defining folds
2025-01-08 22:01:46,475:INFO:Declaring metric variables
2025-01-08 22:01:46,480:INFO:Importing untrained model
2025-01-08 22:01:46,487:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-08 22:01:46,511:INFO:Starting cross validation
2025-01-08 22:01:46,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:47,212:INFO:Calculating mean and std
2025-01-08 22:01:47,214:INFO:Creating metrics dataframe
2025-01-08 22:01:47,216:INFO:Uploading results into container
2025-01-08 22:01:47,217:INFO:Uploading model into container now
2025-01-08 22:01:47,217:INFO:_master_model_container: 17
2025-01-08 22:01:47,217:INFO:_display_container: 2
2025-01-08 22:01:47,218:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:01:47,218:INFO:create_model() successfully completed......................................
2025-01-08 22:01:47,327:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:47,327:INFO:Creating metrics dataframe
2025-01-08 22:01:47,342:INFO:Initializing Dummy Regressor
2025-01-08 22:01:47,343:INFO:Total runtime is 0.232831605275472 minutes
2025-01-08 22:01:47,347:INFO:SubProcess create_model() called ==================================
2025-01-08 22:01:47,347:INFO:Initializing create_model()
2025-01-08 22:01:47,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5C7CEDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:47,347:INFO:Checking exceptions
2025-01-08 22:01:47,347:INFO:Importing libraries
2025-01-08 22:01:47,347:INFO:Copying training dataset
2025-01-08 22:01:47,355:INFO:Defining folds
2025-01-08 22:01:47,355:INFO:Declaring metric variables
2025-01-08 22:01:47,359:INFO:Importing untrained model
2025-01-08 22:01:47,367:INFO:Dummy Regressor Imported successfully
2025-01-08 22:01:47,375:INFO:Starting cross validation
2025-01-08 22:01:47,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:01:47,503:INFO:Calculating mean and std
2025-01-08 22:01:47,504:INFO:Creating metrics dataframe
2025-01-08 22:01:47,508:INFO:Uploading results into container
2025-01-08 22:01:47,508:INFO:Uploading model into container now
2025-01-08 22:01:47,509:INFO:_master_model_container: 18
2025-01-08 22:01:47,509:INFO:_display_container: 2
2025-01-08 22:01:47,509:INFO:DummyRegressor()
2025-01-08 22:01:47,509:INFO:create_model() successfully completed......................................
2025-01-08 22:01:47,618:INFO:SubProcess create_model() end ==================================
2025-01-08 22:01:47,618:INFO:Creating metrics dataframe
2025-01-08 22:01:47,634:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 22:01:47,646:INFO:Initializing create_model()
2025-01-08 22:01:47,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:47,647:INFO:Checking exceptions
2025-01-08 22:01:47,649:INFO:Importing libraries
2025-01-08 22:01:47,649:INFO:Copying training dataset
2025-01-08 22:01:47,655:INFO:Defining folds
2025-01-08 22:01:47,655:INFO:Declaring metric variables
2025-01-08 22:01:47,656:INFO:Importing untrained model
2025-01-08 22:01:47,656:INFO:Declaring custom model
2025-01-08 22:01:47,657:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:01:47,657:INFO:Cross validation set to False
2025-01-08 22:01:47,658:INFO:Fitting Model
2025-01-08 22:01:47,921:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:01:47,921:INFO:create_model() successfully completed......................................
2025-01-08 22:01:48,036:INFO:Initializing create_model()
2025-01-08 22:01:48,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:01:48,037:INFO:Checking exceptions
2025-01-08 22:01:48,039:INFO:Importing libraries
2025-01-08 22:01:48,039:INFO:Copying training dataset
2025-01-08 22:01:48,046:INFO:Defining folds
2025-01-08 22:01:48,046:INFO:Declaring metric variables
2025-01-08 22:01:48,046:INFO:Importing untrained model
2025-01-08 22:01:48,046:INFO:Declaring custom model
2025-01-08 22:01:48,047:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:01:48,048:INFO:Cross validation set to False
2025-01-08 22:01:48,048:INFO:Fitting Model
2025-01-08 22:01:48,514:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:01:48,514:INFO:create_model() successfully completed......................................
2025-01-08 22:01:48,666:INFO:_master_model_container: 18
2025-01-08 22:01:48,666:INFO:_display_container: 2
2025-01-08 22:01:48,667:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)]
2025-01-08 22:01:48,667:INFO:compare_models() successfully completed......................................
2025-01-08 22:02:16,322:INFO:Initializing tune_model()
2025-01-08 22:02:16,323:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 22:02:16,323:INFO:Checking exceptions
2025-01-08 22:02:16,342:INFO:Copying training dataset
2025-01-08 22:02:16,349:INFO:Checking base model
2025-01-08 22:02:16,349:INFO:Base model : Extra Trees Regressor
2025-01-08 22:02:16,355:INFO:Declaring metric variables
2025-01-08 22:02:16,360:INFO:Defining Hyperparameters
2025-01-08 22:02:16,549:INFO:Tuning with n_jobs=-1
2025-01-08 22:02:16,550:INFO:Initializing RandomizedSearchCV
2025-01-08 22:03:02,309:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 22:03:02,310:INFO:Hyperparameter search completed
2025-01-08 22:03:02,311:INFO:SubProcess create_model() called ==================================
2025-01-08 22:03:02,311:INFO:Initializing create_model()
2025-01-08 22:03:02,311:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C599278490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 22:03:02,312:INFO:Checking exceptions
2025-01-08 22:03:02,312:INFO:Importing libraries
2025-01-08 22:03:02,313:INFO:Copying training dataset
2025-01-08 22:03:02,320:INFO:Defining folds
2025-01-08 22:03:02,320:INFO:Declaring metric variables
2025-01-08 22:03:02,326:INFO:Importing untrained model
2025-01-08 22:03:02,326:INFO:Declaring custom model
2025-01-08 22:03:02,331:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:03:02,339:INFO:Starting cross validation
2025-01-08 22:03:02,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:03:03,534:INFO:Calculating mean and std
2025-01-08 22:03:03,535:INFO:Creating metrics dataframe
2025-01-08 22:03:03,543:INFO:Finalizing model
2025-01-08 22:03:03,821:INFO:Uploading results into container
2025-01-08 22:03:03,822:INFO:Uploading model into container now
2025-01-08 22:03:03,823:INFO:_master_model_container: 19
2025-01-08 22:03:03,823:INFO:_display_container: 3
2025-01-08 22:03:03,825:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123)
2025-01-08 22:03:03,825:INFO:create_model() successfully completed......................................
2025-01-08 22:03:03,944:INFO:SubProcess create_model() end ==================================
2025-01-08 22:03:03,945:INFO:choose_better activated
2025-01-08 22:03:03,949:INFO:SubProcess create_model() called ==================================
2025-01-08 22:03:03,950:INFO:Initializing create_model()
2025-01-08 22:03:03,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:03:03,950:INFO:Checking exceptions
2025-01-08 22:03:03,951:INFO:Importing libraries
2025-01-08 22:03:03,952:INFO:Copying training dataset
2025-01-08 22:03:03,958:INFO:Defining folds
2025-01-08 22:03:03,959:INFO:Declaring metric variables
2025-01-08 22:03:03,959:INFO:Importing untrained model
2025-01-08 22:03:03,959:INFO:Declaring custom model
2025-01-08 22:03:03,960:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:03:03,960:INFO:Starting cross validation
2025-01-08 22:03:03,961:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:03:06,117:INFO:Calculating mean and std
2025-01-08 22:03:06,118:INFO:Creating metrics dataframe
2025-01-08 22:03:06,120:INFO:Finalizing model
2025-01-08 22:03:06,374:INFO:Uploading results into container
2025-01-08 22:03:06,375:INFO:Uploading model into container now
2025-01-08 22:03:06,376:INFO:_master_model_container: 20
2025-01-08 22:03:06,376:INFO:_display_container: 4
2025-01-08 22:03:06,376:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:03:06,377:INFO:create_model() successfully completed......................................
2025-01-08 22:03:06,484:INFO:SubProcess create_model() end ==================================
2025-01-08 22:03:06,485:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9738
2025-01-08 22:03:06,485:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123) result for R2 is 0.7118
2025-01-08 22:03:06,486:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 22:03:06,486:INFO:choose_better completed
2025-01-08 22:03:06,486:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 22:03:06,500:INFO:_master_model_container: 20
2025-01-08 22:03:06,500:INFO:_display_container: 3
2025-01-08 22:03:06,500:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:03:06,501:INFO:tune_model() successfully completed......................................
2025-01-08 22:03:06,613:INFO:Initializing tune_model()
2025-01-08 22:03:06,613:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-08 22:03:06,613:INFO:Checking exceptions
2025-01-08 22:03:06,635:INFO:Copying training dataset
2025-01-08 22:03:06,644:INFO:Checking base model
2025-01-08 22:03:06,644:INFO:Base model : Random Forest Regressor
2025-01-08 22:03:06,652:INFO:Declaring metric variables
2025-01-08 22:03:06,659:INFO:Defining Hyperparameters
2025-01-08 22:03:06,823:INFO:Tuning with n_jobs=-1
2025-01-08 22:03:06,823:INFO:Initializing RandomizedSearchCV
2025-01-08 22:04:43,349:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-08 22:04:43,350:INFO:Hyperparameter search completed
2025-01-08 22:04:43,350:INFO:SubProcess create_model() called ==================================
2025-01-08 22:04:43,351:INFO:Initializing create_model()
2025-01-08 22:04:43,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6F900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-08 22:04:43,352:INFO:Checking exceptions
2025-01-08 22:04:43,352:INFO:Importing libraries
2025-01-08 22:04:43,352:INFO:Copying training dataset
2025-01-08 22:04:43,360:INFO:Defining folds
2025-01-08 22:04:43,360:INFO:Declaring metric variables
2025-01-08 22:04:43,365:INFO:Importing untrained model
2025-01-08 22:04:43,365:INFO:Declaring custom model
2025-01-08 22:04:43,371:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:04:43,380:INFO:Starting cross validation
2025-01-08 22:04:43,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:04:47,276:INFO:Calculating mean and std
2025-01-08 22:04:47,277:INFO:Creating metrics dataframe
2025-01-08 22:04:47,285:INFO:Finalizing model
2025-01-08 22:04:47,785:INFO:Uploading results into container
2025-01-08 22:04:47,786:INFO:Uploading model into container now
2025-01-08 22:04:47,786:INFO:_master_model_container: 21
2025-01-08 22:04:47,787:INFO:_display_container: 4
2025-01-08 22:04:47,788:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123)
2025-01-08 22:04:47,788:INFO:create_model() successfully completed......................................
2025-01-08 22:04:47,907:INFO:SubProcess create_model() end ==================================
2025-01-08 22:04:47,907:INFO:choose_better activated
2025-01-08 22:04:47,911:INFO:SubProcess create_model() called ==================================
2025-01-08 22:04:47,912:INFO:Initializing create_model()
2025-01-08 22:04:47,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:04:47,912:INFO:Checking exceptions
2025-01-08 22:04:47,915:INFO:Importing libraries
2025-01-08 22:04:47,915:INFO:Copying training dataset
2025-01-08 22:04:47,921:INFO:Defining folds
2025-01-08 22:04:47,921:INFO:Declaring metric variables
2025-01-08 22:04:47,921:INFO:Importing untrained model
2025-01-08 22:04:47,921:INFO:Declaring custom model
2025-01-08 22:04:47,922:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:04:47,922:INFO:Starting cross validation
2025-01-08 22:04:47,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:04:51,985:INFO:Calculating mean and std
2025-01-08 22:04:51,986:INFO:Creating metrics dataframe
2025-01-08 22:04:51,988:INFO:Finalizing model
2025-01-08 22:04:52,467:INFO:Uploading results into container
2025-01-08 22:04:52,467:INFO:Uploading model into container now
2025-01-08 22:04:52,468:INFO:_master_model_container: 22
2025-01-08 22:04:52,468:INFO:_display_container: 5
2025-01-08 22:04:52,468:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:04:52,468:INFO:create_model() successfully completed......................................
2025-01-08 22:04:52,576:INFO:SubProcess create_model() end ==================================
2025-01-08 22:04:52,577:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9708
2025-01-08 22:04:52,578:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123) result for R2 is 0.958
2025-01-08 22:04:52,578:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-08 22:04:52,578:INFO:choose_better completed
2025-01-08 22:04:52,578:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-08 22:04:52,592:INFO:_master_model_container: 22
2025-01-08 22:04:52,593:INFO:_display_container: 4
2025-01-08 22:04:52,593:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:04:52,593:INFO:tune_model() successfully completed......................................
2025-01-08 22:05:12,809:INFO:Initializing compare_models()
2025-01-08 22:05:12,809:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-08 22:05:12,809:INFO:Checking exceptions
2025-01-08 22:05:12,812:INFO:Preparing display monitor
2025-01-08 22:05:12,840:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 22:05:12,843:INFO:Total runtime is 6.662607192993164e-05 minutes
2025-01-08 22:05:12,848:INFO:SubProcess create_model() called ==================================
2025-01-08 22:05:12,849:INFO:Initializing create_model()
2025-01-08 22:05:12,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E5F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:05:12,849:INFO:Checking exceptions
2025-01-08 22:05:12,849:INFO:Importing libraries
2025-01-08 22:05:12,849:INFO:Copying training dataset
2025-01-08 22:05:12,858:INFO:Defining folds
2025-01-08 22:05:12,858:INFO:Declaring metric variables
2025-01-08 22:05:12,863:INFO:Importing untrained model
2025-01-08 22:05:12,863:INFO:Declaring custom model
2025-01-08 22:05:12,870:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:05:12,881:INFO:Starting cross validation
2025-01-08 22:05:12,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:05:15,182:INFO:Calculating mean and std
2025-01-08 22:05:15,184:INFO:Creating metrics dataframe
2025-01-08 22:05:15,188:INFO:Uploading results into container
2025-01-08 22:05:15,189:INFO:Uploading model into container now
2025-01-08 22:05:15,190:INFO:_master_model_container: 23
2025-01-08 22:05:15,190:INFO:_display_container: 5
2025-01-08 22:05:15,191:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:15,191:INFO:create_model() successfully completed......................................
2025-01-08 22:05:15,317:INFO:SubProcess create_model() end ==================================
2025-01-08 22:05:15,317:INFO:Creating metrics dataframe
2025-01-08 22:05:15,326:INFO:Initializing custom model Random Forest Regressor
2025-01-08 22:05:15,326:INFO:Total runtime is 0.041443471113840745 minutes
2025-01-08 22:05:15,331:INFO:SubProcess create_model() called ==================================
2025-01-08 22:05:15,331:INFO:Initializing create_model()
2025-01-08 22:05:15,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E5F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:05:15,331:INFO:Checking exceptions
2025-01-08 22:05:15,332:INFO:Importing libraries
2025-01-08 22:05:15,332:INFO:Copying training dataset
2025-01-08 22:05:15,340:INFO:Defining folds
2025-01-08 22:05:15,341:INFO:Declaring metric variables
2025-01-08 22:05:15,346:INFO:Importing untrained model
2025-01-08 22:05:15,346:INFO:Declaring custom model
2025-01-08 22:05:15,353:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:05:15,362:INFO:Starting cross validation
2025-01-08 22:05:15,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:05:19,395:INFO:Calculating mean and std
2025-01-08 22:05:19,397:INFO:Creating metrics dataframe
2025-01-08 22:05:19,399:INFO:Uploading results into container
2025-01-08 22:05:19,400:INFO:Uploading model into container now
2025-01-08 22:05:19,400:INFO:_master_model_container: 24
2025-01-08 22:05:19,400:INFO:_display_container: 5
2025-01-08 22:05:19,401:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:19,401:INFO:create_model() successfully completed......................................
2025-01-08 22:05:19,513:INFO:SubProcess create_model() end ==================================
2025-01-08 22:05:19,513:INFO:Creating metrics dataframe
2025-01-08 22:05:19,523:INFO:Initializing custom model Extra Trees Regressor
2025-01-08 22:05:19,524:INFO:Total runtime is 0.11140920718510947 minutes
2025-01-08 22:05:19,528:INFO:SubProcess create_model() called ==================================
2025-01-08 22:05:19,529:INFO:Initializing create_model()
2025-01-08 22:05:19,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E5F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:05:19,529:INFO:Checking exceptions
2025-01-08 22:05:19,529:INFO:Importing libraries
2025-01-08 22:05:19,529:INFO:Copying training dataset
2025-01-08 22:05:19,536:INFO:Defining folds
2025-01-08 22:05:19,536:INFO:Declaring metric variables
2025-01-08 22:05:19,542:INFO:Importing untrained model
2025-01-08 22:05:19,542:INFO:Declaring custom model
2025-01-08 22:05:19,548:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:05:19,562:INFO:Starting cross validation
2025-01-08 22:05:19,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:05:21,792:INFO:Calculating mean and std
2025-01-08 22:05:21,793:INFO:Creating metrics dataframe
2025-01-08 22:05:21,796:INFO:Uploading results into container
2025-01-08 22:05:21,796:INFO:Uploading model into container now
2025-01-08 22:05:21,797:INFO:_master_model_container: 25
2025-01-08 22:05:21,797:INFO:_display_container: 5
2025-01-08 22:05:21,798:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:21,798:INFO:create_model() successfully completed......................................
2025-01-08 22:05:21,910:INFO:SubProcess create_model() end ==================================
2025-01-08 22:05:21,910:INFO:Creating metrics dataframe
2025-01-08 22:05:21,920:INFO:Initializing custom model Random Forest Regressor
2025-01-08 22:05:21,920:INFO:Total runtime is 0.15135219097137453 minutes
2025-01-08 22:05:21,925:INFO:SubProcess create_model() called ==================================
2025-01-08 22:05:21,925:INFO:Initializing create_model()
2025-01-08 22:05:21,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C5A6E5F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:05:21,926:INFO:Checking exceptions
2025-01-08 22:05:21,926:INFO:Importing libraries
2025-01-08 22:05:21,926:INFO:Copying training dataset
2025-01-08 22:05:21,934:INFO:Defining folds
2025-01-08 22:05:21,934:INFO:Declaring metric variables
2025-01-08 22:05:21,941:INFO:Importing untrained model
2025-01-08 22:05:21,941:INFO:Declaring custom model
2025-01-08 22:05:21,947:INFO:Random Forest Regressor Imported successfully
2025-01-08 22:05:21,956:INFO:Starting cross validation
2025-01-08 22:05:21,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-08 22:05:25,934:INFO:Calculating mean and std
2025-01-08 22:05:25,936:INFO:Creating metrics dataframe
2025-01-08 22:05:25,938:INFO:Uploading results into container
2025-01-08 22:05:25,939:INFO:Uploading model into container now
2025-01-08 22:05:25,939:INFO:_master_model_container: 26
2025-01-08 22:05:25,939:INFO:_display_container: 5
2025-01-08 22:05:25,940:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:25,940:INFO:create_model() successfully completed......................................
2025-01-08 22:05:26,053:INFO:SubProcess create_model() end ==================================
2025-01-08 22:05:26,053:INFO:Creating metrics dataframe
2025-01-08 22:05:26,064:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-08 22:05:26,076:INFO:Initializing create_model()
2025-01-08 22:05:26,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:05:26,076:INFO:Checking exceptions
2025-01-08 22:05:26,080:INFO:Importing libraries
2025-01-08 22:05:26,080:INFO:Copying training dataset
2025-01-08 22:05:26,087:INFO:Defining folds
2025-01-08 22:05:26,087:INFO:Declaring metric variables
2025-01-08 22:05:26,088:INFO:Importing untrained model
2025-01-08 22:05:26,088:INFO:Declaring custom model
2025-01-08 22:05:26,089:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:05:26,089:INFO:Cross validation set to False
2025-01-08 22:05:26,089:INFO:Fitting Model
2025-01-08 22:05:26,360:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:26,360:INFO:create_model() successfully completed......................................
2025-01-08 22:05:26,496:INFO:_master_model_container: 26
2025-01-08 22:05:26,496:INFO:_display_container: 5
2025-01-08 22:05:26,497:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:05:26,497:INFO:compare_models() successfully completed......................................
2025-01-08 22:05:35,569:INFO:Initializing plot_model()
2025-01-08 22:05:35,569:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 22:05:35,569:INFO:Checking exceptions
2025-01-08 22:05:35,612:INFO:Preloading libraries
2025-01-08 22:05:35,699:INFO:Copying training dataset
2025-01-08 22:05:35,699:INFO:Plot type: residuals
2025-01-08 22:05:35,954:INFO:Fitting Model
2025-01-08 22:05:35,954:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-08 22:05:36,114:INFO:Scoring test/hold-out set
2025-01-08 22:05:36,944:INFO:Visual Rendered Successfully
2025-01-08 22:05:37,073:INFO:plot_model() successfully completed......................................
2025-01-08 22:05:50,950:INFO:Initializing plot_model()
2025-01-08 22:05:50,950:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-08 22:05:50,950:INFO:Checking exceptions
2025-01-08 22:05:50,994:INFO:Preloading libraries
2025-01-08 22:05:51,083:INFO:Copying training dataset
2025-01-08 22:05:51,083:INFO:Plot type: feature
2025-01-08 22:05:51,084:WARNING:No coef_ found. Trying feature_importances_
2025-01-08 22:05:51,334:INFO:Visual Rendered Successfully
2025-01-08 22:05:51,444:INFO:plot_model() successfully completed......................................
2025-01-08 22:06:34,178:INFO:Initializing finalize_model()
2025-01-08 22:06:34,178:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-08 22:06:34,179:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-08 22:06:34,182:INFO:Initializing create_model()
2025-01-08 22:06:34,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5A748B850>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-08 22:06:34,183:INFO:Checking exceptions
2025-01-08 22:06:34,185:INFO:Importing libraries
2025-01-08 22:06:34,185:INFO:Copying training dataset
2025-01-08 22:06:34,185:INFO:Defining folds
2025-01-08 22:06:34,186:INFO:Declaring metric variables
2025-01-08 22:06:34,186:INFO:Importing untrained model
2025-01-08 22:06:34,186:INFO:Declaring custom model
2025-01-08 22:06:34,187:INFO:Extra Trees Regressor Imported successfully
2025-01-08 22:06:34,188:INFO:Cross validation set to False
2025-01-08 22:06:34,188:INFO:Fitting Model
2025-01-08 22:06:34,557:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:06:34,557:INFO:create_model() successfully completed......................................
2025-01-08 22:06:34,665:INFO:_master_model_container: 26
2025-01-08 22:06:34,665:INFO:_display_container: 5
2025-01-08 22:06:34,674:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:06:34,674:INFO:finalize_model() successfully completed......................................
2025-01-08 22:06:34,797:INFO:Initializing save_model()
2025-01-08 22:06:34,797:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=super95_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-08 22:06:34,797:INFO:Adding model into prep_pipe
2025-01-08 22:06:34,797:WARNING:Only Model saved as it was a pipeline.
2025-01-08 22:06:34,893:INFO:super95_model.pkl saved in current working directory
2025-01-08 22:06:34,901:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-08 22:06:34,901:INFO:save_model() successfully completed......................................
2025-01-12 13:43:51,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:43:51,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:43:51,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:43:51,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:43:54,899:INFO:Initializing load_model()
2025-01-12 13:43:54,900:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 13:43:55,568:INFO:Initializing load_model()
2025-01-12 13:43:55,568:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 13:43:56,002:INFO:Initializing predict_model()
2025-01-12 13:43:56,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7F62ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E262D120>)
2025-01-12 13:43:56,002:INFO:Checking exceptions
2025-01-12 13:43:56,002:INFO:Preloading libraries
2025-01-12 13:43:56,003:INFO:Set up data.
2025-01-12 13:43:56,007:INFO:Set up index.
2025-01-12 13:46:25,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:46:25,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:46:25,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:46:25,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 13:47:53,410:INFO:PyCaret RegressionExperiment
2025-01-12 13:47:53,410:INFO:Logging name: reg-default-name
2025-01-12 13:47:53,410:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-12 13:47:53,410:INFO:version 3.3.2
2025-01-12 13:47:53,410:INFO:Initializing setup()
2025-01-12 13:47:53,410:INFO:self.USI: 98a2
2025-01-12 13:47:53,410:INFO:self._variable_keys: {'seed', 'log_plots_param', 'USI', 'memory', 'gpu_n_jobs_param', 'idx', 'exp_id', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', '_ml_usecase', 'transform_target_param', 'y_train', 'y_test', 'pipeline', 'X_test', 'X_train', 'n_jobs_param', 'target_param', 'exp_name_log', 'X', 'fold_generator', 'y', 'data', 'gpu_param', '_available_plots'}
2025-01-12 13:47:53,411:INFO:Checking environment
2025-01-12 13:47:53,411:INFO:python_version: 3.11.11
2025-01-12 13:47:53,411:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-12 13:47:53,411:INFO:machine: AMD64
2025-01-12 13:47:53,411:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-12 13:47:53,412:INFO:Memory: svmem(total=6439919616, available=835858432, percent=87.0, used=5604061184, free=835858432)
2025-01-12 13:47:53,412:INFO:Physical Core: 4
2025-01-12 13:47:53,412:INFO:Logical Core: 4
2025-01-12 13:47:53,412:INFO:Checking libraries
2025-01-12 13:47:53,412:INFO:System:
2025-01-12 13:47:53,413:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-12 13:47:53,413:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-12 13:47:53,413:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-12 13:47:53,413:INFO:PyCaret required dependencies:
2025-01-12 13:47:53,577:INFO:                 pip: 24.2
2025-01-12 13:47:53,577:INFO:          setuptools: 75.1.0
2025-01-12 13:47:53,577:INFO:             pycaret: 3.3.2
2025-01-12 13:47:53,578:INFO:             IPython: 8.30.0
2025-01-12 13:47:53,578:INFO:          ipywidgets: 8.1.5
2025-01-12 13:47:53,578:INFO:                tqdm: 4.67.1
2025-01-12 13:47:53,578:INFO:               numpy: 1.26.4
2025-01-12 13:47:53,578:INFO:              pandas: 2.1.4
2025-01-12 13:47:53,578:INFO:              jinja2: 3.1.4
2025-01-12 13:47:53,578:INFO:               scipy: 1.11.4
2025-01-12 13:47:53,578:INFO:              joblib: 1.3.2
2025-01-12 13:47:53,578:INFO:             sklearn: 1.4.2
2025-01-12 13:47:53,578:INFO:                pyod: 2.0.3
2025-01-12 13:47:53,578:INFO:            imblearn: 0.13.0
2025-01-12 13:47:53,578:INFO:   category_encoders: 2.7.0
2025-01-12 13:47:53,579:INFO:            lightgbm: 4.5.0
2025-01-12 13:47:53,579:INFO:               numba: 0.60.0
2025-01-12 13:47:53,579:INFO:            requests: 2.32.3
2025-01-12 13:47:53,579:INFO:          matplotlib: 3.7.5
2025-01-12 13:47:53,579:INFO:          scikitplot: 0.3.7
2025-01-12 13:47:53,579:INFO:         yellowbrick: 1.5
2025-01-12 13:47:53,579:INFO:              plotly: 5.24.1
2025-01-12 13:47:53,579:INFO:    plotly-resampler: Not installed
2025-01-12 13:47:53,579:INFO:             kaleido: 0.2.1
2025-01-12 13:47:53,579:INFO:           schemdraw: 0.15
2025-01-12 13:47:53,579:INFO:         statsmodels: 0.14.4
2025-01-12 13:47:53,579:INFO:              sktime: 0.26.0
2025-01-12 13:47:53,579:INFO:               tbats: 1.1.3
2025-01-12 13:47:53,580:INFO:            pmdarima: 2.0.4
2025-01-12 13:47:53,580:INFO:              psutil: 5.9.0
2025-01-12 13:47:53,580:INFO:          markupsafe: 2.1.3
2025-01-12 13:47:53,580:INFO:             pickle5: Not installed
2025-01-12 13:47:53,580:INFO:         cloudpickle: 3.1.0
2025-01-12 13:47:53,580:INFO:         deprecation: 2.1.0
2025-01-12 13:47:53,580:INFO:              xxhash: 3.5.0
2025-01-12 13:47:53,580:INFO:           wurlitzer: Not installed
2025-01-12 13:47:53,580:INFO:PyCaret optional dependencies:
2025-01-12 13:47:53,604:INFO:                shap: Not installed
2025-01-12 13:47:53,604:INFO:           interpret: Not installed
2025-01-12 13:47:53,604:INFO:                umap: Not installed
2025-01-12 13:47:53,604:INFO:     ydata_profiling: Not installed
2025-01-12 13:47:53,604:INFO:  explainerdashboard: Not installed
2025-01-12 13:47:53,604:INFO:             autoviz: Not installed
2025-01-12 13:47:53,604:INFO:           fairlearn: Not installed
2025-01-12 13:47:53,604:INFO:          deepchecks: Not installed
2025-01-12 13:47:53,604:INFO:             xgboost: Not installed
2025-01-12 13:47:53,604:INFO:            catboost: Not installed
2025-01-12 13:47:53,604:INFO:              kmodes: Not installed
2025-01-12 13:47:53,604:INFO:             mlxtend: Not installed
2025-01-12 13:47:53,605:INFO:       statsforecast: Not installed
2025-01-12 13:47:53,605:INFO:        tune_sklearn: Not installed
2025-01-12 13:47:53,605:INFO:                 ray: Not installed
2025-01-12 13:47:53,605:INFO:            hyperopt: Not installed
2025-01-12 13:47:53,605:INFO:              optuna: Not installed
2025-01-12 13:47:53,605:INFO:               skopt: Not installed
2025-01-12 13:47:53,605:INFO:              mlflow: Not installed
2025-01-12 13:47:53,605:INFO:              gradio: Not installed
2025-01-12 13:47:53,605:INFO:             fastapi: Not installed
2025-01-12 13:47:53,605:INFO:             uvicorn: Not installed
2025-01-12 13:47:53,605:INFO:              m2cgen: Not installed
2025-01-12 13:47:53,605:INFO:           evidently: Not installed
2025-01-12 13:47:53,606:INFO:               fugue: Not installed
2025-01-12 13:47:53,606:INFO:           streamlit: 1.40.1
2025-01-12 13:47:53,606:INFO:             prophet: Not installed
2025-01-12 13:47:53,606:INFO:None
2025-01-12 13:47:53,606:INFO:Set up data.
2025-01-12 13:47:53,616:INFO:Set up folding strategy.
2025-01-12 13:47:53,616:INFO:Set up train/test split.
2025-01-12 13:47:53,624:INFO:Set up index.
2025-01-12 13:47:53,625:INFO:Assigning column types.
2025-01-12 13:47:53,631:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-12 13:47:53,631:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,642:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,652:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:53,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:53,884:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,894:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 13:47:53,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,135:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-12 13:47:54,146:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,157:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,287:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,400:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:54,747:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-12 13:47:54,769:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:54,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,038:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,279:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-12 13:47:55,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,686:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 13:47:55,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:55,788:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-12 13:47:55,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:56,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 13:47:56,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,291:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-12 13:47:56,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:56,802:INFO:Preparing preprocessing pipeline...
2025-01-12 13:47:56,802:INFO:Set up simple imputation.
2025-01-12 13:47:56,803:INFO:Set up column name cleaning.
2025-01-12 13:47:56,948:INFO:Finished creating preprocessing pipeline.
2025-01-12 13:47:56,957:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-12 13:47:56,957:INFO:Creating final display dataframe.
2025-01-12 13:47:57,178:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              98a2
2025-01-12 13:47:57,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:57,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:57,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:57,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 13:47:57,699:INFO:setup() successfully completed in 4.3s...............
2025-01-12 13:49:22,009:INFO:Initializing compare_models()
2025-01-12 13:49:22,010:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 13:49:22,010:INFO:Checking exceptions
2025-01-12 13:49:22,013:INFO:Preparing display monitor
2025-01-12 13:49:22,049:INFO:Initializing Linear Regression
2025-01-12 13:49:22,049:INFO:Total runtime is 0.0 minutes
2025-01-12 13:49:22,059:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:22,063:INFO:Initializing create_model()
2025-01-12 13:49:22,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:22,063:INFO:Checking exceptions
2025-01-12 13:49:22,063:INFO:Importing libraries
2025-01-12 13:49:22,063:INFO:Copying training dataset
2025-01-12 13:49:22,072:INFO:Defining folds
2025-01-12 13:49:22,072:INFO:Declaring metric variables
2025-01-12 13:49:22,076:INFO:Importing untrained model
2025-01-12 13:49:22,082:INFO:Linear Regression Imported successfully
2025-01-12 13:49:22,092:INFO:Starting cross validation
2025-01-12 13:49:22,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:28,937:INFO:Calculating mean and std
2025-01-12 13:49:28,939:INFO:Creating metrics dataframe
2025-01-12 13:49:28,942:INFO:Uploading results into container
2025-01-12 13:49:28,943:INFO:Uploading model into container now
2025-01-12 13:49:28,943:INFO:_master_model_container: 1
2025-01-12 13:49:28,944:INFO:_display_container: 2
2025-01-12 13:49:28,944:INFO:LinearRegression(n_jobs=-1)
2025-01-12 13:49:28,944:INFO:create_model() successfully completed......................................
2025-01-12 13:49:29,052:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:29,053:INFO:Creating metrics dataframe
2025-01-12 13:49:29,064:INFO:Initializing Lasso Regression
2025-01-12 13:49:29,064:INFO:Total runtime is 0.11691084702809652 minutes
2025-01-12 13:49:29,069:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:29,069:INFO:Initializing create_model()
2025-01-12 13:49:29,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:29,069:INFO:Checking exceptions
2025-01-12 13:49:29,069:INFO:Importing libraries
2025-01-12 13:49:29,070:INFO:Copying training dataset
2025-01-12 13:49:29,077:INFO:Defining folds
2025-01-12 13:49:29,078:INFO:Declaring metric variables
2025-01-12 13:49:29,082:INFO:Importing untrained model
2025-01-12 13:49:29,089:INFO:Lasso Regression Imported successfully
2025-01-12 13:49:29,099:INFO:Starting cross validation
2025-01-12 13:49:29,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:29,227:INFO:Calculating mean and std
2025-01-12 13:49:29,229:INFO:Creating metrics dataframe
2025-01-12 13:49:29,231:INFO:Uploading results into container
2025-01-12 13:49:29,231:INFO:Uploading model into container now
2025-01-12 13:49:29,232:INFO:_master_model_container: 2
2025-01-12 13:49:29,232:INFO:_display_container: 2
2025-01-12 13:49:29,232:INFO:Lasso(random_state=123)
2025-01-12 13:49:29,232:INFO:create_model() successfully completed......................................
2025-01-12 13:49:29,326:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:29,326:INFO:Creating metrics dataframe
2025-01-12 13:49:29,338:INFO:Initializing Ridge Regression
2025-01-12 13:49:29,338:INFO:Total runtime is 0.12149105469385783 minutes
2025-01-12 13:49:29,342:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:29,342:INFO:Initializing create_model()
2025-01-12 13:49:29,342:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:29,343:INFO:Checking exceptions
2025-01-12 13:49:29,343:INFO:Importing libraries
2025-01-12 13:49:29,343:INFO:Copying training dataset
2025-01-12 13:49:29,350:INFO:Defining folds
2025-01-12 13:49:29,351:INFO:Declaring metric variables
2025-01-12 13:49:29,357:INFO:Importing untrained model
2025-01-12 13:49:29,363:INFO:Ridge Regression Imported successfully
2025-01-12 13:49:29,372:INFO:Starting cross validation
2025-01-12 13:49:29,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:29,504:INFO:Calculating mean and std
2025-01-12 13:49:29,505:INFO:Creating metrics dataframe
2025-01-12 13:49:29,508:INFO:Uploading results into container
2025-01-12 13:49:29,508:INFO:Uploading model into container now
2025-01-12 13:49:29,509:INFO:_master_model_container: 3
2025-01-12 13:49:29,509:INFO:_display_container: 2
2025-01-12 13:49:29,509:INFO:Ridge(random_state=123)
2025-01-12 13:49:29,509:INFO:create_model() successfully completed......................................
2025-01-12 13:49:29,605:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:29,606:INFO:Creating metrics dataframe
2025-01-12 13:49:29,616:INFO:Initializing Elastic Net
2025-01-12 13:49:29,616:INFO:Total runtime is 0.1261214772860209 minutes
2025-01-12 13:49:29,620:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:29,621:INFO:Initializing create_model()
2025-01-12 13:49:29,621:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:29,621:INFO:Checking exceptions
2025-01-12 13:49:29,622:INFO:Importing libraries
2025-01-12 13:49:29,622:INFO:Copying training dataset
2025-01-12 13:49:29,629:INFO:Defining folds
2025-01-12 13:49:29,629:INFO:Declaring metric variables
2025-01-12 13:49:29,635:INFO:Importing untrained model
2025-01-12 13:49:29,640:INFO:Elastic Net Imported successfully
2025-01-12 13:49:29,648:INFO:Starting cross validation
2025-01-12 13:49:29,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:29,774:INFO:Calculating mean and std
2025-01-12 13:49:29,776:INFO:Creating metrics dataframe
2025-01-12 13:49:29,779:INFO:Uploading results into container
2025-01-12 13:49:29,779:INFO:Uploading model into container now
2025-01-12 13:49:29,780:INFO:_master_model_container: 4
2025-01-12 13:49:29,780:INFO:_display_container: 2
2025-01-12 13:49:29,780:INFO:ElasticNet(random_state=123)
2025-01-12 13:49:29,780:INFO:create_model() successfully completed......................................
2025-01-12 13:49:29,875:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:29,876:INFO:Creating metrics dataframe
2025-01-12 13:49:29,889:INFO:Initializing Least Angle Regression
2025-01-12 13:49:29,889:INFO:Total runtime is 0.1306682268778483 minutes
2025-01-12 13:49:29,894:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:29,895:INFO:Initializing create_model()
2025-01-12 13:49:29,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:29,895:INFO:Checking exceptions
2025-01-12 13:49:29,895:INFO:Importing libraries
2025-01-12 13:49:29,895:INFO:Copying training dataset
2025-01-12 13:49:29,905:INFO:Defining folds
2025-01-12 13:49:29,905:INFO:Declaring metric variables
2025-01-12 13:49:29,910:INFO:Importing untrained model
2025-01-12 13:49:29,915:INFO:Least Angle Regression Imported successfully
2025-01-12 13:49:29,939:INFO:Starting cross validation
2025-01-12 13:49:29,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:30,064:INFO:Calculating mean and std
2025-01-12 13:49:30,065:INFO:Creating metrics dataframe
2025-01-12 13:49:30,069:INFO:Uploading results into container
2025-01-12 13:49:30,070:INFO:Uploading model into container now
2025-01-12 13:49:30,070:INFO:_master_model_container: 5
2025-01-12 13:49:30,070:INFO:_display_container: 2
2025-01-12 13:49:30,071:INFO:Lars(random_state=123)
2025-01-12 13:49:30,071:INFO:create_model() successfully completed......................................
2025-01-12 13:49:30,166:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:30,166:INFO:Creating metrics dataframe
2025-01-12 13:49:30,178:INFO:Initializing Lasso Least Angle Regression
2025-01-12 13:49:30,178:INFO:Total runtime is 0.1354822595914205 minutes
2025-01-12 13:49:30,182:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:30,183:INFO:Initializing create_model()
2025-01-12 13:49:30,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:30,183:INFO:Checking exceptions
2025-01-12 13:49:30,183:INFO:Importing libraries
2025-01-12 13:49:30,183:INFO:Copying training dataset
2025-01-12 13:49:30,192:INFO:Defining folds
2025-01-12 13:49:30,192:INFO:Declaring metric variables
2025-01-12 13:49:30,198:INFO:Importing untrained model
2025-01-12 13:49:30,204:INFO:Lasso Least Angle Regression Imported successfully
2025-01-12 13:49:30,214:INFO:Starting cross validation
2025-01-12 13:49:30,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:30,338:INFO:Calculating mean and std
2025-01-12 13:49:30,339:INFO:Creating metrics dataframe
2025-01-12 13:49:30,342:INFO:Uploading results into container
2025-01-12 13:49:30,343:INFO:Uploading model into container now
2025-01-12 13:49:30,343:INFO:_master_model_container: 6
2025-01-12 13:49:30,343:INFO:_display_container: 2
2025-01-12 13:49:30,344:INFO:LassoLars(random_state=123)
2025-01-12 13:49:30,344:INFO:create_model() successfully completed......................................
2025-01-12 13:49:30,440:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:30,440:INFO:Creating metrics dataframe
2025-01-12 13:49:30,451:INFO:Initializing Orthogonal Matching Pursuit
2025-01-12 13:49:30,451:INFO:Total runtime is 0.14002967278162637 minutes
2025-01-12 13:49:30,456:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:30,456:INFO:Initializing create_model()
2025-01-12 13:49:30,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:30,456:INFO:Checking exceptions
2025-01-12 13:49:30,457:INFO:Importing libraries
2025-01-12 13:49:30,457:INFO:Copying training dataset
2025-01-12 13:49:30,464:INFO:Defining folds
2025-01-12 13:49:30,464:INFO:Declaring metric variables
2025-01-12 13:49:30,469:INFO:Importing untrained model
2025-01-12 13:49:30,475:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-12 13:49:30,484:INFO:Starting cross validation
2025-01-12 13:49:30,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:30,608:INFO:Calculating mean and std
2025-01-12 13:49:30,609:INFO:Creating metrics dataframe
2025-01-12 13:49:30,612:INFO:Uploading results into container
2025-01-12 13:49:30,612:INFO:Uploading model into container now
2025-01-12 13:49:30,613:INFO:_master_model_container: 7
2025-01-12 13:49:30,613:INFO:_display_container: 2
2025-01-12 13:49:30,613:INFO:OrthogonalMatchingPursuit()
2025-01-12 13:49:30,613:INFO:create_model() successfully completed......................................
2025-01-12 13:49:30,710:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:30,710:INFO:Creating metrics dataframe
2025-01-12 13:49:30,722:INFO:Initializing Bayesian Ridge
2025-01-12 13:49:30,722:INFO:Total runtime is 0.14454325834910073 minutes
2025-01-12 13:49:30,726:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:30,726:INFO:Initializing create_model()
2025-01-12 13:49:30,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:30,727:INFO:Checking exceptions
2025-01-12 13:49:30,727:INFO:Importing libraries
2025-01-12 13:49:30,727:INFO:Copying training dataset
2025-01-12 13:49:30,734:INFO:Defining folds
2025-01-12 13:49:30,734:INFO:Declaring metric variables
2025-01-12 13:49:30,740:INFO:Importing untrained model
2025-01-12 13:49:30,746:INFO:Bayesian Ridge Imported successfully
2025-01-12 13:49:30,756:INFO:Starting cross validation
2025-01-12 13:49:30,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:30,883:INFO:Calculating mean and std
2025-01-12 13:49:30,883:INFO:Creating metrics dataframe
2025-01-12 13:49:30,887:INFO:Uploading results into container
2025-01-12 13:49:30,888:INFO:Uploading model into container now
2025-01-12 13:49:30,889:INFO:_master_model_container: 8
2025-01-12 13:49:30,889:INFO:_display_container: 2
2025-01-12 13:49:30,889:INFO:BayesianRidge()
2025-01-12 13:49:30,889:INFO:create_model() successfully completed......................................
2025-01-12 13:49:30,984:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:30,984:INFO:Creating metrics dataframe
2025-01-12 13:49:30,996:INFO:Initializing Passive Aggressive Regressor
2025-01-12 13:49:30,996:INFO:Total runtime is 0.14912410577138263 minutes
2025-01-12 13:49:31,000:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:31,001:INFO:Initializing create_model()
2025-01-12 13:49:31,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:31,001:INFO:Checking exceptions
2025-01-12 13:49:31,001:INFO:Importing libraries
2025-01-12 13:49:31,002:INFO:Copying training dataset
2025-01-12 13:49:31,009:INFO:Defining folds
2025-01-12 13:49:31,009:INFO:Declaring metric variables
2025-01-12 13:49:31,014:INFO:Importing untrained model
2025-01-12 13:49:31,019:INFO:Passive Aggressive Regressor Imported successfully
2025-01-12 13:49:31,042:INFO:Starting cross validation
2025-01-12 13:49:31,045:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:31,272:INFO:Calculating mean and std
2025-01-12 13:49:31,274:INFO:Creating metrics dataframe
2025-01-12 13:49:31,277:INFO:Uploading results into container
2025-01-12 13:49:31,279:INFO:Uploading model into container now
2025-01-12 13:49:31,279:INFO:_master_model_container: 9
2025-01-12 13:49:31,279:INFO:_display_container: 2
2025-01-12 13:49:31,280:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-12 13:49:31,280:INFO:create_model() successfully completed......................................
2025-01-12 13:49:31,376:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:31,376:INFO:Creating metrics dataframe
2025-01-12 13:49:31,388:INFO:Initializing Huber Regressor
2025-01-12 13:49:31,388:INFO:Total runtime is 0.15565259853998817 minutes
2025-01-12 13:49:31,393:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:31,393:INFO:Initializing create_model()
2025-01-12 13:49:31,393:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:31,393:INFO:Checking exceptions
2025-01-12 13:49:31,393:INFO:Importing libraries
2025-01-12 13:49:31,394:INFO:Copying training dataset
2025-01-12 13:49:31,401:INFO:Defining folds
2025-01-12 13:49:31,401:INFO:Declaring metric variables
2025-01-12 13:49:31,406:INFO:Importing untrained model
2025-01-12 13:49:31,412:INFO:Huber Regressor Imported successfully
2025-01-12 13:49:31,423:INFO:Starting cross validation
2025-01-12 13:49:31,425:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:31,657:INFO:Calculating mean and std
2025-01-12 13:49:31,658:INFO:Creating metrics dataframe
2025-01-12 13:49:31,661:INFO:Uploading results into container
2025-01-12 13:49:31,661:INFO:Uploading model into container now
2025-01-12 13:49:31,662:INFO:_master_model_container: 10
2025-01-12 13:49:31,662:INFO:_display_container: 2
2025-01-12 13:49:31,662:INFO:HuberRegressor()
2025-01-12 13:49:31,663:INFO:create_model() successfully completed......................................
2025-01-12 13:49:31,760:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:31,760:INFO:Creating metrics dataframe
2025-01-12 13:49:31,774:INFO:Initializing K Neighbors Regressor
2025-01-12 13:49:31,774:INFO:Total runtime is 0.1620819012324015 minutes
2025-01-12 13:49:31,778:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:31,779:INFO:Initializing create_model()
2025-01-12 13:49:31,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:31,779:INFO:Checking exceptions
2025-01-12 13:49:31,779:INFO:Importing libraries
2025-01-12 13:49:31,779:INFO:Copying training dataset
2025-01-12 13:49:31,787:INFO:Defining folds
2025-01-12 13:49:31,787:INFO:Declaring metric variables
2025-01-12 13:49:31,794:INFO:Importing untrained model
2025-01-12 13:49:31,798:INFO:K Neighbors Regressor Imported successfully
2025-01-12 13:49:31,808:INFO:Starting cross validation
2025-01-12 13:49:31,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:31,988:INFO:Calculating mean and std
2025-01-12 13:49:31,989:INFO:Creating metrics dataframe
2025-01-12 13:49:31,992:INFO:Uploading results into container
2025-01-12 13:49:31,993:INFO:Uploading model into container now
2025-01-12 13:49:31,993:INFO:_master_model_container: 11
2025-01-12 13:49:31,994:INFO:_display_container: 2
2025-01-12 13:49:31,994:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-12 13:49:31,995:INFO:create_model() successfully completed......................................
2025-01-12 13:49:32,091:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:32,091:INFO:Creating metrics dataframe
2025-01-12 13:49:32,104:INFO:Initializing Decision Tree Regressor
2025-01-12 13:49:32,105:INFO:Total runtime is 0.16760079065958655 minutes
2025-01-12 13:49:32,109:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:32,110:INFO:Initializing create_model()
2025-01-12 13:49:32,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:32,110:INFO:Checking exceptions
2025-01-12 13:49:32,110:INFO:Importing libraries
2025-01-12 13:49:32,110:INFO:Copying training dataset
2025-01-12 13:49:32,117:INFO:Defining folds
2025-01-12 13:49:32,117:INFO:Declaring metric variables
2025-01-12 13:49:32,124:INFO:Importing untrained model
2025-01-12 13:49:32,129:INFO:Decision Tree Regressor Imported successfully
2025-01-12 13:49:32,142:INFO:Starting cross validation
2025-01-12 13:49:32,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:32,316:INFO:Calculating mean and std
2025-01-12 13:49:32,317:INFO:Creating metrics dataframe
2025-01-12 13:49:32,320:INFO:Uploading results into container
2025-01-12 13:49:32,321:INFO:Uploading model into container now
2025-01-12 13:49:32,321:INFO:_master_model_container: 12
2025-01-12 13:49:32,321:INFO:_display_container: 2
2025-01-12 13:49:32,322:INFO:DecisionTreeRegressor(random_state=123)
2025-01-12 13:49:32,322:INFO:create_model() successfully completed......................................
2025-01-12 13:49:32,418:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:32,418:INFO:Creating metrics dataframe
2025-01-12 13:49:32,432:INFO:Initializing Random Forest Regressor
2025-01-12 13:49:32,432:INFO:Total runtime is 0.1730465451876322 minutes
2025-01-12 13:49:32,437:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:32,438:INFO:Initializing create_model()
2025-01-12 13:49:32,438:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:32,438:INFO:Checking exceptions
2025-01-12 13:49:32,438:INFO:Importing libraries
2025-01-12 13:49:32,438:INFO:Copying training dataset
2025-01-12 13:49:32,445:INFO:Defining folds
2025-01-12 13:49:32,445:INFO:Declaring metric variables
2025-01-12 13:49:32,450:INFO:Importing untrained model
2025-01-12 13:49:32,456:INFO:Random Forest Regressor Imported successfully
2025-01-12 13:49:32,465:INFO:Starting cross validation
2025-01-12 13:49:32,466:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:36,736:INFO:Calculating mean and std
2025-01-12 13:49:36,738:INFO:Creating metrics dataframe
2025-01-12 13:49:36,741:INFO:Uploading results into container
2025-01-12 13:49:36,742:INFO:Uploading model into container now
2025-01-12 13:49:36,743:INFO:_master_model_container: 13
2025-01-12 13:49:36,743:INFO:_display_container: 2
2025-01-12 13:49:36,744:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:49:36,744:INFO:create_model() successfully completed......................................
2025-01-12 13:49:36,847:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:36,847:INFO:Creating metrics dataframe
2025-01-12 13:49:36,862:INFO:Initializing Extra Trees Regressor
2025-01-12 13:49:36,862:INFO:Total runtime is 0.24687972863515215 minutes
2025-01-12 13:49:36,866:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:36,866:INFO:Initializing create_model()
2025-01-12 13:49:36,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:36,866:INFO:Checking exceptions
2025-01-12 13:49:36,867:INFO:Importing libraries
2025-01-12 13:49:36,867:INFO:Copying training dataset
2025-01-12 13:49:36,874:INFO:Defining folds
2025-01-12 13:49:36,874:INFO:Declaring metric variables
2025-01-12 13:49:36,881:INFO:Importing untrained model
2025-01-12 13:49:36,885:INFO:Extra Trees Regressor Imported successfully
2025-01-12 13:49:36,895:INFO:Starting cross validation
2025-01-12 13:49:36,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:39,259:INFO:Calculating mean and std
2025-01-12 13:49:39,261:INFO:Creating metrics dataframe
2025-01-12 13:49:39,263:INFO:Uploading results into container
2025-01-12 13:49:39,264:INFO:Uploading model into container now
2025-01-12 13:49:39,264:INFO:_master_model_container: 14
2025-01-12 13:49:39,264:INFO:_display_container: 2
2025-01-12 13:49:39,265:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:49:39,265:INFO:create_model() successfully completed......................................
2025-01-12 13:49:39,366:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:39,366:INFO:Creating metrics dataframe
2025-01-12 13:49:39,382:INFO:Initializing AdaBoost Regressor
2025-01-12 13:49:39,382:INFO:Total runtime is 0.2888880650202433 minutes
2025-01-12 13:49:39,387:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:39,388:INFO:Initializing create_model()
2025-01-12 13:49:39,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:39,388:INFO:Checking exceptions
2025-01-12 13:49:39,388:INFO:Importing libraries
2025-01-12 13:49:39,388:INFO:Copying training dataset
2025-01-12 13:49:39,397:INFO:Defining folds
2025-01-12 13:49:39,397:INFO:Declaring metric variables
2025-01-12 13:49:39,403:INFO:Importing untrained model
2025-01-12 13:49:39,410:INFO:AdaBoost Regressor Imported successfully
2025-01-12 13:49:39,420:INFO:Starting cross validation
2025-01-12 13:49:39,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:41,761:INFO:Calculating mean and std
2025-01-12 13:49:41,763:INFO:Creating metrics dataframe
2025-01-12 13:49:41,765:INFO:Uploading results into container
2025-01-12 13:49:41,766:INFO:Uploading model into container now
2025-01-12 13:49:41,766:INFO:_master_model_container: 15
2025-01-12 13:49:41,766:INFO:_display_container: 2
2025-01-12 13:49:41,766:INFO:AdaBoostRegressor(random_state=123)
2025-01-12 13:49:41,767:INFO:create_model() successfully completed......................................
2025-01-12 13:49:41,866:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:41,866:INFO:Creating metrics dataframe
2025-01-12 13:49:41,881:INFO:Initializing Gradient Boosting Regressor
2025-01-12 13:49:41,881:INFO:Total runtime is 0.3305286884307861 minutes
2025-01-12 13:49:41,885:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:41,886:INFO:Initializing create_model()
2025-01-12 13:49:41,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:41,886:INFO:Checking exceptions
2025-01-12 13:49:41,886:INFO:Importing libraries
2025-01-12 13:49:41,887:INFO:Copying training dataset
2025-01-12 13:49:41,894:INFO:Defining folds
2025-01-12 13:49:41,894:INFO:Declaring metric variables
2025-01-12 13:49:41,901:INFO:Importing untrained model
2025-01-12 13:49:41,907:INFO:Gradient Boosting Regressor Imported successfully
2025-01-12 13:49:41,921:INFO:Starting cross validation
2025-01-12 13:49:41,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:43,539:INFO:Calculating mean and std
2025-01-12 13:49:43,540:INFO:Creating metrics dataframe
2025-01-12 13:49:43,543:INFO:Uploading results into container
2025-01-12 13:49:43,545:INFO:Uploading model into container now
2025-01-12 13:49:43,545:INFO:_master_model_container: 16
2025-01-12 13:49:43,546:INFO:_display_container: 2
2025-01-12 13:49:43,547:INFO:GradientBoostingRegressor(random_state=123)
2025-01-12 13:49:43,547:INFO:create_model() successfully completed......................................
2025-01-12 13:49:43,643:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:43,644:INFO:Creating metrics dataframe
2025-01-12 13:49:43,659:INFO:Initializing Light Gradient Boosting Machine
2025-01-12 13:49:43,659:INFO:Total runtime is 0.36016014417012526 minutes
2025-01-12 13:49:43,665:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:43,665:INFO:Initializing create_model()
2025-01-12 13:49:43,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:43,665:INFO:Checking exceptions
2025-01-12 13:49:43,665:INFO:Importing libraries
2025-01-12 13:49:43,666:INFO:Copying training dataset
2025-01-12 13:49:43,673:INFO:Defining folds
2025-01-12 13:49:43,673:INFO:Declaring metric variables
2025-01-12 13:49:43,679:INFO:Importing untrained model
2025-01-12 13:49:43,685:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 13:49:43,695:INFO:Starting cross validation
2025-01-12 13:49:43,697:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:44,452:INFO:Calculating mean and std
2025-01-12 13:49:44,454:INFO:Creating metrics dataframe
2025-01-12 13:49:44,457:INFO:Uploading results into container
2025-01-12 13:49:44,457:INFO:Uploading model into container now
2025-01-12 13:49:44,458:INFO:_master_model_container: 17
2025-01-12 13:49:44,458:INFO:_display_container: 2
2025-01-12 13:49:44,459:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:49:44,459:INFO:create_model() successfully completed......................................
2025-01-12 13:49:44,555:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:44,556:INFO:Creating metrics dataframe
2025-01-12 13:49:44,572:INFO:Initializing Dummy Regressor
2025-01-12 13:49:44,572:INFO:Total runtime is 0.3753839453061421 minutes
2025-01-12 13:49:44,576:INFO:SubProcess create_model() called ==================================
2025-01-12 13:49:44,577:INFO:Initializing create_model()
2025-01-12 13:49:44,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DC58578A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:44,577:INFO:Checking exceptions
2025-01-12 13:49:44,577:INFO:Importing libraries
2025-01-12 13:49:44,577:INFO:Copying training dataset
2025-01-12 13:49:44,585:INFO:Defining folds
2025-01-12 13:49:44,585:INFO:Declaring metric variables
2025-01-12 13:49:44,591:INFO:Importing untrained model
2025-01-12 13:49:44,596:INFO:Dummy Regressor Imported successfully
2025-01-12 13:49:44,608:INFO:Starting cross validation
2025-01-12 13:49:44,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 13:49:44,723:INFO:Calculating mean and std
2025-01-12 13:49:44,724:INFO:Creating metrics dataframe
2025-01-12 13:49:44,727:INFO:Uploading results into container
2025-01-12 13:49:44,728:INFO:Uploading model into container now
2025-01-12 13:49:44,729:INFO:_master_model_container: 18
2025-01-12 13:49:44,729:INFO:_display_container: 2
2025-01-12 13:49:44,729:INFO:DummyRegressor()
2025-01-12 13:49:44,729:INFO:create_model() successfully completed......................................
2025-01-12 13:49:44,828:INFO:SubProcess create_model() end ==================================
2025-01-12 13:49:44,828:INFO:Creating metrics dataframe
2025-01-12 13:49:44,849:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 13:49:44,860:INFO:Initializing create_model()
2025-01-12 13:49:44,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:49:44,861:INFO:Checking exceptions
2025-01-12 13:49:44,863:INFO:Importing libraries
2025-01-12 13:49:44,863:INFO:Copying training dataset
2025-01-12 13:49:44,870:INFO:Defining folds
2025-01-12 13:49:44,870:INFO:Declaring metric variables
2025-01-12 13:49:44,870:INFO:Importing untrained model
2025-01-12 13:49:44,870:INFO:Declaring custom model
2025-01-12 13:49:44,871:INFO:Extra Trees Regressor Imported successfully
2025-01-12 13:49:44,872:INFO:Cross validation set to False
2025-01-12 13:49:44,872:INFO:Fitting Model
2025-01-12 13:49:45,163:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:49:45,163:INFO:create_model() successfully completed......................................
2025-01-12 13:49:45,304:INFO:_master_model_container: 18
2025-01-12 13:49:45,304:INFO:_display_container: 2
2025-01-12 13:49:45,305:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:49:45,305:INFO:compare_models() successfully completed......................................
2025-01-12 13:51:43,247:INFO:Initializing finalize_model()
2025-01-12 13:51:43,247:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 13:51:43,248:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 13:51:43,251:INFO:Initializing create_model()
2025-01-12 13:51:43,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 13:51:43,252:INFO:Checking exceptions
2025-01-12 13:51:43,254:INFO:Importing libraries
2025-01-12 13:51:43,254:INFO:Copying training dataset
2025-01-12 13:51:43,254:INFO:Defining folds
2025-01-12 13:51:43,254:INFO:Declaring metric variables
2025-01-12 13:51:43,255:INFO:Importing untrained model
2025-01-12 13:51:43,255:INFO:Declaring custom model
2025-01-12 13:51:43,256:INFO:Extra Trees Regressor Imported successfully
2025-01-12 13:51:43,257:INFO:Cross validation set to False
2025-01-12 13:51:43,257:INFO:Fitting Model
2025-01-12 13:51:43,605:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 13:51:43,605:INFO:create_model() successfully completed......................................
2025-01-12 13:51:43,703:INFO:_master_model_container: 18
2025-01-12 13:51:43,703:INFO:_display_container: 2
2025-01-12 13:51:43,711:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 13:51:43,712:INFO:finalize_model() successfully completed......................................
2025-01-12 13:54:34,514:INFO:Initializing evaluate_model()
2025-01-12 13:54:34,514:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-01-12 13:54:34,540:INFO:Initializing plot_model()
2025-01-12 13:54:34,540:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-01-12 13:54:34,540:INFO:Checking exceptions
2025-01-12 13:54:34,686:INFO:Preloading libraries
2025-01-12 13:54:34,872:INFO:Copying training dataset
2025-01-12 13:54:34,872:INFO:Plot type: pipeline
2025-01-12 13:54:35,645:INFO:Visual Rendered Successfully
2025-01-12 13:54:35,763:INFO:plot_model() successfully completed......................................
2025-01-12 14:03:02,047:INFO:Initializing predict_model()
2025-01-12 14:03:02,047:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002DC58058720>)
2025-01-12 14:03:02,047:INFO:Checking exceptions
2025-01-12 14:03:02,048:INFO:Preloading libraries
2025-01-12 14:03:02,050:INFO:Set up data.
2025-01-12 14:03:02,052:INFO:Set up index.
2025-01-12 14:14:32,223:INFO:Initializing load_model()
2025-01-12 14:14:32,224:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:32,646:INFO:Initializing load_model()
2025-01-12 14:14:32,646:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:43,272:INFO:Initializing load_model()
2025-01-12 14:14:43,273:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:43,453:INFO:Initializing load_model()
2025-01-12 14:14:43,453:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:49,973:INFO:Initializing load_model()
2025-01-12 14:14:49,974:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:50,143:INFO:Initializing load_model()
2025-01-12 14:14:50,143:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:14:50,339:INFO:Initializing predict_model()
2025-01-12 14:14:50,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E26442D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E262D120>)
2025-01-12 14:14:50,339:INFO:Checking exceptions
2025-01-12 14:14:50,339:INFO:Preloading libraries
2025-01-12 14:14:50,340:INFO:Set up data.
2025-01-12 14:14:50,343:INFO:Set up index.
2025-01-12 14:15:10,660:INFO:Initializing load_model()
2025-01-12 14:15:10,660:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:15:10,827:INFO:Initializing load_model()
2025-01-12 14:15:10,827:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:15:11,019:INFO:Initializing predict_model()
2025-01-12 14:15:11,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7EA7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DC804220>)
2025-01-12 14:15:11,020:INFO:Checking exceptions
2025-01-12 14:15:11,020:INFO:Preloading libraries
2025-01-12 14:15:11,020:INFO:Set up data.
2025-01-12 14:15:11,022:INFO:Set up index.
2025-01-12 14:19:07,308:INFO:Initializing load_model()
2025-01-12 14:19:07,308:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:19:07,493:INFO:Initializing load_model()
2025-01-12 14:19:07,493:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:19:07,772:INFO:Initializing predict_model()
2025-01-12 14:19:07,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EDED03D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56F20>)
2025-01-12 14:19:07,773:INFO:Checking exceptions
2025-01-12 14:19:07,773:INFO:Preloading libraries
2025-01-12 14:19:07,773:INFO:Set up data.
2025-01-12 14:19:07,776:INFO:Set up index.
2025-01-12 14:20:24,862:INFO:Initializing load_model()
2025-01-12 14:20:24,862:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:20:25,036:INFO:Initializing load_model()
2025-01-12 14:20:25,036:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:20:25,260:INFO:Initializing predict_model()
2025-01-12 14:20:25,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7E8F310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56700>)
2025-01-12 14:20:25,260:INFO:Checking exceptions
2025-01-12 14:20:25,261:INFO:Preloading libraries
2025-01-12 14:20:25,261:INFO:Set up data.
2025-01-12 14:20:25,265:INFO:Set up index.
2025-01-12 14:27:35,500:INFO:Initializing load_model()
2025-01-12 14:27:35,500:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:27:35,691:INFO:Initializing load_model()
2025-01-12 14:27:35,691:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:27:35,893:INFO:Initializing predict_model()
2025-01-12 14:27:35,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7F71510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF55E40>)
2025-01-12 14:27:35,893:INFO:Checking exceptions
2025-01-12 14:27:35,893:INFO:Preloading libraries
2025-01-12 14:27:35,894:INFO:Set up data.
2025-01-12 14:27:35,896:INFO:Set up index.
2025-01-12 14:28:42,051:INFO:Initializing load_model()
2025-01-12 14:28:42,051:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:28:42,224:INFO:Initializing load_model()
2025-01-12 14:28:42,224:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:28:42,410:INFO:Initializing predict_model()
2025-01-12 14:28:42,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EDF0A990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E07B6AC0>)
2025-01-12 14:28:42,410:INFO:Checking exceptions
2025-01-12 14:28:42,410:INFO:Preloading libraries
2025-01-12 14:28:42,411:INFO:Set up data.
2025-01-12 14:28:42,413:INFO:Set up index.
2025-01-12 14:28:48,784:INFO:Initializing load_model()
2025-01-12 14:28:48,785:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:28:48,954:INFO:Initializing load_model()
2025-01-12 14:28:48,955:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:28:49,136:INFO:Initializing predict_model()
2025-01-12 14:28:49,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EDF2D7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF57880>)
2025-01-12 14:28:49,137:INFO:Checking exceptions
2025-01-12 14:28:49,137:INFO:Preloading libraries
2025-01-12 14:28:49,137:INFO:Set up data.
2025-01-12 14:28:49,139:INFO:Set up index.
2025-01-12 14:28:49,329:INFO:Initializing predict_model()
2025-01-12 14:28:49,329:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160DDF06FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160ECF63CE0>)
2025-01-12 14:28:49,329:INFO:Checking exceptions
2025-01-12 14:28:49,329:INFO:Preloading libraries
2025-01-12 14:28:49,329:INFO:Set up data.
2025-01-12 14:28:49,332:INFO:Set up index.
2025-01-12 14:38:28,181:INFO:Initializing load_model()
2025-01-12 14:38:28,182:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:38:28,571:INFO:Initializing load_model()
2025-01-12 14:38:28,572:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:38:28,963:INFO:Initializing predict_model()
2025-01-12 14:38:28,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EDF4EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56E80>)
2025-01-12 14:38:28,963:INFO:Checking exceptions
2025-01-12 14:38:28,963:INFO:Preloading libraries
2025-01-12 14:38:28,964:INFO:Set up data.
2025-01-12 14:38:28,966:INFO:Set up index.
2025-01-12 14:38:29,160:INFO:Initializing predict_model()
2025-01-12 14:38:29,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E28AAF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160ECF63CE0>)
2025-01-12 14:38:29,161:INFO:Checking exceptions
2025-01-12 14:38:29,161:INFO:Preloading libraries
2025-01-12 14:38:29,161:INFO:Set up data.
2025-01-12 14:38:29,163:INFO:Set up index.
2025-01-12 14:44:50,981:INFO:Initializing load_model()
2025-01-12 14:44:50,982:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:44:51,184:INFO:Initializing load_model()
2025-01-12 14:44:51,184:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:44:51,372:INFO:Initializing predict_model()
2025-01-12 14:44:51,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7EB4710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF568E0>)
2025-01-12 14:44:51,372:INFO:Checking exceptions
2025-01-12 14:44:51,372:INFO:Preloading libraries
2025-01-12 14:44:51,372:INFO:Set up data.
2025-01-12 14:44:51,375:INFO:Set up index.
2025-01-12 14:44:51,566:INFO:Initializing predict_model()
2025-01-12 14:44:51,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EDDFC590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E07A0540>)
2025-01-12 14:44:51,566:INFO:Checking exceptions
2025-01-12 14:44:51,567:INFO:Preloading libraries
2025-01-12 14:44:51,567:INFO:Set up data.
2025-01-12 14:44:51,569:INFO:Set up index.
2025-01-12 14:44:51,765:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:121: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 14:49:54,210:INFO:Initializing load_model()
2025-01-12 14:49:54,210:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:49:54,377:INFO:Initializing load_model()
2025-01-12 14:49:54,377:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:49:54,547:INFO:Initializing predict_model()
2025-01-12 14:49:54,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7EA6290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF231A0>)
2025-01-12 14:49:54,548:INFO:Checking exceptions
2025-01-12 14:49:54,548:INFO:Preloading libraries
2025-01-12 14:49:54,548:INFO:Set up data.
2025-01-12 14:49:54,551:INFO:Set up index.
2025-01-12 14:49:54,744:INFO:Initializing predict_model()
2025-01-12 14:49:54,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E258D890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF231A0>)
2025-01-12 14:49:54,744:INFO:Checking exceptions
2025-01-12 14:49:54,745:INFO:Preloading libraries
2025-01-12 14:49:54,745:INFO:Set up data.
2025-01-12 14:49:54,747:INFO:Set up index.
2025-01-12 14:52:39,439:INFO:Initializing load_model()
2025-01-12 14:52:39,439:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:52:39,578:INFO:Initializing load_model()
2025-01-12 14:52:39,578:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:52:39,743:INFO:Initializing predict_model()
2025-01-12 14:52:39,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD1D7090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF55800>)
2025-01-12 14:52:39,744:INFO:Checking exceptions
2025-01-12 14:52:39,744:INFO:Preloading libraries
2025-01-12 14:52:39,744:INFO:Set up data.
2025-01-12 14:52:39,747:INFO:Set up index.
2025-01-12 14:52:39,934:INFO:Initializing predict_model()
2025-01-12 14:52:39,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160ECCE68D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E291BC40>)
2025-01-12 14:52:39,935:INFO:Checking exceptions
2025-01-12 14:52:39,935:INFO:Preloading libraries
2025-01-12 14:52:39,935:INFO:Set up data.
2025-01-12 14:52:39,937:INFO:Set up index.
2025-01-12 14:55:55,143:INFO:Initializing load_model()
2025-01-12 14:55:55,143:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:55:55,284:INFO:Initializing load_model()
2025-01-12 14:55:55,284:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 14:55:55,460:INFO:Initializing predict_model()
2025-01-12 14:55:55,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD160A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF57E20>)
2025-01-12 14:55:55,461:INFO:Checking exceptions
2025-01-12 14:55:55,461:INFO:Preloading libraries
2025-01-12 14:55:55,461:INFO:Set up data.
2025-01-12 14:55:55,464:INFO:Set up index.
2025-01-12 14:55:55,673:INFO:Initializing predict_model()
2025-01-12 14:55:55,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EAD7C150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160F7E99940>)
2025-01-12 14:55:55,673:INFO:Checking exceptions
2025-01-12 14:55:55,673:INFO:Preloading libraries
2025-01-12 14:55:55,673:INFO:Set up data.
2025-01-12 14:55:55,675:INFO:Set up index.
2025-01-12 15:00:41,141:INFO:Initializing load_model()
2025-01-12 15:00:41,141:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:00:41,330:INFO:Initializing load_model()
2025-01-12 15:00:41,330:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:00:41,512:INFO:Initializing predict_model()
2025-01-12 15:00:41,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7F43D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF57A60>)
2025-01-12 15:00:41,512:INFO:Checking exceptions
2025-01-12 15:00:41,512:INFO:Preloading libraries
2025-01-12 15:00:41,512:INFO:Set up data.
2025-01-12 15:00:41,515:INFO:Set up index.
2025-01-12 15:00:41,695:INFO:Initializing predict_model()
2025-01-12 15:00:41,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E26AE890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E07A0540>)
2025-01-12 15:00:41,695:INFO:Checking exceptions
2025-01-12 15:00:41,695:INFO:Preloading libraries
2025-01-12 15:00:41,695:INFO:Set up data.
2025-01-12 15:00:41,697:INFO:Set up index.
2025-01-12 15:01:18,754:INFO:Initializing load_model()
2025-01-12 15:01:18,755:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:01:18,891:INFO:Initializing load_model()
2025-01-12 15:01:18,891:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:01:19,062:INFO:Initializing predict_model()
2025-01-12 15:01:19,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160ED401110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56B60>)
2025-01-12 15:01:19,062:INFO:Checking exceptions
2025-01-12 15:01:19,062:INFO:Preloading libraries
2025-01-12 15:01:19,062:INFO:Set up data.
2025-01-12 15:01:19,066:INFO:Set up index.
2025-01-12 15:01:19,236:INFO:Initializing predict_model()
2025-01-12 15:01:19,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160ED401110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E291BC40>)
2025-01-12 15:01:19,236:INFO:Checking exceptions
2025-01-12 15:01:19,236:INFO:Preloading libraries
2025-01-12 15:01:19,236:INFO:Set up data.
2025-01-12 15:01:19,238:INFO:Set up index.
2025-01-12 15:01:28,281:INFO:Initializing load_model()
2025-01-12 15:01:28,281:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:01:28,433:INFO:Initializing load_model()
2025-01-12 15:01:28,433:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:01:28,595:INFO:Initializing predict_model()
2025-01-12 15:01:28,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016089FCA450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56E80>)
2025-01-12 15:01:28,596:INFO:Checking exceptions
2025-01-12 15:01:28,596:INFO:Preloading libraries
2025-01-12 15:01:28,596:INFO:Set up data.
2025-01-12 15:01:28,598:INFO:Set up index.
2025-01-12 15:01:28,781:INFO:Initializing predict_model()
2025-01-12 15:01:28,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E24CEF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF231A0>)
2025-01-12 15:01:28,781:INFO:Checking exceptions
2025-01-12 15:01:28,781:INFO:Preloading libraries
2025-01-12 15:01:28,782:INFO:Set up data.
2025-01-12 15:01:28,784:INFO:Set up index.
2025-01-12 15:02:34,418:INFO:Initializing load_model()
2025-01-12 15:02:34,419:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:02:34,556:INFO:Initializing load_model()
2025-01-12 15:02:34,556:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:02:34,723:INFO:Initializing predict_model()
2025-01-12 15:02:34,723:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001608A007910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E262CFE0>)
2025-01-12 15:02:34,724:INFO:Checking exceptions
2025-01-12 15:02:34,724:INFO:Preloading libraries
2025-01-12 15:02:34,724:INFO:Set up data.
2025-01-12 15:02:34,726:INFO:Set up index.
2025-01-12 15:02:34,920:INFO:Initializing predict_model()
2025-01-12 15:02:34,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160EAA4FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160ECF63CE0>)
2025-01-12 15:02:34,920:INFO:Checking exceptions
2025-01-12 15:02:34,921:INFO:Preloading libraries
2025-01-12 15:02:34,921:INFO:Set up data.
2025-01-12 15:02:34,923:INFO:Set up index.
2025-01-12 15:04:24,890:INFO:Initializing load_model()
2025-01-12 15:04:24,890:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:04:25,057:INFO:Initializing load_model()
2025-01-12 15:04:25,057:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:04:25,230:INFO:Initializing predict_model()
2025-01-12 15:04:25,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016089F9A510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56DE0>)
2025-01-12 15:04:25,231:INFO:Checking exceptions
2025-01-12 15:04:25,231:INFO:Preloading libraries
2025-01-12 15:04:25,231:INFO:Set up data.
2025-01-12 15:04:25,234:INFO:Set up index.
2025-01-12 15:04:25,411:INFO:Initializing predict_model()
2025-01-12 15:04:25,411:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E26AFE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF34400>)
2025-01-12 15:04:25,411:INFO:Checking exceptions
2025-01-12 15:04:25,411:INFO:Preloading libraries
2025-01-12 15:04:25,412:INFO:Set up data.
2025-01-12 15:04:25,414:INFO:Set up index.
2025-01-12 15:07:42,499:INFO:Initializing load_model()
2025-01-12 15:07:42,499:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:07:42,675:INFO:Initializing load_model()
2025-01-12 15:07:42,675:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:07:42,854:INFO:Initializing predict_model()
2025-01-12 15:07:42,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016089FDF650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56700>)
2025-01-12 15:07:42,854:INFO:Checking exceptions
2025-01-12 15:07:42,854:INFO:Preloading libraries
2025-01-12 15:07:42,854:INFO:Set up data.
2025-01-12 15:07:42,856:INFO:Set up index.
2025-01-12 15:07:43,046:INFO:Initializing predict_model()
2025-01-12 15:07:43,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160ECCE68D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DC804220>)
2025-01-12 15:07:43,046:INFO:Checking exceptions
2025-01-12 15:07:43,047:INFO:Preloading libraries
2025-01-12 15:07:43,047:INFO:Set up data.
2025-01-12 15:07:43,049:INFO:Set up index.
2025-01-12 15:08:55,340:INFO:Initializing load_model()
2025-01-12 15:08:55,340:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:08:55,474:INFO:Initializing load_model()
2025-01-12 15:08:55,475:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:08:55,649:INFO:Initializing predict_model()
2025-01-12 15:08:55,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD150C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF34400>)
2025-01-12 15:08:55,649:INFO:Checking exceptions
2025-01-12 15:08:55,649:INFO:Preloading libraries
2025-01-12 15:08:55,650:INFO:Set up data.
2025-01-12 15:08:55,652:INFO:Set up index.
2025-01-12 15:08:55,825:INFO:Initializing predict_model()
2025-01-12 15:08:55,825:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160DDED4090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF34400>)
2025-01-12 15:08:55,825:INFO:Checking exceptions
2025-01-12 15:08:55,825:INFO:Preloading libraries
2025-01-12 15:08:55,825:INFO:Set up data.
2025-01-12 15:08:55,827:INFO:Set up index.
2025-01-12 15:09:11,919:INFO:Initializing load_model()
2025-01-12 15:09:11,919:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:09:12,052:INFO:Initializing load_model()
2025-01-12 15:09:12,052:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:09:12,214:INFO:Initializing predict_model()
2025-01-12 15:09:12,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD20B0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56C00>)
2025-01-12 15:09:12,214:INFO:Checking exceptions
2025-01-12 15:09:12,215:INFO:Preloading libraries
2025-01-12 15:09:12,215:INFO:Set up data.
2025-01-12 15:09:12,217:INFO:Set up index.
2025-01-12 15:09:12,404:INFO:Initializing predict_model()
2025-01-12 15:09:12,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160DDED4090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E07B6CA0>)
2025-01-12 15:09:12,405:INFO:Checking exceptions
2025-01-12 15:09:12,405:INFO:Preloading libraries
2025-01-12 15:09:12,405:INFO:Set up data.
2025-01-12 15:09:12,407:INFO:Set up index.
2025-01-12 15:09:27,932:INFO:Initializing load_model()
2025-01-12 15:09:27,932:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:09:28,097:INFO:Initializing load_model()
2025-01-12 15:09:28,097:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:09:28,267:INFO:Initializing predict_model()
2025-01-12 15:09:28,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD1E1050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF579C0>)
2025-01-12 15:09:28,268:INFO:Checking exceptions
2025-01-12 15:09:28,268:INFO:Preloading libraries
2025-01-12 15:09:28,268:INFO:Set up data.
2025-01-12 15:09:28,270:INFO:Set up index.
2025-01-12 15:09:28,445:INFO:Initializing predict_model()
2025-01-12 15:09:28,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD11F450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160ECF63CE0>)
2025-01-12 15:09:28,445:INFO:Checking exceptions
2025-01-12 15:09:28,446:INFO:Preloading libraries
2025-01-12 15:09:28,446:INFO:Set up data.
2025-01-12 15:09:28,449:INFO:Set up index.
2025-01-12 15:10:16,291:INFO:Initializing load_model()
2025-01-12 15:10:16,291:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:10:16,425:INFO:Initializing load_model()
2025-01-12 15:10:16,425:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:10:16,595:INFO:Initializing predict_model()
2025-01-12 15:10:16,596:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160F7E8E410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E262D120>)
2025-01-12 15:10:16,596:INFO:Checking exceptions
2025-01-12 15:10:16,596:INFO:Preloading libraries
2025-01-12 15:10:16,596:INFO:Set up data.
2025-01-12 15:10:16,599:INFO:Set up index.
2025-01-12 15:10:16,814:INFO:Initializing predict_model()
2025-01-12 15:10:16,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E25B1490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160F7E6F920>)
2025-01-12 15:10:16,814:INFO:Checking exceptions
2025-01-12 15:10:16,815:INFO:Preloading libraries
2025-01-12 15:10:16,815:INFO:Set up data.
2025-01-12 15:10:16,817:INFO:Set up index.
2025-01-12 15:13:07,762:INFO:Initializing finalize_model()
2025-01-12 15:13:07,770:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 15:13:07,779:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:13:07,878:INFO:Initializing create_model()
2025-01-12 15:13:07,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:13:07,879:INFO:Checking exceptions
2025-01-12 15:13:07,955:INFO:Importing libraries
2025-01-12 15:13:07,955:INFO:Copying training dataset
2025-01-12 15:13:07,959:INFO:Defining folds
2025-01-12 15:13:07,962:INFO:Declaring metric variables
2025-01-12 15:13:07,967:INFO:Importing untrained model
2025-01-12 15:13:07,967:INFO:Declaring custom model
2025-01-12 15:13:07,984:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:13:08,008:INFO:Cross validation set to False
2025-01-12 15:13:08,008:INFO:Fitting Model
2025-01-12 15:13:08,498:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:13:08,499:INFO:create_model() successfully completed......................................
2025-01-12 15:13:09,701:INFO:_master_model_container: 18
2025-01-12 15:13:09,701:INFO:_display_container: 2
2025-01-12 15:13:09,710:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:13:09,710:INFO:finalize_model() successfully completed......................................
2025-01-12 15:13:46,669:INFO:Initializing save_model()
2025-01-12 15:13:46,669:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=diesel_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-12 15:13:46,669:INFO:Adding model into prep_pipe
2025-01-12 15:13:46,669:WARNING:Only Model saved as it was a pipeline.
2025-01-12 15:13:46,808:INFO:diesel_model.pkl saved in current working directory
2025-01-12 15:13:46,816:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:13:46,816:INFO:save_model() successfully completed......................................
2025-01-12 15:14:35,308:INFO:Initializing finalize_model()
2025-01-12 15:14:35,308:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 15:14:35,309:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:14:35,312:INFO:Initializing create_model()
2025-01-12 15:14:35,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:14:35,313:INFO:Checking exceptions
2025-01-12 15:14:35,315:INFO:Importing libraries
2025-01-12 15:14:35,315:INFO:Copying training dataset
2025-01-12 15:14:35,316:INFO:Defining folds
2025-01-12 15:14:35,316:INFO:Declaring metric variables
2025-01-12 15:14:35,316:INFO:Importing untrained model
2025-01-12 15:14:35,316:INFO:Declaring custom model
2025-01-12 15:14:35,317:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:14:35,318:INFO:Cross validation set to False
2025-01-12 15:14:35,318:INFO:Fitting Model
2025-01-12 15:14:35,682:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:14:35,683:INFO:create_model() successfully completed......................................
2025-01-12 15:14:35,793:INFO:_master_model_container: 18
2025-01-12 15:14:35,793:INFO:_display_container: 2
2025-01-12 15:14:35,802:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:14:35,802:INFO:finalize_model() successfully completed......................................
2025-01-12 15:14:48,952:INFO:Initializing predict_model()
2025-01-12 15:14:48,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002DC57CDEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002DC58B7F060>)
2025-01-12 15:14:48,952:INFO:Checking exceptions
2025-01-12 15:14:48,952:INFO:Preloading libraries
2025-01-12 15:14:48,955:INFO:Set up data.
2025-01-12 15:14:48,957:INFO:Set up index.
2025-01-12 15:17:37,049:INFO:Initializing load_model()
2025-01-12 15:17:37,049:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:17:37,245:INFO:Initializing load_model()
2025-01-12 15:17:37,245:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:17:37,757:INFO:Initializing predict_model()
2025-01-12 15:17:37,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD217790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160FCF56E80>)
2025-01-12 15:17:37,757:INFO:Checking exceptions
2025-01-12 15:17:37,758:INFO:Preloading libraries
2025-01-12 15:17:37,758:INFO:Set up data.
2025-01-12 15:17:37,761:INFO:Set up index.
2025-01-12 15:17:37,978:INFO:Initializing predict_model()
2025-01-12 15:17:37,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160E25AF990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DDF34400>)
2025-01-12 15:17:37,978:INFO:Checking exceptions
2025-01-12 15:17:37,978:INFO:Preloading libraries
2025-01-12 15:17:37,978:INFO:Set up data.
2025-01-12 15:17:37,980:INFO:Set up index.
2025-01-12 15:19:34,113:INFO:Initializing load_model()
2025-01-12 15:19:34,113:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:19:34,254:INFO:Initializing load_model()
2025-01-12 15:19:34,254:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 15:19:34,430:INFO:Initializing predict_model()
2025-01-12 15:19:34,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD14BC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160E07B6CA0>)
2025-01-12 15:19:34,431:INFO:Checking exceptions
2025-01-12 15:19:34,431:INFO:Preloading libraries
2025-01-12 15:19:34,431:INFO:Set up data.
2025-01-12 15:19:34,434:INFO:Set up index.
2025-01-12 15:19:34,621:INFO:Initializing predict_model()
2025-01-12 15:19:34,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160FD14BC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160DC804220>)
2025-01-12 15:19:34,621:INFO:Checking exceptions
2025-01-12 15:19:34,621:INFO:Preloading libraries
2025-01-12 15:19:34,621:INFO:Set up data.
2025-01-12 15:19:34,623:INFO:Set up index.
2025-01-12 15:39:15,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 15:39:15,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 15:39:15,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 15:39:15,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 15:39:47,640:INFO:PyCaret RegressionExperiment
2025-01-12 15:39:47,640:INFO:Logging name: reg-default-name
2025-01-12 15:39:47,640:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-12 15:39:47,640:INFO:version 3.3.2
2025-01-12 15:39:47,640:INFO:Initializing setup()
2025-01-12 15:39:47,640:INFO:self.USI: dbc7
2025-01-12 15:39:47,641:INFO:self._variable_keys: {'target_param', 'fold_generator', 'fold_groups_param', 'X_test', 'y', 'exp_id', 'y_test', 'y_train', 'idx', 'logging_param', 'data', 'log_plots_param', '_available_plots', 'memory', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'transform_target_param', 'seed', 'n_jobs_param', 'X', 'X_train', 'html_param'}
2025-01-12 15:39:47,641:INFO:Checking environment
2025-01-12 15:39:47,641:INFO:python_version: 3.11.11
2025-01-12 15:39:47,641:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-12 15:39:47,641:INFO:machine: AMD64
2025-01-12 15:39:47,641:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-12 15:39:47,641:INFO:Memory: svmem(total=6439919616, available=1824575488, percent=71.7, used=4615344128, free=1824575488)
2025-01-12 15:39:47,641:INFO:Physical Core: 4
2025-01-12 15:39:47,641:INFO:Logical Core: 4
2025-01-12 15:39:47,641:INFO:Checking libraries
2025-01-12 15:39:47,642:INFO:System:
2025-01-12 15:39:47,642:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-12 15:39:47,642:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-12 15:39:47,642:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-12 15:39:47,642:INFO:PyCaret required dependencies:
2025-01-12 15:39:47,765:INFO:                 pip: 24.2
2025-01-12 15:39:47,765:INFO:          setuptools: 75.1.0
2025-01-12 15:39:47,765:INFO:             pycaret: 3.3.2
2025-01-12 15:39:47,765:INFO:             IPython: 8.30.0
2025-01-12 15:39:47,765:INFO:          ipywidgets: 8.1.5
2025-01-12 15:39:47,766:INFO:                tqdm: 4.67.1
2025-01-12 15:39:47,766:INFO:               numpy: 1.26.4
2025-01-12 15:39:47,766:INFO:              pandas: 2.1.4
2025-01-12 15:39:47,766:INFO:              jinja2: 3.1.4
2025-01-12 15:39:47,766:INFO:               scipy: 1.11.4
2025-01-12 15:39:47,766:INFO:              joblib: 1.3.2
2025-01-12 15:39:47,766:INFO:             sklearn: 1.4.2
2025-01-12 15:39:47,766:INFO:                pyod: 2.0.3
2025-01-12 15:39:47,766:INFO:            imblearn: 0.13.0
2025-01-12 15:39:47,766:INFO:   category_encoders: 2.7.0
2025-01-12 15:39:47,766:INFO:            lightgbm: 4.5.0
2025-01-12 15:39:47,767:INFO:               numba: 0.60.0
2025-01-12 15:39:47,767:INFO:            requests: 2.32.3
2025-01-12 15:39:47,767:INFO:          matplotlib: 3.7.5
2025-01-12 15:39:47,767:INFO:          scikitplot: 0.3.7
2025-01-12 15:39:47,767:INFO:         yellowbrick: 1.5
2025-01-12 15:39:47,767:INFO:              plotly: 5.24.1
2025-01-12 15:39:47,767:INFO:    plotly-resampler: Not installed
2025-01-12 15:39:47,767:INFO:             kaleido: 0.2.1
2025-01-12 15:39:47,767:INFO:           schemdraw: 0.15
2025-01-12 15:39:47,767:INFO:         statsmodels: 0.14.4
2025-01-12 15:39:47,767:INFO:              sktime: 0.26.0
2025-01-12 15:39:47,767:INFO:               tbats: 1.1.3
2025-01-12 15:39:47,768:INFO:            pmdarima: 2.0.4
2025-01-12 15:39:47,768:INFO:              psutil: 5.9.0
2025-01-12 15:39:47,768:INFO:          markupsafe: 2.1.3
2025-01-12 15:39:47,768:INFO:             pickle5: Not installed
2025-01-12 15:39:47,768:INFO:         cloudpickle: 3.1.0
2025-01-12 15:39:47,768:INFO:         deprecation: 2.1.0
2025-01-12 15:39:47,768:INFO:              xxhash: 3.5.0
2025-01-12 15:39:47,768:INFO:           wurlitzer: Not installed
2025-01-12 15:39:47,768:INFO:PyCaret optional dependencies:
2025-01-12 15:39:47,792:INFO:                shap: Not installed
2025-01-12 15:39:47,792:INFO:           interpret: Not installed
2025-01-12 15:39:47,792:INFO:                umap: Not installed
2025-01-12 15:39:47,792:INFO:     ydata_profiling: Not installed
2025-01-12 15:39:47,793:INFO:  explainerdashboard: Not installed
2025-01-12 15:39:47,793:INFO:             autoviz: Not installed
2025-01-12 15:39:47,793:INFO:           fairlearn: Not installed
2025-01-12 15:39:47,793:INFO:          deepchecks: Not installed
2025-01-12 15:39:47,793:INFO:             xgboost: Not installed
2025-01-12 15:39:47,793:INFO:            catboost: Not installed
2025-01-12 15:39:47,793:INFO:              kmodes: Not installed
2025-01-12 15:39:47,793:INFO:             mlxtend: Not installed
2025-01-12 15:39:47,793:INFO:       statsforecast: Not installed
2025-01-12 15:39:47,793:INFO:        tune_sklearn: Not installed
2025-01-12 15:39:47,793:INFO:                 ray: Not installed
2025-01-12 15:39:47,793:INFO:            hyperopt: Not installed
2025-01-12 15:39:47,794:INFO:              optuna: Not installed
2025-01-12 15:39:47,794:INFO:               skopt: Not installed
2025-01-12 15:39:47,794:INFO:              mlflow: Not installed
2025-01-12 15:39:47,794:INFO:              gradio: Not installed
2025-01-12 15:39:47,794:INFO:             fastapi: Not installed
2025-01-12 15:39:47,794:INFO:             uvicorn: Not installed
2025-01-12 15:39:47,794:INFO:              m2cgen: Not installed
2025-01-12 15:39:47,794:INFO:           evidently: Not installed
2025-01-12 15:39:47,794:INFO:               fugue: Not installed
2025-01-12 15:39:47,794:INFO:           streamlit: 1.40.1
2025-01-12 15:39:47,794:INFO:             prophet: Not installed
2025-01-12 15:39:47,794:INFO:None
2025-01-12 15:39:47,794:INFO:Set up data.
2025-01-12 15:39:47,803:INFO:Set up folding strategy.
2025-01-12 15:39:47,803:INFO:Set up train/test split.
2025-01-12 15:39:47,808:INFO:Set up index.
2025-01-12 15:39:47,809:INFO:Assigning column types.
2025-01-12 15:39:47,814:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-12 15:39:47,815:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 15:39:47,825:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:39:47,836:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:47,968:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,070:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,072:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,083:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,094:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,222:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,325:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-12 15:39:48,336:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,346:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,477:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,590:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,600:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:48,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:48,980:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-12 15:39:49,001:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,230:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,252:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,380:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,483:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-12 15:39:49,632:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:39:49,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:49,988:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-12 15:39:50,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:50,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:50,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:50,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:39:50,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:50,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:50,499:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-12 15:39:50,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:50,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,018:INFO:Preparing preprocessing pipeline...
2025-01-12 15:39:51,018:INFO:Set up simple imputation.
2025-01-12 15:39:51,019:INFO:Set up column name cleaning.
2025-01-12 15:39:51,099:INFO:Finished creating preprocessing pipeline.
2025-01-12 15:39:51,109:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-12 15:39:51,109:INFO:Creating final display dataframe.
2025-01-12 15:39:51,326:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              dbc7
2025-01-12 15:39:51,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:39:51,873:INFO:setup() successfully completed in 4.24s...............
2025-01-12 15:40:01,225:INFO:Initializing compare_models()
2025-01-12 15:40:01,225:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 15:40:01,225:INFO:Checking exceptions
2025-01-12 15:40:01,228:INFO:Preparing display monitor
2025-01-12 15:40:01,258:INFO:Initializing Linear Regression
2025-01-12 15:40:01,258:INFO:Total runtime is 0.0 minutes
2025-01-12 15:40:01,264:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:01,264:INFO:Initializing create_model()
2025-01-12 15:40:01,264:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:01,265:INFO:Checking exceptions
2025-01-12 15:40:01,265:INFO:Importing libraries
2025-01-12 15:40:01,265:INFO:Copying training dataset
2025-01-12 15:40:01,271:INFO:Defining folds
2025-01-12 15:40:01,271:INFO:Declaring metric variables
2025-01-12 15:40:01,277:INFO:Importing untrained model
2025-01-12 15:40:01,283:INFO:Linear Regression Imported successfully
2025-01-12 15:40:01,294:INFO:Starting cross validation
2025-01-12 15:40:01,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:05,924:INFO:Calculating mean and std
2025-01-12 15:40:05,926:INFO:Creating metrics dataframe
2025-01-12 15:40:05,928:INFO:Uploading results into container
2025-01-12 15:40:05,929:INFO:Uploading model into container now
2025-01-12 15:40:05,929:INFO:_master_model_container: 1
2025-01-12 15:40:05,929:INFO:_display_container: 2
2025-01-12 15:40:05,930:INFO:LinearRegression(n_jobs=-1)
2025-01-12 15:40:05,930:INFO:create_model() successfully completed......................................
2025-01-12 15:40:06,034:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:06,034:INFO:Creating metrics dataframe
2025-01-12 15:40:06,045:INFO:Initializing Lasso Regression
2025-01-12 15:40:06,045:INFO:Total runtime is 0.07978373368581136 minutes
2025-01-12 15:40:06,049:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:06,050:INFO:Initializing create_model()
2025-01-12 15:40:06,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:06,050:INFO:Checking exceptions
2025-01-12 15:40:06,050:INFO:Importing libraries
2025-01-12 15:40:06,050:INFO:Copying training dataset
2025-01-12 15:40:06,057:INFO:Defining folds
2025-01-12 15:40:06,058:INFO:Declaring metric variables
2025-01-12 15:40:06,063:INFO:Importing untrained model
2025-01-12 15:40:06,070:INFO:Lasso Regression Imported successfully
2025-01-12 15:40:06,079:INFO:Starting cross validation
2025-01-12 15:40:06,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:06,205:INFO:Calculating mean and std
2025-01-12 15:40:06,207:INFO:Creating metrics dataframe
2025-01-12 15:40:06,209:INFO:Uploading results into container
2025-01-12 15:40:06,210:INFO:Uploading model into container now
2025-01-12 15:40:06,210:INFO:_master_model_container: 2
2025-01-12 15:40:06,210:INFO:_display_container: 2
2025-01-12 15:40:06,211:INFO:Lasso(random_state=123)
2025-01-12 15:40:06,211:INFO:create_model() successfully completed......................................
2025-01-12 15:40:06,307:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:06,308:INFO:Creating metrics dataframe
2025-01-12 15:40:06,318:INFO:Initializing Ridge Regression
2025-01-12 15:40:06,318:INFO:Total runtime is 0.08433119455973308 minutes
2025-01-12 15:40:06,322:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:06,323:INFO:Initializing create_model()
2025-01-12 15:40:06,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:06,323:INFO:Checking exceptions
2025-01-12 15:40:06,323:INFO:Importing libraries
2025-01-12 15:40:06,323:INFO:Copying training dataset
2025-01-12 15:40:06,330:INFO:Defining folds
2025-01-12 15:40:06,331:INFO:Declaring metric variables
2025-01-12 15:40:06,337:INFO:Importing untrained model
2025-01-12 15:40:06,342:INFO:Ridge Regression Imported successfully
2025-01-12 15:40:06,354:INFO:Starting cross validation
2025-01-12 15:40:06,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:06,482:INFO:Calculating mean and std
2025-01-12 15:40:06,484:INFO:Creating metrics dataframe
2025-01-12 15:40:06,486:INFO:Uploading results into container
2025-01-12 15:40:06,487:INFO:Uploading model into container now
2025-01-12 15:40:06,487:INFO:_master_model_container: 3
2025-01-12 15:40:06,488:INFO:_display_container: 2
2025-01-12 15:40:06,488:INFO:Ridge(random_state=123)
2025-01-12 15:40:06,489:INFO:create_model() successfully completed......................................
2025-01-12 15:40:06,585:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:06,585:INFO:Creating metrics dataframe
2025-01-12 15:40:06,595:INFO:Initializing Elastic Net
2025-01-12 15:40:06,595:INFO:Total runtime is 0.0889453411102295 minutes
2025-01-12 15:40:06,600:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:06,600:INFO:Initializing create_model()
2025-01-12 15:40:06,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:06,600:INFO:Checking exceptions
2025-01-12 15:40:06,601:INFO:Importing libraries
2025-01-12 15:40:06,601:INFO:Copying training dataset
2025-01-12 15:40:06,609:INFO:Defining folds
2025-01-12 15:40:06,609:INFO:Declaring metric variables
2025-01-12 15:40:06,614:INFO:Importing untrained model
2025-01-12 15:40:06,621:INFO:Elastic Net Imported successfully
2025-01-12 15:40:06,630:INFO:Starting cross validation
2025-01-12 15:40:06,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:06,760:INFO:Calculating mean and std
2025-01-12 15:40:06,761:INFO:Creating metrics dataframe
2025-01-12 15:40:06,764:INFO:Uploading results into container
2025-01-12 15:40:06,764:INFO:Uploading model into container now
2025-01-12 15:40:06,765:INFO:_master_model_container: 4
2025-01-12 15:40:06,765:INFO:_display_container: 2
2025-01-12 15:40:06,765:INFO:ElasticNet(random_state=123)
2025-01-12 15:40:06,765:INFO:create_model() successfully completed......................................
2025-01-12 15:40:06,863:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:06,863:INFO:Creating metrics dataframe
2025-01-12 15:40:06,874:INFO:Initializing Least Angle Regression
2025-01-12 15:40:06,874:INFO:Total runtime is 0.09359208742777507 minutes
2025-01-12 15:40:06,878:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:06,878:INFO:Initializing create_model()
2025-01-12 15:40:06,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:06,879:INFO:Checking exceptions
2025-01-12 15:40:06,879:INFO:Importing libraries
2025-01-12 15:40:06,879:INFO:Copying training dataset
2025-01-12 15:40:06,887:INFO:Defining folds
2025-01-12 15:40:06,888:INFO:Declaring metric variables
2025-01-12 15:40:06,893:INFO:Importing untrained model
2025-01-12 15:40:06,897:INFO:Least Angle Regression Imported successfully
2025-01-12 15:40:06,912:INFO:Starting cross validation
2025-01-12 15:40:06,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:07,034:INFO:Calculating mean and std
2025-01-12 15:40:07,035:INFO:Creating metrics dataframe
2025-01-12 15:40:07,038:INFO:Uploading results into container
2025-01-12 15:40:07,038:INFO:Uploading model into container now
2025-01-12 15:40:07,039:INFO:_master_model_container: 5
2025-01-12 15:40:07,039:INFO:_display_container: 2
2025-01-12 15:40:07,039:INFO:Lars(random_state=123)
2025-01-12 15:40:07,039:INFO:create_model() successfully completed......................................
2025-01-12 15:40:07,136:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:07,136:INFO:Creating metrics dataframe
2025-01-12 15:40:07,147:INFO:Initializing Lasso Least Angle Regression
2025-01-12 15:40:07,147:INFO:Total runtime is 0.09813990592956544 minutes
2025-01-12 15:40:07,151:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:07,152:INFO:Initializing create_model()
2025-01-12 15:40:07,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:07,152:INFO:Checking exceptions
2025-01-12 15:40:07,152:INFO:Importing libraries
2025-01-12 15:40:07,152:INFO:Copying training dataset
2025-01-12 15:40:07,160:INFO:Defining folds
2025-01-12 15:40:07,160:INFO:Declaring metric variables
2025-01-12 15:40:07,164:INFO:Importing untrained model
2025-01-12 15:40:07,173:INFO:Lasso Least Angle Regression Imported successfully
2025-01-12 15:40:07,211:INFO:Starting cross validation
2025-01-12 15:40:07,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:07,375:INFO:Calculating mean and std
2025-01-12 15:40:07,377:INFO:Creating metrics dataframe
2025-01-12 15:40:07,379:INFO:Uploading results into container
2025-01-12 15:40:07,380:INFO:Uploading model into container now
2025-01-12 15:40:07,380:INFO:_master_model_container: 6
2025-01-12 15:40:07,381:INFO:_display_container: 2
2025-01-12 15:40:07,381:INFO:LassoLars(random_state=123)
2025-01-12 15:40:07,382:INFO:create_model() successfully completed......................................
2025-01-12 15:40:07,477:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:07,477:INFO:Creating metrics dataframe
2025-01-12 15:40:07,489:INFO:Initializing Orthogonal Matching Pursuit
2025-01-12 15:40:07,489:INFO:Total runtime is 0.1038358728090922 minutes
2025-01-12 15:40:07,493:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:07,493:INFO:Initializing create_model()
2025-01-12 15:40:07,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:07,494:INFO:Checking exceptions
2025-01-12 15:40:07,494:INFO:Importing libraries
2025-01-12 15:40:07,494:INFO:Copying training dataset
2025-01-12 15:40:07,502:INFO:Defining folds
2025-01-12 15:40:07,502:INFO:Declaring metric variables
2025-01-12 15:40:07,507:INFO:Importing untrained model
2025-01-12 15:40:07,514:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-12 15:40:07,525:INFO:Starting cross validation
2025-01-12 15:40:07,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:07,640:INFO:Calculating mean and std
2025-01-12 15:40:07,642:INFO:Creating metrics dataframe
2025-01-12 15:40:07,644:INFO:Uploading results into container
2025-01-12 15:40:07,644:INFO:Uploading model into container now
2025-01-12 15:40:07,645:INFO:_master_model_container: 7
2025-01-12 15:40:07,645:INFO:_display_container: 2
2025-01-12 15:40:07,645:INFO:OrthogonalMatchingPursuit()
2025-01-12 15:40:07,645:INFO:create_model() successfully completed......................................
2025-01-12 15:40:07,741:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:07,741:INFO:Creating metrics dataframe
2025-01-12 15:40:07,755:INFO:Initializing Bayesian Ridge
2025-01-12 15:40:07,756:INFO:Total runtime is 0.10828288396199544 minutes
2025-01-12 15:40:07,760:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:07,760:INFO:Initializing create_model()
2025-01-12 15:40:07,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:07,760:INFO:Checking exceptions
2025-01-12 15:40:07,760:INFO:Importing libraries
2025-01-12 15:40:07,760:INFO:Copying training dataset
2025-01-12 15:40:07,768:INFO:Defining folds
2025-01-12 15:40:07,769:INFO:Declaring metric variables
2025-01-12 15:40:07,774:INFO:Importing untrained model
2025-01-12 15:40:07,779:INFO:Bayesian Ridge Imported successfully
2025-01-12 15:40:07,790:INFO:Starting cross validation
2025-01-12 15:40:07,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:07,918:INFO:Calculating mean and std
2025-01-12 15:40:07,919:INFO:Creating metrics dataframe
2025-01-12 15:40:07,922:INFO:Uploading results into container
2025-01-12 15:40:07,923:INFO:Uploading model into container now
2025-01-12 15:40:07,923:INFO:_master_model_container: 8
2025-01-12 15:40:07,923:INFO:_display_container: 2
2025-01-12 15:40:07,924:INFO:BayesianRidge()
2025-01-12 15:40:07,924:INFO:create_model() successfully completed......................................
2025-01-12 15:40:08,020:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:08,020:INFO:Creating metrics dataframe
2025-01-12 15:40:08,031:INFO:Initializing Passive Aggressive Regressor
2025-01-12 15:40:08,031:INFO:Total runtime is 0.11287965377171834 minutes
2025-01-12 15:40:08,036:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:08,037:INFO:Initializing create_model()
2025-01-12 15:40:08,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:08,037:INFO:Checking exceptions
2025-01-12 15:40:08,037:INFO:Importing libraries
2025-01-12 15:40:08,037:INFO:Copying training dataset
2025-01-12 15:40:08,044:INFO:Defining folds
2025-01-12 15:40:08,044:INFO:Declaring metric variables
2025-01-12 15:40:08,049:INFO:Importing untrained model
2025-01-12 15:40:08,057:INFO:Passive Aggressive Regressor Imported successfully
2025-01-12 15:40:08,066:INFO:Starting cross validation
2025-01-12 15:40:08,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:08,252:INFO:Calculating mean and std
2025-01-12 15:40:08,253:INFO:Creating metrics dataframe
2025-01-12 15:40:08,256:INFO:Uploading results into container
2025-01-12 15:40:08,256:INFO:Uploading model into container now
2025-01-12 15:40:08,257:INFO:_master_model_container: 9
2025-01-12 15:40:08,257:INFO:_display_container: 2
2025-01-12 15:40:08,258:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-12 15:40:08,258:INFO:create_model() successfully completed......................................
2025-01-12 15:40:08,355:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:08,355:INFO:Creating metrics dataframe
2025-01-12 15:40:08,367:INFO:Initializing Huber Regressor
2025-01-12 15:40:08,368:INFO:Total runtime is 0.11849252382914224 minutes
2025-01-12 15:40:08,372:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:08,373:INFO:Initializing create_model()
2025-01-12 15:40:08,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:08,373:INFO:Checking exceptions
2025-01-12 15:40:08,373:INFO:Importing libraries
2025-01-12 15:40:08,373:INFO:Copying training dataset
2025-01-12 15:40:08,380:INFO:Defining folds
2025-01-12 15:40:08,380:INFO:Declaring metric variables
2025-01-12 15:40:08,385:INFO:Importing untrained model
2025-01-12 15:40:08,392:INFO:Huber Regressor Imported successfully
2025-01-12 15:40:08,400:INFO:Starting cross validation
2025-01-12 15:40:08,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:08,645:INFO:Calculating mean and std
2025-01-12 15:40:08,646:INFO:Creating metrics dataframe
2025-01-12 15:40:08,650:INFO:Uploading results into container
2025-01-12 15:40:08,652:INFO:Uploading model into container now
2025-01-12 15:40:08,653:INFO:_master_model_container: 10
2025-01-12 15:40:08,653:INFO:_display_container: 2
2025-01-12 15:40:08,654:INFO:HuberRegressor()
2025-01-12 15:40:08,654:INFO:create_model() successfully completed......................................
2025-01-12 15:40:08,748:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:08,749:INFO:Creating metrics dataframe
2025-01-12 15:40:08,761:INFO:Initializing K Neighbors Regressor
2025-01-12 15:40:08,762:INFO:Total runtime is 0.12505545616149902 minutes
2025-01-12 15:40:08,766:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:08,766:INFO:Initializing create_model()
2025-01-12 15:40:08,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:08,766:INFO:Checking exceptions
2025-01-12 15:40:08,767:INFO:Importing libraries
2025-01-12 15:40:08,767:INFO:Copying training dataset
2025-01-12 15:40:08,775:INFO:Defining folds
2025-01-12 15:40:08,775:INFO:Declaring metric variables
2025-01-12 15:40:08,781:INFO:Importing untrained model
2025-01-12 15:40:08,787:INFO:K Neighbors Regressor Imported successfully
2025-01-12 15:40:08,795:INFO:Starting cross validation
2025-01-12 15:40:08,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:08,973:INFO:Calculating mean and std
2025-01-12 15:40:08,974:INFO:Creating metrics dataframe
2025-01-12 15:40:08,977:INFO:Uploading results into container
2025-01-12 15:40:08,977:INFO:Uploading model into container now
2025-01-12 15:40:08,978:INFO:_master_model_container: 11
2025-01-12 15:40:08,978:INFO:_display_container: 2
2025-01-12 15:40:08,978:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-12 15:40:08,978:INFO:create_model() successfully completed......................................
2025-01-12 15:40:09,076:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:09,076:INFO:Creating metrics dataframe
2025-01-12 15:40:09,090:INFO:Initializing Decision Tree Regressor
2025-01-12 15:40:09,090:INFO:Total runtime is 0.1305310010910034 minutes
2025-01-12 15:40:09,094:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:09,094:INFO:Initializing create_model()
2025-01-12 15:40:09,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:09,094:INFO:Checking exceptions
2025-01-12 15:40:09,095:INFO:Importing libraries
2025-01-12 15:40:09,095:INFO:Copying training dataset
2025-01-12 15:40:09,103:INFO:Defining folds
2025-01-12 15:40:09,103:INFO:Declaring metric variables
2025-01-12 15:40:09,108:INFO:Importing untrained model
2025-01-12 15:40:09,114:INFO:Decision Tree Regressor Imported successfully
2025-01-12 15:40:09,123:INFO:Starting cross validation
2025-01-12 15:40:09,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:09,315:INFO:Calculating mean and std
2025-01-12 15:40:09,316:INFO:Creating metrics dataframe
2025-01-12 15:40:09,320:INFO:Uploading results into container
2025-01-12 15:40:09,320:INFO:Uploading model into container now
2025-01-12 15:40:09,321:INFO:_master_model_container: 12
2025-01-12 15:40:09,321:INFO:_display_container: 2
2025-01-12 15:40:09,322:INFO:DecisionTreeRegressor(random_state=123)
2025-01-12 15:40:09,322:INFO:create_model() successfully completed......................................
2025-01-12 15:40:09,419:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:09,419:INFO:Creating metrics dataframe
2025-01-12 15:40:09,433:INFO:Initializing Random Forest Regressor
2025-01-12 15:40:09,433:INFO:Total runtime is 0.13624405066172282 minutes
2025-01-12 15:40:09,438:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:09,439:INFO:Initializing create_model()
2025-01-12 15:40:09,439:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:09,439:INFO:Checking exceptions
2025-01-12 15:40:09,439:INFO:Importing libraries
2025-01-12 15:40:09,439:INFO:Copying training dataset
2025-01-12 15:40:09,446:INFO:Defining folds
2025-01-12 15:40:09,446:INFO:Declaring metric variables
2025-01-12 15:40:09,453:INFO:Importing untrained model
2025-01-12 15:40:09,458:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:40:09,467:INFO:Starting cross validation
2025-01-12 15:40:09,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:13,524:INFO:Calculating mean and std
2025-01-12 15:40:13,526:INFO:Creating metrics dataframe
2025-01-12 15:40:13,528:INFO:Uploading results into container
2025-01-12 15:40:13,529:INFO:Uploading model into container now
2025-01-12 15:40:13,530:INFO:_master_model_container: 13
2025-01-12 15:40:13,530:INFO:_display_container: 2
2025-01-12 15:40:13,530:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:13,530:INFO:create_model() successfully completed......................................
2025-01-12 15:40:13,626:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:13,626:INFO:Creating metrics dataframe
2025-01-12 15:40:13,642:INFO:Initializing Extra Trees Regressor
2025-01-12 15:40:13,642:INFO:Total runtime is 0.20638768672943114 minutes
2025-01-12 15:40:13,648:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:13,648:INFO:Initializing create_model()
2025-01-12 15:40:13,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:13,649:INFO:Checking exceptions
2025-01-12 15:40:13,649:INFO:Importing libraries
2025-01-12 15:40:13,649:INFO:Copying training dataset
2025-01-12 15:40:13,658:INFO:Defining folds
2025-01-12 15:40:13,658:INFO:Declaring metric variables
2025-01-12 15:40:13,663:INFO:Importing untrained model
2025-01-12 15:40:13,668:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:40:13,679:INFO:Starting cross validation
2025-01-12 15:40:13,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:15,918:INFO:Calculating mean and std
2025-01-12 15:40:15,919:INFO:Creating metrics dataframe
2025-01-12 15:40:15,922:INFO:Uploading results into container
2025-01-12 15:40:15,922:INFO:Uploading model into container now
2025-01-12 15:40:15,923:INFO:_master_model_container: 14
2025-01-12 15:40:15,923:INFO:_display_container: 2
2025-01-12 15:40:15,923:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:15,923:INFO:create_model() successfully completed......................................
2025-01-12 15:40:16,018:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:16,018:INFO:Creating metrics dataframe
2025-01-12 15:40:16,033:INFO:Initializing AdaBoost Regressor
2025-01-12 15:40:16,034:INFO:Total runtime is 0.24625978072484334 minutes
2025-01-12 15:40:16,038:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:16,039:INFO:Initializing create_model()
2025-01-12 15:40:16,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:16,039:INFO:Checking exceptions
2025-01-12 15:40:16,039:INFO:Importing libraries
2025-01-12 15:40:16,039:INFO:Copying training dataset
2025-01-12 15:40:16,048:INFO:Defining folds
2025-01-12 15:40:16,048:INFO:Declaring metric variables
2025-01-12 15:40:16,053:INFO:Importing untrained model
2025-01-12 15:40:16,058:INFO:AdaBoost Regressor Imported successfully
2025-01-12 15:40:16,068:INFO:Starting cross validation
2025-01-12 15:40:16,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:16,900:INFO:Calculating mean and std
2025-01-12 15:40:16,903:INFO:Creating metrics dataframe
2025-01-12 15:40:16,905:INFO:Uploading results into container
2025-01-12 15:40:16,906:INFO:Uploading model into container now
2025-01-12 15:40:16,906:INFO:_master_model_container: 15
2025-01-12 15:40:16,906:INFO:_display_container: 2
2025-01-12 15:40:16,906:INFO:AdaBoostRegressor(random_state=123)
2025-01-12 15:40:16,906:INFO:create_model() successfully completed......................................
2025-01-12 15:40:17,000:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:17,000:INFO:Creating metrics dataframe
2025-01-12 15:40:17,017:INFO:Initializing Gradient Boosting Regressor
2025-01-12 15:40:17,017:INFO:Total runtime is 0.26264963547388714 minutes
2025-01-12 15:40:17,021:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:17,022:INFO:Initializing create_model()
2025-01-12 15:40:17,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:17,022:INFO:Checking exceptions
2025-01-12 15:40:17,022:INFO:Importing libraries
2025-01-12 15:40:17,022:INFO:Copying training dataset
2025-01-12 15:40:17,030:INFO:Defining folds
2025-01-12 15:40:17,031:INFO:Declaring metric variables
2025-01-12 15:40:17,035:INFO:Importing untrained model
2025-01-12 15:40:17,042:INFO:Gradient Boosting Regressor Imported successfully
2025-01-12 15:40:17,052:INFO:Starting cross validation
2025-01-12 15:40:17,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:18,711:INFO:Calculating mean and std
2025-01-12 15:40:18,713:INFO:Creating metrics dataframe
2025-01-12 15:40:18,715:INFO:Uploading results into container
2025-01-12 15:40:18,716:INFO:Uploading model into container now
2025-01-12 15:40:18,717:INFO:_master_model_container: 16
2025-01-12 15:40:18,717:INFO:_display_container: 2
2025-01-12 15:40:18,717:INFO:GradientBoostingRegressor(random_state=123)
2025-01-12 15:40:18,717:INFO:create_model() successfully completed......................................
2025-01-12 15:40:18,812:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:18,813:INFO:Creating metrics dataframe
2025-01-12 15:40:18,829:INFO:Initializing Light Gradient Boosting Machine
2025-01-12 15:40:18,829:INFO:Total runtime is 0.2928472995758057 minutes
2025-01-12 15:40:18,833:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:18,834:INFO:Initializing create_model()
2025-01-12 15:40:18,834:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:18,834:INFO:Checking exceptions
2025-01-12 15:40:18,834:INFO:Importing libraries
2025-01-12 15:40:18,835:INFO:Copying training dataset
2025-01-12 15:40:18,842:INFO:Defining folds
2025-01-12 15:40:18,842:INFO:Declaring metric variables
2025-01-12 15:40:18,850:INFO:Importing untrained model
2025-01-12 15:40:18,854:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:40:18,866:INFO:Starting cross validation
2025-01-12 15:40:18,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:19,659:INFO:Calculating mean and std
2025-01-12 15:40:19,661:INFO:Creating metrics dataframe
2025-01-12 15:40:19,664:INFO:Uploading results into container
2025-01-12 15:40:19,664:INFO:Uploading model into container now
2025-01-12 15:40:19,665:INFO:_master_model_container: 17
2025-01-12 15:40:19,665:INFO:_display_container: 2
2025-01-12 15:40:19,665:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:19,665:INFO:create_model() successfully completed......................................
2025-01-12 15:40:19,767:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:19,767:INFO:Creating metrics dataframe
2025-01-12 15:40:19,782:INFO:Initializing Dummy Regressor
2025-01-12 15:40:19,782:INFO:Total runtime is 0.3087206840515137 minutes
2025-01-12 15:40:19,786:INFO:SubProcess create_model() called ==================================
2025-01-12 15:40:19,786:INFO:Initializing create_model()
2025-01-12 15:40:19,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1458DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:19,787:INFO:Checking exceptions
2025-01-12 15:40:19,787:INFO:Importing libraries
2025-01-12 15:40:19,787:INFO:Copying training dataset
2025-01-12 15:40:19,794:INFO:Defining folds
2025-01-12 15:40:19,794:INFO:Declaring metric variables
2025-01-12 15:40:19,801:INFO:Importing untrained model
2025-01-12 15:40:19,805:INFO:Dummy Regressor Imported successfully
2025-01-12 15:40:19,814:INFO:Starting cross validation
2025-01-12 15:40:19,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:40:19,928:INFO:Calculating mean and std
2025-01-12 15:40:19,930:INFO:Creating metrics dataframe
2025-01-12 15:40:19,932:INFO:Uploading results into container
2025-01-12 15:40:19,933:INFO:Uploading model into container now
2025-01-12 15:40:19,933:INFO:_master_model_container: 18
2025-01-12 15:40:19,933:INFO:_display_container: 2
2025-01-12 15:40:19,934:INFO:DummyRegressor()
2025-01-12 15:40:19,934:INFO:create_model() successfully completed......................................
2025-01-12 15:40:20,034:INFO:SubProcess create_model() end ==================================
2025-01-12 15:40:20,035:INFO:Creating metrics dataframe
2025-01-12 15:40:20,053:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 15:40:20,065:INFO:Initializing create_model()
2025-01-12 15:40:20,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:20,065:INFO:Checking exceptions
2025-01-12 15:40:20,067:INFO:Importing libraries
2025-01-12 15:40:20,067:INFO:Copying training dataset
2025-01-12 15:40:20,077:INFO:Defining folds
2025-01-12 15:40:20,077:INFO:Declaring metric variables
2025-01-12 15:40:20,077:INFO:Importing untrained model
2025-01-12 15:40:20,077:INFO:Declaring custom model
2025-01-12 15:40:20,077:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:40:20,079:INFO:Cross validation set to False
2025-01-12 15:40:20,079:INFO:Fitting Model
2025-01-12 15:40:20,351:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:20,351:INFO:create_model() successfully completed......................................
2025-01-12 15:40:20,454:INFO:Initializing create_model()
2025-01-12 15:40:20,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:20,455:INFO:Checking exceptions
2025-01-12 15:40:20,457:INFO:Importing libraries
2025-01-12 15:40:20,457:INFO:Copying training dataset
2025-01-12 15:40:20,464:INFO:Defining folds
2025-01-12 15:40:20,464:INFO:Declaring metric variables
2025-01-12 15:40:20,464:INFO:Importing untrained model
2025-01-12 15:40:20,464:INFO:Declaring custom model
2025-01-12 15:40:20,465:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:40:20,466:INFO:Cross validation set to False
2025-01-12 15:40:20,466:INFO:Fitting Model
2025-01-12 15:40:20,982:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:20,982:INFO:create_model() successfully completed......................................
2025-01-12 15:40:21,082:INFO:Initializing create_model()
2025-01-12 15:40:21,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:40:21,082:INFO:Checking exceptions
2025-01-12 15:40:21,084:INFO:Importing libraries
2025-01-12 15:40:21,084:INFO:Copying training dataset
2025-01-12 15:40:21,091:INFO:Defining folds
2025-01-12 15:40:21,091:INFO:Declaring metric variables
2025-01-12 15:40:21,091:INFO:Importing untrained model
2025-01-12 15:40:21,091:INFO:Declaring custom model
2025-01-12 15:40:21,092:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:40:21,093:INFO:Cross validation set to False
2025-01-12 15:40:21,093:INFO:Fitting Model
2025-01-12 15:40:21,109:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-12 15:40:21,109:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000044 seconds.
2025-01-12 15:40:21,109:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-01-12 15:40:21,109:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-01-12 15:40:21,110:INFO:[LightGBM] [Info] Total Bins 510
2025-01-12 15:40:21,110:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-12 15:40:21,111:INFO:[LightGBM] [Info] Start training from score 3.808225
2025-01-12 15:40:21,164:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:40:21,164:INFO:create_model() successfully completed......................................
2025-01-12 15:40:21,302:INFO:_master_model_container: 18
2025-01-12 15:40:21,302:INFO:_display_container: 2
2025-01-12 15:40:21,303:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)]
2025-01-12 15:40:21,303:INFO:compare_models() successfully completed......................................
2025-01-12 15:40:38,018:INFO:Initializing tune_model()
2025-01-12 15:40:38,018:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-12 15:40:38,018:INFO:Checking exceptions
2025-01-12 15:40:38,037:INFO:Copying training dataset
2025-01-12 15:40:38,042:INFO:Checking base model
2025-01-12 15:40:38,043:INFO:Base model : Extra Trees Regressor
2025-01-12 15:40:38,047:INFO:Declaring metric variables
2025-01-12 15:40:38,052:INFO:Defining Hyperparameters
2025-01-12 15:40:38,301:INFO:Tuning with n_jobs=-1
2025-01-12 15:40:38,301:INFO:Initializing RandomizedSearchCV
2025-01-12 15:41:21,346:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-12 15:41:21,347:INFO:Hyperparameter search completed
2025-01-12 15:41:21,348:INFO:SubProcess create_model() called ==================================
2025-01-12 15:41:21,348:INFO:Initializing create_model()
2025-01-12 15:41:21,349:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1456D3210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-12 15:41:21,349:INFO:Checking exceptions
2025-01-12 15:41:21,349:INFO:Importing libraries
2025-01-12 15:41:21,349:INFO:Copying training dataset
2025-01-12 15:41:21,357:INFO:Defining folds
2025-01-12 15:41:21,357:INFO:Declaring metric variables
2025-01-12 15:41:21,361:INFO:Importing untrained model
2025-01-12 15:41:21,361:INFO:Declaring custom model
2025-01-12 15:41:21,370:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:41:21,379:INFO:Starting cross validation
2025-01-12 15:41:21,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:41:22,761:INFO:Calculating mean and std
2025-01-12 15:41:22,762:INFO:Creating metrics dataframe
2025-01-12 15:41:22,769:INFO:Finalizing model
2025-01-12 15:41:23,089:INFO:Uploading results into container
2025-01-12 15:41:23,091:INFO:Uploading model into container now
2025-01-12 15:41:23,091:INFO:_master_model_container: 19
2025-01-12 15:41:23,092:INFO:_display_container: 3
2025-01-12 15:41:23,093:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123)
2025-01-12 15:41:23,093:INFO:create_model() successfully completed......................................
2025-01-12 15:41:23,189:INFO:SubProcess create_model() end ==================================
2025-01-12 15:41:23,189:INFO:choose_better activated
2025-01-12 15:41:23,194:INFO:SubProcess create_model() called ==================================
2025-01-12 15:41:23,194:INFO:Initializing create_model()
2025-01-12 15:41:23,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:41:23,195:INFO:Checking exceptions
2025-01-12 15:41:23,197:INFO:Importing libraries
2025-01-12 15:41:23,197:INFO:Copying training dataset
2025-01-12 15:41:23,203:INFO:Defining folds
2025-01-12 15:41:23,203:INFO:Declaring metric variables
2025-01-12 15:41:23,203:INFO:Importing untrained model
2025-01-12 15:41:23,204:INFO:Declaring custom model
2025-01-12 15:41:23,204:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:41:23,205:INFO:Starting cross validation
2025-01-12 15:41:23,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:41:25,360:INFO:Calculating mean and std
2025-01-12 15:41:25,361:INFO:Creating metrics dataframe
2025-01-12 15:41:25,363:INFO:Finalizing model
2025-01-12 15:41:25,624:INFO:Uploading results into container
2025-01-12 15:41:25,624:INFO:Uploading model into container now
2025-01-12 15:41:25,625:INFO:_master_model_container: 20
2025-01-12 15:41:25,625:INFO:_display_container: 4
2025-01-12 15:41:25,625:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:41:25,625:INFO:create_model() successfully completed......................................
2025-01-12 15:41:25,725:INFO:SubProcess create_model() end ==================================
2025-01-12 15:41:25,726:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9755
2025-01-12 15:41:25,727:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123) result for R2 is 0.7092
2025-01-12 15:41:25,727:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-12 15:41:25,727:INFO:choose_better completed
2025-01-12 15:41:25,727:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-12 15:41:25,742:INFO:_master_model_container: 20
2025-01-12 15:41:25,742:INFO:_display_container: 3
2025-01-12 15:41:25,743:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:41:25,743:INFO:tune_model() successfully completed......................................
2025-01-12 15:41:25,844:INFO:Initializing tune_model()
2025-01-12 15:41:25,844:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-12 15:41:25,844:INFO:Checking exceptions
2025-01-12 15:41:25,863:INFO:Copying training dataset
2025-01-12 15:41:25,871:INFO:Checking base model
2025-01-12 15:41:25,871:INFO:Base model : Random Forest Regressor
2025-01-12 15:41:25,877:INFO:Declaring metric variables
2025-01-12 15:41:25,881:INFO:Defining Hyperparameters
2025-01-12 15:41:25,999:INFO:Tuning with n_jobs=-1
2025-01-12 15:41:25,999:INFO:Initializing RandomizedSearchCV
2025-01-12 15:43:06,945:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-12 15:43:06,946:INFO:Hyperparameter search completed
2025-01-12 15:43:06,946:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:06,947:INFO:Initializing create_model()
2025-01-12 15:43:06,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F137879BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-12 15:43:06,948:INFO:Checking exceptions
2025-01-12 15:43:06,948:INFO:Importing libraries
2025-01-12 15:43:06,948:INFO:Copying training dataset
2025-01-12 15:43:06,957:INFO:Defining folds
2025-01-12 15:43:06,957:INFO:Declaring metric variables
2025-01-12 15:43:06,961:INFO:Importing untrained model
2025-01-12 15:43:06,962:INFO:Declaring custom model
2025-01-12 15:43:06,968:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:43:06,978:INFO:Starting cross validation
2025-01-12 15:43:06,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:11,761:INFO:Calculating mean and std
2025-01-12 15:43:11,763:INFO:Creating metrics dataframe
2025-01-12 15:43:11,770:INFO:Finalizing model
2025-01-12 15:43:12,375:INFO:Uploading results into container
2025-01-12 15:43:12,376:INFO:Uploading model into container now
2025-01-12 15:43:12,376:INFO:_master_model_container: 21
2025-01-12 15:43:12,376:INFO:_display_container: 4
2025-01-12 15:43:12,378:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123)
2025-01-12 15:43:12,378:INFO:create_model() successfully completed......................................
2025-01-12 15:43:12,480:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:12,481:INFO:choose_better activated
2025-01-12 15:43:12,485:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:12,485:INFO:Initializing create_model()
2025-01-12 15:43:12,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:12,486:INFO:Checking exceptions
2025-01-12 15:43:12,488:INFO:Importing libraries
2025-01-12 15:43:12,488:INFO:Copying training dataset
2025-01-12 15:43:12,495:INFO:Defining folds
2025-01-12 15:43:12,495:INFO:Declaring metric variables
2025-01-12 15:43:12,495:INFO:Importing untrained model
2025-01-12 15:43:12,495:INFO:Declaring custom model
2025-01-12 15:43:12,496:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:43:12,496:INFO:Starting cross validation
2025-01-12 15:43:12,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:17,066:INFO:Calculating mean and std
2025-01-12 15:43:17,068:INFO:Creating metrics dataframe
2025-01-12 15:43:17,070:INFO:Finalizing model
2025-01-12 15:43:17,555:INFO:Uploading results into container
2025-01-12 15:43:17,555:INFO:Uploading model into container now
2025-01-12 15:43:17,556:INFO:_master_model_container: 22
2025-01-12 15:43:17,556:INFO:_display_container: 5
2025-01-12 15:43:17,556:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:17,556:INFO:create_model() successfully completed......................................
2025-01-12 15:43:17,651:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:17,652:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9748
2025-01-12 15:43:17,652:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123) result for R2 is 0.9645
2025-01-12 15:43:17,653:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-12 15:43:17,653:INFO:choose_better completed
2025-01-12 15:43:17,653:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-12 15:43:17,667:INFO:_master_model_container: 22
2025-01-12 15:43:17,667:INFO:_display_container: 4
2025-01-12 15:43:17,668:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:17,668:INFO:tune_model() successfully completed......................................
2025-01-12 15:43:17,763:INFO:Initializing tune_model()
2025-01-12 15:43:17,763:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-12 15:43:17,763:INFO:Checking exceptions
2025-01-12 15:43:17,784:INFO:Copying training dataset
2025-01-12 15:43:17,790:INFO:Checking base model
2025-01-12 15:43:17,790:INFO:Base model : Light Gradient Boosting Machine
2025-01-12 15:43:17,796:INFO:Declaring metric variables
2025-01-12 15:43:17,801:INFO:Defining Hyperparameters
2025-01-12 15:43:17,902:INFO:Tuning with n_jobs=-1
2025-01-12 15:43:17,902:INFO:Initializing RandomizedSearchCV
2025-01-12 15:43:23,414:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_split_gain': 0.7, 'actual_estimator__min_child_samples': 96, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 4, 'actual_estimator__bagging_fraction': 0.6}
2025-01-12 15:43:23,415:INFO:Hyperparameter search completed
2025-01-12 15:43:23,416:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:23,416:INFO:Initializing create_model()
2025-01-12 15:43:23,416:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F137879BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0001, 'num_leaves': 10, 'n_estimators': 180, 'min_split_gain': 0.7, 'min_child_samples': 96, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 4, 'bagging_fraction': 0.6})
2025-01-12 15:43:23,416:INFO:Checking exceptions
2025-01-12 15:43:23,417:INFO:Importing libraries
2025-01-12 15:43:23,417:INFO:Copying training dataset
2025-01-12 15:43:23,424:INFO:Defining folds
2025-01-12 15:43:23,424:INFO:Declaring metric variables
2025-01-12 15:43:23,428:INFO:Importing untrained model
2025-01-12 15:43:23,428:INFO:Declaring custom model
2025-01-12 15:43:23,434:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:43:23,443:INFO:Starting cross validation
2025-01-12 15:43:23,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:23,930:INFO:Calculating mean and std
2025-01-12 15:43:23,932:INFO:Creating metrics dataframe
2025-01-12 15:43:23,941:INFO:Finalizing model
2025-01-12 15:43:23,952:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-12 15:43:23,952:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-12 15:43:23,952:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-12 15:43:23,954:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-12 15:43:23,954:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-01-12 15:43:23,955:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-01-12 15:43:23,955:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2025-01-12 15:43:23,955:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000100 seconds.
2025-01-12 15:43:23,955:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-01-12 15:43:23,955:INFO:[LightGBM] [Info] Total Bins 510
2025-01-12 15:43:23,955:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-12 15:43:23,956:INFO:[LightGBM] [Info] Start training from score 3.808225
2025-01-12 15:43:23,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:23,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,012:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,014:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,014:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,014:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,015:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,017:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,018:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,019:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,020:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,021:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,023:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,025:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,027:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,029:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-01-12 15:43:24,032:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-01-12 15:43:24,044:INFO:Uploading results into container
2025-01-12 15:43:24,051:INFO:Uploading model into container now
2025-01-12 15:43:24,051:INFO:_master_model_container: 23
2025-01-12 15:43:24,051:INFO:_display_container: 5
2025-01-12 15:43:24,052:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1)
2025-01-12 15:43:24,052:INFO:create_model() successfully completed......................................
2025-01-12 15:43:24,155:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:24,155:INFO:choose_better activated
2025-01-12 15:43:24,160:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:24,161:INFO:Initializing create_model()
2025-01-12 15:43:24,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:24,161:INFO:Checking exceptions
2025-01-12 15:43:24,163:INFO:Importing libraries
2025-01-12 15:43:24,163:INFO:Copying training dataset
2025-01-12 15:43:24,171:INFO:Defining folds
2025-01-12 15:43:24,171:INFO:Declaring metric variables
2025-01-12 15:43:24,171:INFO:Importing untrained model
2025-01-12 15:43:24,171:INFO:Declaring custom model
2025-01-12 15:43:24,172:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:43:24,173:INFO:Starting cross validation
2025-01-12 15:43:24,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:24,937:INFO:Calculating mean and std
2025-01-12 15:43:24,938:INFO:Creating metrics dataframe
2025-01-12 15:43:24,940:INFO:Finalizing model
2025-01-12 15:43:24,952:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-01-12 15:43:24,952:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000083 seconds.
2025-01-12 15:43:24,952:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-01-12 15:43:24,953:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-01-12 15:43:24,953:INFO:[LightGBM] [Info] Total Bins 510
2025-01-12 15:43:24,953:INFO:[LightGBM] [Info] Number of data points in the train set: 5369, number of used features: 2
2025-01-12 15:43:24,953:INFO:[LightGBM] [Info] Start training from score 3.808225
2025-01-12 15:43:25,058:INFO:Uploading results into container
2025-01-12 15:43:25,058:INFO:Uploading model into container now
2025-01-12 15:43:25,059:INFO:_master_model_container: 24
2025-01-12 15:43:25,059:INFO:_display_container: 6
2025-01-12 15:43:25,059:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:25,059:INFO:create_model() successfully completed......................................
2025-01-12 15:43:25,155:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:25,155:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9683
2025-01-12 15:43:25,156:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=4, feature_fraction=0.9,
              learning_rate=0.05, min_child_samples=96, min_split_gain=0.7,
              n_estimators=180, n_jobs=-1, num_leaves=10, random_state=123,
              reg_alpha=0.0001, reg_lambda=0.1) result for R2 is 0.9414
2025-01-12 15:43:25,157:INFO:LGBMRegressor(n_jobs=-1, random_state=123) is best model
2025-01-12 15:43:25,157:INFO:choose_better completed
2025-01-12 15:43:25,157:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-12 15:43:25,169:INFO:_master_model_container: 24
2025-01-12 15:43:25,170:INFO:_display_container: 5
2025-01-12 15:43:25,170:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:25,171:INFO:tune_model() successfully completed......................................
2025-01-12 15:43:35,047:INFO:Initializing compare_models()
2025-01-12 15:43:35,047:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 15:43:35,047:INFO:Checking exceptions
2025-01-12 15:43:35,050:INFO:Preparing display monitor
2025-01-12 15:43:35,081:INFO:Initializing custom model Extra Trees Regressor
2025-01-12 15:43:35,081:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-01-12 15:43:35,087:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:35,088:INFO:Initializing create_model()
2025-01-12 15:43:35,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:35,088:INFO:Checking exceptions
2025-01-12 15:43:35,088:INFO:Importing libraries
2025-01-12 15:43:35,088:INFO:Copying training dataset
2025-01-12 15:43:35,098:INFO:Defining folds
2025-01-12 15:43:35,098:INFO:Declaring metric variables
2025-01-12 15:43:35,104:INFO:Importing untrained model
2025-01-12 15:43:35,105:INFO:Declaring custom model
2025-01-12 15:43:35,110:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:43:35,122:INFO:Starting cross validation
2025-01-12 15:43:35,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:37,345:INFO:Calculating mean and std
2025-01-12 15:43:37,347:INFO:Creating metrics dataframe
2025-01-12 15:43:37,350:INFO:Uploading results into container
2025-01-12 15:43:37,351:INFO:Uploading model into container now
2025-01-12 15:43:37,352:INFO:_master_model_container: 25
2025-01-12 15:43:37,352:INFO:_display_container: 6
2025-01-12 15:43:37,352:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:37,352:INFO:create_model() successfully completed......................................
2025-01-12 15:43:37,447:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:37,448:INFO:Creating metrics dataframe
2025-01-12 15:43:37,456:INFO:Initializing custom model Random Forest Regressor
2025-01-12 15:43:37,456:INFO:Total runtime is 0.039605836073557533 minutes
2025-01-12 15:43:37,461:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:37,461:INFO:Initializing create_model()
2025-01-12 15:43:37,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:37,462:INFO:Checking exceptions
2025-01-12 15:43:37,462:INFO:Importing libraries
2025-01-12 15:43:37,462:INFO:Copying training dataset
2025-01-12 15:43:37,469:INFO:Defining folds
2025-01-12 15:43:37,469:INFO:Declaring metric variables
2025-01-12 15:43:37,474:INFO:Importing untrained model
2025-01-12 15:43:37,475:INFO:Declaring custom model
2025-01-12 15:43:37,483:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:43:37,492:INFO:Starting cross validation
2025-01-12 15:43:37,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:41,418:INFO:Calculating mean and std
2025-01-12 15:43:41,420:INFO:Creating metrics dataframe
2025-01-12 15:43:41,422:INFO:Uploading results into container
2025-01-12 15:43:41,423:INFO:Uploading model into container now
2025-01-12 15:43:41,423:INFO:_master_model_container: 26
2025-01-12 15:43:41,423:INFO:_display_container: 6
2025-01-12 15:43:41,424:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:41,424:INFO:create_model() successfully completed......................................
2025-01-12 15:43:41,523:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:41,523:INFO:Creating metrics dataframe
2025-01-12 15:43:41,534:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-12 15:43:41,534:INFO:Total runtime is 0.10757388273874918 minutes
2025-01-12 15:43:41,538:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:41,539:INFO:Initializing create_model()
2025-01-12 15:43:41,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:41,539:INFO:Checking exceptions
2025-01-12 15:43:41,539:INFO:Importing libraries
2025-01-12 15:43:41,539:INFO:Copying training dataset
2025-01-12 15:43:41,547:INFO:Defining folds
2025-01-12 15:43:41,547:INFO:Declaring metric variables
2025-01-12 15:43:41,551:INFO:Importing untrained model
2025-01-12 15:43:41,551:INFO:Declaring custom model
2025-01-12 15:43:41,558:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:43:41,569:INFO:Starting cross validation
2025-01-12 15:43:41,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:42,263:INFO:Calculating mean and std
2025-01-12 15:43:42,265:INFO:Creating metrics dataframe
2025-01-12 15:43:42,267:INFO:Uploading results into container
2025-01-12 15:43:42,268:INFO:Uploading model into container now
2025-01-12 15:43:42,268:INFO:_master_model_container: 27
2025-01-12 15:43:42,269:INFO:_display_container: 6
2025-01-12 15:43:42,269:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:42,270:INFO:create_model() successfully completed......................................
2025-01-12 15:43:42,366:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:42,366:INFO:Creating metrics dataframe
2025-01-12 15:43:42,376:INFO:Initializing custom model Extra Trees Regressor
2025-01-12 15:43:42,377:INFO:Total runtime is 0.12161509990692138 minutes
2025-01-12 15:43:42,381:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:42,382:INFO:Initializing create_model()
2025-01-12 15:43:42,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:42,382:INFO:Checking exceptions
2025-01-12 15:43:42,382:INFO:Importing libraries
2025-01-12 15:43:42,382:INFO:Copying training dataset
2025-01-12 15:43:42,389:INFO:Defining folds
2025-01-12 15:43:42,389:INFO:Declaring metric variables
2025-01-12 15:43:42,396:INFO:Importing untrained model
2025-01-12 15:43:42,396:INFO:Declaring custom model
2025-01-12 15:43:42,404:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:43:42,412:INFO:Starting cross validation
2025-01-12 15:43:42,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:44,669:INFO:Calculating mean and std
2025-01-12 15:43:44,671:INFO:Creating metrics dataframe
2025-01-12 15:43:44,673:INFO:Uploading results into container
2025-01-12 15:43:44,674:INFO:Uploading model into container now
2025-01-12 15:43:44,674:INFO:_master_model_container: 28
2025-01-12 15:43:44,674:INFO:_display_container: 6
2025-01-12 15:43:44,674:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:44,675:INFO:create_model() successfully completed......................................
2025-01-12 15:43:44,772:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:44,772:INFO:Creating metrics dataframe
2025-01-12 15:43:44,783:INFO:Initializing custom model Random Forest Regressor
2025-01-12 15:43:44,784:INFO:Total runtime is 0.16172451575597127 minutes
2025-01-12 15:43:44,788:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:44,789:INFO:Initializing create_model()
2025-01-12 15:43:44,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:44,789:INFO:Checking exceptions
2025-01-12 15:43:44,789:INFO:Importing libraries
2025-01-12 15:43:44,789:INFO:Copying training dataset
2025-01-12 15:43:44,796:INFO:Defining folds
2025-01-12 15:43:44,796:INFO:Declaring metric variables
2025-01-12 15:43:44,802:INFO:Importing untrained model
2025-01-12 15:43:44,802:INFO:Declaring custom model
2025-01-12 15:43:44,809:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:43:44,819:INFO:Starting cross validation
2025-01-12 15:43:44,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:48,822:INFO:Calculating mean and std
2025-01-12 15:43:48,823:INFO:Creating metrics dataframe
2025-01-12 15:43:48,826:INFO:Uploading results into container
2025-01-12 15:43:48,826:INFO:Uploading model into container now
2025-01-12 15:43:48,827:INFO:_master_model_container: 29
2025-01-12 15:43:48,827:INFO:_display_container: 6
2025-01-12 15:43:48,827:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:48,827:INFO:create_model() successfully completed......................................
2025-01-12 15:43:48,922:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:48,922:INFO:Creating metrics dataframe
2025-01-12 15:43:48,934:INFO:Initializing custom model Light Gradient Boosting Machine
2025-01-12 15:43:48,934:INFO:Total runtime is 0.23090809981028237 minutes
2025-01-12 15:43:48,940:INFO:SubProcess create_model() called ==================================
2025-01-12 15:43:48,940:INFO:Initializing create_model()
2025-01-12 15:43:48,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145CEBA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:48,941:INFO:Checking exceptions
2025-01-12 15:43:48,941:INFO:Importing libraries
2025-01-12 15:43:48,941:INFO:Copying training dataset
2025-01-12 15:43:48,948:INFO:Defining folds
2025-01-12 15:43:48,948:INFO:Declaring metric variables
2025-01-12 15:43:48,954:INFO:Importing untrained model
2025-01-12 15:43:48,954:INFO:Declaring custom model
2025-01-12 15:43:48,960:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:43:48,971:INFO:Starting cross validation
2025-01-12 15:43:48,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:43:49,673:INFO:Calculating mean and std
2025-01-12 15:43:49,674:INFO:Creating metrics dataframe
2025-01-12 15:43:49,678:INFO:Uploading results into container
2025-01-12 15:43:49,679:INFO:Uploading model into container now
2025-01-12 15:43:49,680:INFO:_master_model_container: 30
2025-01-12 15:43:49,680:INFO:_display_container: 6
2025-01-12 15:43:49,680:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:49,680:INFO:create_model() successfully completed......................................
2025-01-12 15:43:49,776:INFO:SubProcess create_model() end ==================================
2025-01-12 15:43:49,777:INFO:Creating metrics dataframe
2025-01-12 15:43:49,788:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 15:43:49,800:INFO:Initializing create_model()
2025-01-12 15:43:49,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:43:49,801:INFO:Checking exceptions
2025-01-12 15:43:49,803:INFO:Importing libraries
2025-01-12 15:43:49,803:INFO:Copying training dataset
2025-01-12 15:43:49,811:INFO:Defining folds
2025-01-12 15:43:49,812:INFO:Declaring metric variables
2025-01-12 15:43:49,812:INFO:Importing untrained model
2025-01-12 15:43:49,812:INFO:Declaring custom model
2025-01-12 15:43:49,813:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:43:49,814:INFO:Cross validation set to False
2025-01-12 15:43:49,826:INFO:Fitting Model
2025-01-12 15:43:50,090:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:50,090:INFO:create_model() successfully completed......................................
2025-01-12 15:43:50,211:INFO:_master_model_container: 30
2025-01-12 15:43:50,211:INFO:_display_container: 6
2025-01-12 15:43:50,211:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:43:50,212:INFO:compare_models() successfully completed......................................
2025-01-12 15:43:56,713:INFO:Initializing plot_model()
2025-01-12 15:43:56,713:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:43:56,713:INFO:Checking exceptions
2025-01-12 15:43:56,757:INFO:Preloading libraries
2025-01-12 15:43:56,846:INFO:Copying training dataset
2025-01-12 15:43:56,846:INFO:Plot type: residuals
2025-01-12 15:43:57,135:INFO:Fitting Model
2025-01-12 15:43:57,172:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-12 15:43:57,346:INFO:Scoring test/hold-out set
2025-01-12 15:43:58,375:INFO:Visual Rendered Successfully
2025-01-12 15:43:58,478:INFO:plot_model() successfully completed......................................
2025-01-12 15:43:58,742:INFO:Initializing plot_model()
2025-01-12 15:43:58,743:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:43:58,743:INFO:Checking exceptions
2025-01-12 15:43:58,785:INFO:Preloading libraries
2025-01-12 15:43:58,872:INFO:Copying training dataset
2025-01-12 15:43:58,872:INFO:Plot type: error
2025-01-12 15:43:59,086:INFO:Fitting Model
2025-01-12 15:43:59,087:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-12 15:43:59,087:INFO:Scoring test/hold-out set
2025-01-12 15:43:59,514:INFO:Visual Rendered Successfully
2025-01-12 15:43:59,612:INFO:plot_model() successfully completed......................................
2025-01-12 15:43:59,760:INFO:Initializing plot_model()
2025-01-12 15:43:59,760:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:43:59,760:INFO:Checking exceptions
2025-01-12 15:43:59,793:INFO:Preloading libraries
2025-01-12 15:43:59,882:INFO:Copying training dataset
2025-01-12 15:43:59,882:INFO:Plot type: feature
2025-01-12 15:43:59,883:WARNING:No coef_ found. Trying feature_importances_
2025-01-12 15:44:00,141:INFO:Visual Rendered Successfully
2025-01-12 15:44:00,239:INFO:plot_model() successfully completed......................................
2025-01-12 15:44:03,330:INFO:Initializing finalize_model()
2025-01-12 15:44:03,330:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)], fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 15:44:03,332:INFO:Finalizing [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)]
2025-01-12 15:44:03,337:INFO:Initializing create_model()
2025-01-12 15:44:03,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), LGBMRegressor(n_jobs=-1, random_state=123)], fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:44:03,337:INFO:Checking exceptions
2025-01-12 15:44:25,126:INFO:Initializing finalize_model()
2025-01-12 15:44:25,126:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 15:44:25,126:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:44:25,130:INFO:Initializing create_model()
2025-01-12 15:44:25,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:44:25,130:INFO:Checking exceptions
2025-01-12 15:44:25,132:INFO:Importing libraries
2025-01-12 15:44:25,132:INFO:Copying training dataset
2025-01-12 15:44:25,133:INFO:Defining folds
2025-01-12 15:44:25,133:INFO:Declaring metric variables
2025-01-12 15:44:25,133:INFO:Importing untrained model
2025-01-12 15:44:25,133:INFO:Declaring custom model
2025-01-12 15:44:25,134:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:44:25,135:INFO:Cross validation set to False
2025-01-12 15:44:25,135:INFO:Fitting Model
2025-01-12 15:44:25,483:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:44:25,483:INFO:create_model() successfully completed......................................
2025-01-12 15:44:25,624:INFO:_master_model_container: 30
2025-01-12 15:44:25,625:INFO:_display_container: 6
2025-01-12 15:44:25,633:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:44:25,633:INFO:finalize_model() successfully completed......................................
2025-01-12 15:49:00,883:INFO:Initializing predict_model()
2025-01-12 15:49:00,884:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1457E3690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F16CDB2660>)
2025-01-12 15:49:00,884:INFO:Checking exceptions
2025-01-12 15:49:00,884:INFO:Preloading libraries
2025-01-12 15:49:00,886:INFO:Set up data.
2025-01-12 15:49:00,889:INFO:Set up index.
2025-01-12 15:52:02,471:INFO:PyCaret RegressionExperiment
2025-01-12 15:52:02,471:INFO:Logging name: reg-default-name
2025-01-12 15:52:02,471:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-12 15:52:02,471:INFO:version 3.3.2
2025-01-12 15:52:02,471:INFO:Initializing setup()
2025-01-12 15:52:02,471:INFO:self.USI: 0862
2025-01-12 15:52:02,471:INFO:self._variable_keys: {'target_param', 'fold_generator', 'fold_groups_param', 'X_test', 'y', 'exp_id', 'y_test', 'y_train', 'idx', 'logging_param', 'data', 'log_plots_param', '_available_plots', 'memory', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'transform_target_param', 'seed', 'n_jobs_param', 'X', 'X_train', 'html_param'}
2025-01-12 15:52:02,471:INFO:Checking environment
2025-01-12 15:52:02,471:INFO:python_version: 3.11.11
2025-01-12 15:52:02,471:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-12 15:52:02,472:INFO:machine: AMD64
2025-01-12 15:52:02,472:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-12 15:52:02,472:INFO:Memory: svmem(total=6439919616, available=1311862784, percent=79.6, used=5128056832, free=1311862784)
2025-01-12 15:52:02,472:INFO:Physical Core: 4
2025-01-12 15:52:02,472:INFO:Logical Core: 4
2025-01-12 15:52:02,472:INFO:Checking libraries
2025-01-12 15:52:02,472:INFO:System:
2025-01-12 15:52:02,472:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-12 15:52:02,472:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-12 15:52:02,473:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-12 15:52:02,473:INFO:PyCaret required dependencies:
2025-01-12 15:52:02,473:INFO:                 pip: 24.2
2025-01-12 15:52:02,473:INFO:          setuptools: 75.1.0
2025-01-12 15:52:02,473:INFO:             pycaret: 3.3.2
2025-01-12 15:52:02,473:INFO:             IPython: 8.30.0
2025-01-12 15:52:02,473:INFO:          ipywidgets: 8.1.5
2025-01-12 15:52:02,474:INFO:                tqdm: 4.67.1
2025-01-12 15:52:02,474:INFO:               numpy: 1.26.4
2025-01-12 15:52:02,474:INFO:              pandas: 2.1.4
2025-01-12 15:52:02,474:INFO:              jinja2: 3.1.4
2025-01-12 15:52:02,474:INFO:               scipy: 1.11.4
2025-01-12 15:52:02,474:INFO:              joblib: 1.3.2
2025-01-12 15:52:02,474:INFO:             sklearn: 1.4.2
2025-01-12 15:52:02,474:INFO:                pyod: 2.0.3
2025-01-12 15:52:02,474:INFO:            imblearn: 0.13.0
2025-01-12 15:52:02,475:INFO:   category_encoders: 2.7.0
2025-01-12 15:52:02,475:INFO:            lightgbm: 4.5.0
2025-01-12 15:52:02,475:INFO:               numba: 0.60.0
2025-01-12 15:52:02,475:INFO:            requests: 2.32.3
2025-01-12 15:52:02,475:INFO:          matplotlib: 3.7.5
2025-01-12 15:52:02,475:INFO:          scikitplot: 0.3.7
2025-01-12 15:52:02,475:INFO:         yellowbrick: 1.5
2025-01-12 15:52:02,475:INFO:              plotly: 5.24.1
2025-01-12 15:52:02,475:INFO:    plotly-resampler: Not installed
2025-01-12 15:52:02,475:INFO:             kaleido: 0.2.1
2025-01-12 15:52:02,475:INFO:           schemdraw: 0.15
2025-01-12 15:52:02,476:INFO:         statsmodels: 0.14.4
2025-01-12 15:52:02,476:INFO:              sktime: 0.26.0
2025-01-12 15:52:02,476:INFO:               tbats: 1.1.3
2025-01-12 15:52:02,476:INFO:            pmdarima: 2.0.4
2025-01-12 15:52:02,476:INFO:              psutil: 5.9.0
2025-01-12 15:52:02,476:INFO:          markupsafe: 2.1.3
2025-01-12 15:52:02,476:INFO:             pickle5: Not installed
2025-01-12 15:52:02,476:INFO:         cloudpickle: 3.1.0
2025-01-12 15:52:02,476:INFO:         deprecation: 2.1.0
2025-01-12 15:52:02,476:INFO:              xxhash: 3.5.0
2025-01-12 15:52:02,476:INFO:           wurlitzer: Not installed
2025-01-12 15:52:02,477:INFO:PyCaret optional dependencies:
2025-01-12 15:52:02,477:INFO:                shap: Not installed
2025-01-12 15:52:02,477:INFO:           interpret: Not installed
2025-01-12 15:52:02,477:INFO:                umap: Not installed
2025-01-12 15:52:02,477:INFO:     ydata_profiling: Not installed
2025-01-12 15:52:02,477:INFO:  explainerdashboard: Not installed
2025-01-12 15:52:02,477:INFO:             autoviz: Not installed
2025-01-12 15:52:02,477:INFO:           fairlearn: Not installed
2025-01-12 15:52:02,477:INFO:          deepchecks: Not installed
2025-01-12 15:52:02,477:INFO:             xgboost: Not installed
2025-01-12 15:52:02,477:INFO:            catboost: Not installed
2025-01-12 15:52:02,478:INFO:              kmodes: Not installed
2025-01-12 15:52:02,478:INFO:             mlxtend: Not installed
2025-01-12 15:52:02,478:INFO:       statsforecast: Not installed
2025-01-12 15:52:02,478:INFO:        tune_sklearn: Not installed
2025-01-12 15:52:02,478:INFO:                 ray: Not installed
2025-01-12 15:52:02,478:INFO:            hyperopt: Not installed
2025-01-12 15:52:02,478:INFO:              optuna: Not installed
2025-01-12 15:52:02,478:INFO:               skopt: Not installed
2025-01-12 15:52:02,478:INFO:              mlflow: Not installed
2025-01-12 15:52:02,478:INFO:              gradio: Not installed
2025-01-12 15:52:02,479:INFO:             fastapi: Not installed
2025-01-12 15:52:02,479:INFO:             uvicorn: Not installed
2025-01-12 15:52:02,479:INFO:              m2cgen: Not installed
2025-01-12 15:52:02,479:INFO:           evidently: Not installed
2025-01-12 15:52:02,479:INFO:               fugue: Not installed
2025-01-12 15:52:02,479:INFO:           streamlit: 1.40.1
2025-01-12 15:52:02,479:INFO:             prophet: Not installed
2025-01-12 15:52:02,479:INFO:None
2025-01-12 15:52:02,479:INFO:Set up data.
2025-01-12 15:52:02,485:INFO:Set up folding strategy.
2025-01-12 15:52:02,485:INFO:Set up train/test split.
2025-01-12 15:52:02,489:INFO:Set up index.
2025-01-12 15:52:02,490:INFO:Assigning column types.
2025-01-12 15:52:02,494:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-12 15:52:02,494:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,505:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,515:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,749:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:02,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:02,751:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,761:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:02,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,004:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-12 15:52:03,014:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,254:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,266:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,277:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,405:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,509:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-12 15:52:03,579:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:03,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:03,910:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,047:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,152:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-12 15:52:04,302:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,457:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,713:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-12 15:52:04,860:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:04,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:04,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 15:52:05,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,211:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-12 15:52:05,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:05,718:INFO:Preparing preprocessing pipeline...
2025-01-12 15:52:05,718:INFO:Set up simple imputation.
2025-01-12 15:52:05,719:INFO:Set up column name cleaning.
2025-01-12 15:52:05,790:INFO:Finished creating preprocessing pipeline.
2025-01-12 15:52:05,797:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-12 15:52:05,797:INFO:Creating final display dataframe.
2025-01-12 15:52:06,008:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           super95
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0862
2025-01-12 15:52:06,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:06,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:06,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:06,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 15:52:06,521:INFO:setup() successfully completed in 4.05s...............
2025-01-12 15:52:06,538:INFO:Initializing compare_models()
2025-01-12 15:52:06,538:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 15:52:06,539:INFO:Checking exceptions
2025-01-12 15:52:06,542:INFO:Preparing display monitor
2025-01-12 15:52:06,580:INFO:Initializing Linear Regression
2025-01-12 15:52:06,580:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-01-12 15:52:06,584:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:06,584:INFO:Initializing create_model()
2025-01-12 15:52:06,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:06,585:INFO:Checking exceptions
2025-01-12 15:52:06,585:INFO:Importing libraries
2025-01-12 15:52:06,585:INFO:Copying training dataset
2025-01-12 15:52:06,598:INFO:Defining folds
2025-01-12 15:52:06,598:INFO:Declaring metric variables
2025-01-12 15:52:06,602:INFO:Importing untrained model
2025-01-12 15:52:06,608:INFO:Linear Regression Imported successfully
2025-01-12 15:52:06,627:INFO:Starting cross validation
2025-01-12 15:52:06,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:11,117:INFO:Calculating mean and std
2025-01-12 15:52:11,119:INFO:Creating metrics dataframe
2025-01-12 15:52:11,122:INFO:Uploading results into container
2025-01-12 15:52:11,122:INFO:Uploading model into container now
2025-01-12 15:52:11,123:INFO:_master_model_container: 1
2025-01-12 15:52:11,123:INFO:_display_container: 2
2025-01-12 15:52:11,124:INFO:LinearRegression(n_jobs=-1)
2025-01-12 15:52:11,124:INFO:create_model() successfully completed......................................
2025-01-12 15:52:11,357:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:11,357:INFO:Creating metrics dataframe
2025-01-12 15:52:11,366:INFO:Initializing Lasso Regression
2025-01-12 15:52:11,366:INFO:Total runtime is 0.07978396813074747 minutes
2025-01-12 15:52:11,370:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:11,371:INFO:Initializing create_model()
2025-01-12 15:52:11,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:11,371:INFO:Checking exceptions
2025-01-12 15:52:11,371:INFO:Importing libraries
2025-01-12 15:52:11,371:INFO:Copying training dataset
2025-01-12 15:52:11,379:INFO:Defining folds
2025-01-12 15:52:11,380:INFO:Declaring metric variables
2025-01-12 15:52:11,384:INFO:Importing untrained model
2025-01-12 15:52:11,389:INFO:Lasso Regression Imported successfully
2025-01-12 15:52:11,402:INFO:Starting cross validation
2025-01-12 15:52:11,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:11,533:INFO:Calculating mean and std
2025-01-12 15:52:11,534:INFO:Creating metrics dataframe
2025-01-12 15:52:11,538:INFO:Uploading results into container
2025-01-12 15:52:11,538:INFO:Uploading model into container now
2025-01-12 15:52:11,538:INFO:_master_model_container: 2
2025-01-12 15:52:11,538:INFO:_display_container: 2
2025-01-12 15:52:11,539:INFO:Lasso(random_state=123)
2025-01-12 15:52:11,539:INFO:create_model() successfully completed......................................
2025-01-12 15:52:11,768:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:11,769:INFO:Creating metrics dataframe
2025-01-12 15:52:11,780:INFO:Initializing Ridge Regression
2025-01-12 15:52:11,780:INFO:Total runtime is 0.08669574260711668 minutes
2025-01-12 15:52:11,784:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:11,785:INFO:Initializing create_model()
2025-01-12 15:52:11,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:11,785:INFO:Checking exceptions
2025-01-12 15:52:11,785:INFO:Importing libraries
2025-01-12 15:52:11,785:INFO:Copying training dataset
2025-01-12 15:52:11,796:INFO:Defining folds
2025-01-12 15:52:11,796:INFO:Declaring metric variables
2025-01-12 15:52:11,801:INFO:Importing untrained model
2025-01-12 15:52:11,806:INFO:Ridge Regression Imported successfully
2025-01-12 15:52:11,817:INFO:Starting cross validation
2025-01-12 15:52:11,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:11,932:INFO:Calculating mean and std
2025-01-12 15:52:11,933:INFO:Creating metrics dataframe
2025-01-12 15:52:11,936:INFO:Uploading results into container
2025-01-12 15:52:11,936:INFO:Uploading model into container now
2025-01-12 15:52:11,937:INFO:_master_model_container: 3
2025-01-12 15:52:11,937:INFO:_display_container: 2
2025-01-12 15:52:11,937:INFO:Ridge(random_state=123)
2025-01-12 15:52:11,937:INFO:create_model() successfully completed......................................
2025-01-12 15:52:12,160:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:12,160:INFO:Creating metrics dataframe
2025-01-12 15:52:12,170:INFO:Initializing Elastic Net
2025-01-12 15:52:12,170:INFO:Total runtime is 0.093192716439565 minutes
2025-01-12 15:52:12,175:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:12,176:INFO:Initializing create_model()
2025-01-12 15:52:12,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:12,176:INFO:Checking exceptions
2025-01-12 15:52:12,176:INFO:Importing libraries
2025-01-12 15:52:12,176:INFO:Copying training dataset
2025-01-12 15:52:12,183:INFO:Defining folds
2025-01-12 15:52:12,183:INFO:Declaring metric variables
2025-01-12 15:52:12,188:INFO:Importing untrained model
2025-01-12 15:52:12,194:INFO:Elastic Net Imported successfully
2025-01-12 15:52:12,205:INFO:Starting cross validation
2025-01-12 15:52:12,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:12,390:INFO:Calculating mean and std
2025-01-12 15:52:12,392:INFO:Creating metrics dataframe
2025-01-12 15:52:12,396:INFO:Uploading results into container
2025-01-12 15:52:12,396:INFO:Uploading model into container now
2025-01-12 15:52:12,397:INFO:_master_model_container: 4
2025-01-12 15:52:12,397:INFO:_display_container: 2
2025-01-12 15:52:12,397:INFO:ElasticNet(random_state=123)
2025-01-12 15:52:12,397:INFO:create_model() successfully completed......................................
2025-01-12 15:52:12,615:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:12,615:INFO:Creating metrics dataframe
2025-01-12 15:52:12,626:INFO:Initializing Least Angle Regression
2025-01-12 15:52:12,626:INFO:Total runtime is 0.1007869243621826 minutes
2025-01-12 15:52:12,631:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:12,631:INFO:Initializing create_model()
2025-01-12 15:52:12,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:12,631:INFO:Checking exceptions
2025-01-12 15:52:12,632:INFO:Importing libraries
2025-01-12 15:52:12,632:INFO:Copying training dataset
2025-01-12 15:52:12,639:INFO:Defining folds
2025-01-12 15:52:12,639:INFO:Declaring metric variables
2025-01-12 15:52:12,646:INFO:Importing untrained model
2025-01-12 15:52:12,657:INFO:Least Angle Regression Imported successfully
2025-01-12 15:52:12,670:INFO:Starting cross validation
2025-01-12 15:52:12,671:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:12,799:INFO:Calculating mean and std
2025-01-12 15:52:12,800:INFO:Creating metrics dataframe
2025-01-12 15:52:12,803:INFO:Uploading results into container
2025-01-12 15:52:12,803:INFO:Uploading model into container now
2025-01-12 15:52:12,804:INFO:_master_model_container: 5
2025-01-12 15:52:12,804:INFO:_display_container: 2
2025-01-12 15:52:12,804:INFO:Lars(random_state=123)
2025-01-12 15:52:12,804:INFO:create_model() successfully completed......................................
2025-01-12 15:52:13,024:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:13,024:INFO:Creating metrics dataframe
2025-01-12 15:52:13,035:INFO:Initializing Lasso Least Angle Regression
2025-01-12 15:52:13,035:INFO:Total runtime is 0.10759984254837035 minutes
2025-01-12 15:52:13,040:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:13,040:INFO:Initializing create_model()
2025-01-12 15:52:13,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:13,041:INFO:Checking exceptions
2025-01-12 15:52:13,041:INFO:Importing libraries
2025-01-12 15:52:13,041:INFO:Copying training dataset
2025-01-12 15:52:13,049:INFO:Defining folds
2025-01-12 15:52:13,049:INFO:Declaring metric variables
2025-01-12 15:52:13,054:INFO:Importing untrained model
2025-01-12 15:52:13,062:INFO:Lasso Least Angle Regression Imported successfully
2025-01-12 15:52:13,070:INFO:Starting cross validation
2025-01-12 15:52:13,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:13,187:INFO:Calculating mean and std
2025-01-12 15:52:13,189:INFO:Creating metrics dataframe
2025-01-12 15:52:13,193:INFO:Uploading results into container
2025-01-12 15:52:13,193:INFO:Uploading model into container now
2025-01-12 15:52:13,194:INFO:_master_model_container: 6
2025-01-12 15:52:13,194:INFO:_display_container: 2
2025-01-12 15:52:13,194:INFO:LassoLars(random_state=123)
2025-01-12 15:52:13,194:INFO:create_model() successfully completed......................................
2025-01-12 15:52:13,414:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:13,415:INFO:Creating metrics dataframe
2025-01-12 15:52:13,426:INFO:Initializing Orthogonal Matching Pursuit
2025-01-12 15:52:13,426:INFO:Total runtime is 0.11412857770919799 minutes
2025-01-12 15:52:13,431:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:13,431:INFO:Initializing create_model()
2025-01-12 15:52:13,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:13,431:INFO:Checking exceptions
2025-01-12 15:52:13,431:INFO:Importing libraries
2025-01-12 15:52:13,432:INFO:Copying training dataset
2025-01-12 15:52:13,438:INFO:Defining folds
2025-01-12 15:52:13,438:INFO:Declaring metric variables
2025-01-12 15:52:13,443:INFO:Importing untrained model
2025-01-12 15:52:13,450:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-12 15:52:13,460:INFO:Starting cross validation
2025-01-12 15:52:13,461:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:13,584:INFO:Calculating mean and std
2025-01-12 15:52:13,586:INFO:Creating metrics dataframe
2025-01-12 15:52:13,588:INFO:Uploading results into container
2025-01-12 15:52:13,589:INFO:Uploading model into container now
2025-01-12 15:52:13,589:INFO:_master_model_container: 7
2025-01-12 15:52:13,589:INFO:_display_container: 2
2025-01-12 15:52:13,589:INFO:OrthogonalMatchingPursuit()
2025-01-12 15:52:13,590:INFO:create_model() successfully completed......................................
2025-01-12 15:52:13,814:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:13,814:INFO:Creating metrics dataframe
2025-01-12 15:52:13,827:INFO:Initializing Bayesian Ridge
2025-01-12 15:52:13,827:INFO:Total runtime is 0.1208077311515808 minutes
2025-01-12 15:52:13,832:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:13,832:INFO:Initializing create_model()
2025-01-12 15:52:13,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:13,833:INFO:Checking exceptions
2025-01-12 15:52:13,833:INFO:Importing libraries
2025-01-12 15:52:13,833:INFO:Copying training dataset
2025-01-12 15:52:13,840:INFO:Defining folds
2025-01-12 15:52:13,840:INFO:Declaring metric variables
2025-01-12 15:52:13,845:INFO:Importing untrained model
2025-01-12 15:52:13,852:INFO:Bayesian Ridge Imported successfully
2025-01-12 15:52:13,861:INFO:Starting cross validation
2025-01-12 15:52:13,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:14,009:INFO:Calculating mean and std
2025-01-12 15:52:14,011:INFO:Creating metrics dataframe
2025-01-12 15:52:14,013:INFO:Uploading results into container
2025-01-12 15:52:14,014:INFO:Uploading model into container now
2025-01-12 15:52:14,014:INFO:_master_model_container: 8
2025-01-12 15:52:14,014:INFO:_display_container: 2
2025-01-12 15:52:14,015:INFO:BayesianRidge()
2025-01-12 15:52:14,015:INFO:create_model() successfully completed......................................
2025-01-12 15:52:14,231:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:14,231:INFO:Creating metrics dataframe
2025-01-12 15:52:14,245:INFO:Initializing Passive Aggressive Regressor
2025-01-12 15:52:14,245:INFO:Total runtime is 0.12777005434036254 minutes
2025-01-12 15:52:14,251:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:14,251:INFO:Initializing create_model()
2025-01-12 15:52:14,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:14,251:INFO:Checking exceptions
2025-01-12 15:52:14,251:INFO:Importing libraries
2025-01-12 15:52:14,251:INFO:Copying training dataset
2025-01-12 15:52:14,258:INFO:Defining folds
2025-01-12 15:52:14,258:INFO:Declaring metric variables
2025-01-12 15:52:14,264:INFO:Importing untrained model
2025-01-12 15:52:14,269:INFO:Passive Aggressive Regressor Imported successfully
2025-01-12 15:52:14,280:INFO:Starting cross validation
2025-01-12 15:52:14,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:14,440:INFO:Calculating mean and std
2025-01-12 15:52:14,442:INFO:Creating metrics dataframe
2025-01-12 15:52:14,445:INFO:Uploading results into container
2025-01-12 15:52:14,446:INFO:Uploading model into container now
2025-01-12 15:52:14,446:INFO:_master_model_container: 9
2025-01-12 15:52:14,447:INFO:_display_container: 2
2025-01-12 15:52:14,448:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-12 15:52:14,448:INFO:create_model() successfully completed......................................
2025-01-12 15:52:14,665:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:14,666:INFO:Creating metrics dataframe
2025-01-12 15:52:14,677:INFO:Initializing Huber Regressor
2025-01-12 15:52:14,677:INFO:Total runtime is 0.13498220046361287 minutes
2025-01-12 15:52:14,683:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:14,683:INFO:Initializing create_model()
2025-01-12 15:52:14,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:14,683:INFO:Checking exceptions
2025-01-12 15:52:14,683:INFO:Importing libraries
2025-01-12 15:52:14,683:INFO:Copying training dataset
2025-01-12 15:52:14,690:INFO:Defining folds
2025-01-12 15:52:14,690:INFO:Declaring metric variables
2025-01-12 15:52:14,694:INFO:Importing untrained model
2025-01-12 15:52:14,701:INFO:Huber Regressor Imported successfully
2025-01-12 15:52:14,711:INFO:Starting cross validation
2025-01-12 15:52:14,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:14,933:INFO:Calculating mean and std
2025-01-12 15:52:14,934:INFO:Creating metrics dataframe
2025-01-12 15:52:14,937:INFO:Uploading results into container
2025-01-12 15:52:14,938:INFO:Uploading model into container now
2025-01-12 15:52:14,938:INFO:_master_model_container: 10
2025-01-12 15:52:14,939:INFO:_display_container: 2
2025-01-12 15:52:14,939:INFO:HuberRegressor()
2025-01-12 15:52:14,940:INFO:create_model() successfully completed......................................
2025-01-12 15:52:15,156:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:15,156:INFO:Creating metrics dataframe
2025-01-12 15:52:15,170:INFO:Initializing K Neighbors Regressor
2025-01-12 15:52:15,170:INFO:Total runtime is 0.14319409529368082 minutes
2025-01-12 15:52:15,174:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:15,174:INFO:Initializing create_model()
2025-01-12 15:52:15,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:15,174:INFO:Checking exceptions
2025-01-12 15:52:15,174:INFO:Importing libraries
2025-01-12 15:52:15,175:INFO:Copying training dataset
2025-01-12 15:52:15,183:INFO:Defining folds
2025-01-12 15:52:15,183:INFO:Declaring metric variables
2025-01-12 15:52:15,187:INFO:Importing untrained model
2025-01-12 15:52:15,194:INFO:K Neighbors Regressor Imported successfully
2025-01-12 15:52:15,203:INFO:Starting cross validation
2025-01-12 15:52:15,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:15,448:INFO:Calculating mean and std
2025-01-12 15:52:15,449:INFO:Creating metrics dataframe
2025-01-12 15:52:15,452:INFO:Uploading results into container
2025-01-12 15:52:15,452:INFO:Uploading model into container now
2025-01-12 15:52:15,453:INFO:_master_model_container: 11
2025-01-12 15:52:15,453:INFO:_display_container: 2
2025-01-12 15:52:15,453:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-12 15:52:15,453:INFO:create_model() successfully completed......................................
2025-01-12 15:52:15,673:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:15,673:INFO:Creating metrics dataframe
2025-01-12 15:52:15,687:INFO:Initializing Decision Tree Regressor
2025-01-12 15:52:15,687:INFO:Total runtime is 0.15180559555689493 minutes
2025-01-12 15:52:15,691:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:15,691:INFO:Initializing create_model()
2025-01-12 15:52:15,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:15,692:INFO:Checking exceptions
2025-01-12 15:52:15,692:INFO:Importing libraries
2025-01-12 15:52:15,692:INFO:Copying training dataset
2025-01-12 15:52:15,700:INFO:Defining folds
2025-01-12 15:52:15,701:INFO:Declaring metric variables
2025-01-12 15:52:15,706:INFO:Importing untrained model
2025-01-12 15:52:15,713:INFO:Decision Tree Regressor Imported successfully
2025-01-12 15:52:15,722:INFO:Starting cross validation
2025-01-12 15:52:15,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:15,892:INFO:Calculating mean and std
2025-01-12 15:52:15,894:INFO:Creating metrics dataframe
2025-01-12 15:52:15,896:INFO:Uploading results into container
2025-01-12 15:52:15,897:INFO:Uploading model into container now
2025-01-12 15:52:15,897:INFO:_master_model_container: 12
2025-01-12 15:52:15,897:INFO:_display_container: 2
2025-01-12 15:52:15,898:INFO:DecisionTreeRegressor(random_state=123)
2025-01-12 15:52:15,898:INFO:create_model() successfully completed......................................
2025-01-12 15:52:16,115:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:16,115:INFO:Creating metrics dataframe
2025-01-12 15:52:16,130:INFO:Initializing Random Forest Regressor
2025-01-12 15:52:16,130:INFO:Total runtime is 0.1591837247212728 minutes
2025-01-12 15:52:16,136:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:16,136:INFO:Initializing create_model()
2025-01-12 15:52:16,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:16,136:INFO:Checking exceptions
2025-01-12 15:52:16,137:INFO:Importing libraries
2025-01-12 15:52:16,137:INFO:Copying training dataset
2025-01-12 15:52:16,144:INFO:Defining folds
2025-01-12 15:52:16,144:INFO:Declaring metric variables
2025-01-12 15:52:16,151:INFO:Importing untrained model
2025-01-12 15:52:16,156:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:52:16,167:INFO:Starting cross validation
2025-01-12 15:52:16,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:20,132:INFO:Calculating mean and std
2025-01-12 15:52:20,134:INFO:Creating metrics dataframe
2025-01-12 15:52:20,137:INFO:Uploading results into container
2025-01-12 15:52:20,137:INFO:Uploading model into container now
2025-01-12 15:52:20,138:INFO:_master_model_container: 13
2025-01-12 15:52:20,138:INFO:_display_container: 2
2025-01-12 15:52:20,138:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:52:20,139:INFO:create_model() successfully completed......................................
2025-01-12 15:52:20,361:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:20,361:INFO:Creating metrics dataframe
2025-01-12 15:52:20,375:INFO:Initializing Extra Trees Regressor
2025-01-12 15:52:20,376:INFO:Total runtime is 0.22995058298110962 minutes
2025-01-12 15:52:20,379:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:20,380:INFO:Initializing create_model()
2025-01-12 15:52:20,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:20,380:INFO:Checking exceptions
2025-01-12 15:52:20,380:INFO:Importing libraries
2025-01-12 15:52:20,380:INFO:Copying training dataset
2025-01-12 15:52:20,389:INFO:Defining folds
2025-01-12 15:52:20,389:INFO:Declaring metric variables
2025-01-12 15:52:20,393:INFO:Importing untrained model
2025-01-12 15:52:20,400:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:52:20,409:INFO:Starting cross validation
2025-01-12 15:52:20,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:22,645:INFO:Calculating mean and std
2025-01-12 15:52:22,646:INFO:Creating metrics dataframe
2025-01-12 15:52:22,649:INFO:Uploading results into container
2025-01-12 15:52:22,650:INFO:Uploading model into container now
2025-01-12 15:52:22,651:INFO:_master_model_container: 14
2025-01-12 15:52:22,651:INFO:_display_container: 2
2025-01-12 15:52:22,651:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:52:22,652:INFO:create_model() successfully completed......................................
2025-01-12 15:52:22,872:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:22,872:INFO:Creating metrics dataframe
2025-01-12 15:52:22,887:INFO:Initializing AdaBoost Regressor
2025-01-12 15:52:22,887:INFO:Total runtime is 0.27180416584014894 minutes
2025-01-12 15:52:22,891:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:22,892:INFO:Initializing create_model()
2025-01-12 15:52:22,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:22,892:INFO:Checking exceptions
2025-01-12 15:52:22,892:INFO:Importing libraries
2025-01-12 15:52:22,892:INFO:Copying training dataset
2025-01-12 15:52:22,899:INFO:Defining folds
2025-01-12 15:52:22,899:INFO:Declaring metric variables
2025-01-12 15:52:22,904:INFO:Importing untrained model
2025-01-12 15:52:22,910:INFO:AdaBoost Regressor Imported successfully
2025-01-12 15:52:22,919:INFO:Starting cross validation
2025-01-12 15:52:22,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:23,518:INFO:Calculating mean and std
2025-01-12 15:52:23,519:INFO:Creating metrics dataframe
2025-01-12 15:52:23,522:INFO:Uploading results into container
2025-01-12 15:52:23,522:INFO:Uploading model into container now
2025-01-12 15:52:23,523:INFO:_master_model_container: 15
2025-01-12 15:52:23,523:INFO:_display_container: 2
2025-01-12 15:52:23,523:INFO:AdaBoostRegressor(random_state=123)
2025-01-12 15:52:23,523:INFO:create_model() successfully completed......................................
2025-01-12 15:52:23,742:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:23,742:INFO:Creating metrics dataframe
2025-01-12 15:52:23,757:INFO:Initializing Gradient Boosting Regressor
2025-01-12 15:52:23,757:INFO:Total runtime is 0.2863118807474772 minutes
2025-01-12 15:52:23,762:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:23,762:INFO:Initializing create_model()
2025-01-12 15:52:23,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:23,762:INFO:Checking exceptions
2025-01-12 15:52:23,762:INFO:Importing libraries
2025-01-12 15:52:23,762:INFO:Copying training dataset
2025-01-12 15:52:23,770:INFO:Defining folds
2025-01-12 15:52:23,770:INFO:Declaring metric variables
2025-01-12 15:52:23,775:INFO:Importing untrained model
2025-01-12 15:52:23,780:INFO:Gradient Boosting Regressor Imported successfully
2025-01-12 15:52:23,791:INFO:Starting cross validation
2025-01-12 15:52:23,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:25,388:INFO:Calculating mean and std
2025-01-12 15:52:25,390:INFO:Creating metrics dataframe
2025-01-12 15:52:25,392:INFO:Uploading results into container
2025-01-12 15:52:25,393:INFO:Uploading model into container now
2025-01-12 15:52:25,394:INFO:_master_model_container: 16
2025-01-12 15:52:25,394:INFO:_display_container: 2
2025-01-12 15:52:25,395:INFO:GradientBoostingRegressor(random_state=123)
2025-01-12 15:52:25,395:INFO:create_model() successfully completed......................................
2025-01-12 15:52:25,612:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:25,612:INFO:Creating metrics dataframe
2025-01-12 15:52:25,629:INFO:Initializing Light Gradient Boosting Machine
2025-01-12 15:52:25,629:INFO:Total runtime is 0.317509126663208 minutes
2025-01-12 15:52:25,633:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:25,633:INFO:Initializing create_model()
2025-01-12 15:52:25,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:25,634:INFO:Checking exceptions
2025-01-12 15:52:25,634:INFO:Importing libraries
2025-01-12 15:52:25,634:INFO:Copying training dataset
2025-01-12 15:52:25,643:INFO:Defining folds
2025-01-12 15:52:25,643:INFO:Declaring metric variables
2025-01-12 15:52:25,648:INFO:Importing untrained model
2025-01-12 15:52:25,654:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 15:52:25,663:INFO:Starting cross validation
2025-01-12 15:52:25,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:26,394:INFO:Calculating mean and std
2025-01-12 15:52:26,396:INFO:Creating metrics dataframe
2025-01-12 15:52:26,399:INFO:Uploading results into container
2025-01-12 15:52:26,400:INFO:Uploading model into container now
2025-01-12 15:52:26,400:INFO:_master_model_container: 17
2025-01-12 15:52:26,400:INFO:_display_container: 2
2025-01-12 15:52:26,401:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:52:26,401:INFO:create_model() successfully completed......................................
2025-01-12 15:52:26,617:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:26,618:INFO:Creating metrics dataframe
2025-01-12 15:52:26,634:INFO:Initializing Dummy Regressor
2025-01-12 15:52:26,634:INFO:Total runtime is 0.3342650572458903 minutes
2025-01-12 15:52:26,639:INFO:SubProcess create_model() called ==================================
2025-01-12 15:52:26,639:INFO:Initializing create_model()
2025-01-12 15:52:26,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1463FCC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:26,640:INFO:Checking exceptions
2025-01-12 15:52:26,640:INFO:Importing libraries
2025-01-12 15:52:26,640:INFO:Copying training dataset
2025-01-12 15:52:26,647:INFO:Defining folds
2025-01-12 15:52:26,647:INFO:Declaring metric variables
2025-01-12 15:52:26,652:INFO:Importing untrained model
2025-01-12 15:52:26,659:INFO:Dummy Regressor Imported successfully
2025-01-12 15:52:26,667:INFO:Starting cross validation
2025-01-12 15:52:26,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:52:26,794:INFO:Calculating mean and std
2025-01-12 15:52:26,796:INFO:Creating metrics dataframe
2025-01-12 15:52:26,798:INFO:Uploading results into container
2025-01-12 15:52:26,798:INFO:Uploading model into container now
2025-01-12 15:52:26,799:INFO:_master_model_container: 18
2025-01-12 15:52:26,799:INFO:_display_container: 2
2025-01-12 15:52:26,799:INFO:DummyRegressor()
2025-01-12 15:52:26,800:INFO:create_model() successfully completed......................................
2025-01-12 15:52:27,039:INFO:SubProcess create_model() end ==================================
2025-01-12 15:52:27,040:INFO:Creating metrics dataframe
2025-01-12 15:52:27,056:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 15:52:27,067:INFO:Initializing create_model()
2025-01-12 15:52:27,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:27,067:INFO:Checking exceptions
2025-01-12 15:52:27,069:INFO:Importing libraries
2025-01-12 15:52:27,069:INFO:Copying training dataset
2025-01-12 15:52:27,077:INFO:Defining folds
2025-01-12 15:52:27,077:INFO:Declaring metric variables
2025-01-12 15:52:27,077:INFO:Importing untrained model
2025-01-12 15:52:27,077:INFO:Declaring custom model
2025-01-12 15:52:27,078:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:52:27,079:INFO:Cross validation set to False
2025-01-12 15:52:27,079:INFO:Fitting Model
2025-01-12 15:52:27,357:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:52:27,357:INFO:create_model() successfully completed......................................
2025-01-12 15:52:27,584:INFO:Initializing create_model()
2025-01-12 15:52:27,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:52:27,585:INFO:Checking exceptions
2025-01-12 15:52:27,588:INFO:Importing libraries
2025-01-12 15:52:27,588:INFO:Copying training dataset
2025-01-12 15:52:27,594:INFO:Defining folds
2025-01-12 15:52:27,594:INFO:Declaring metric variables
2025-01-12 15:52:27,595:INFO:Importing untrained model
2025-01-12 15:52:27,595:INFO:Declaring custom model
2025-01-12 15:52:27,595:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:52:27,596:INFO:Cross validation set to False
2025-01-12 15:52:27,597:INFO:Fitting Model
2025-01-12 15:52:28,089:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:52:28,089:INFO:create_model() successfully completed......................................
2025-01-12 15:52:28,346:INFO:_master_model_container: 18
2025-01-12 15:52:28,346:INFO:_display_container: 2
2025-01-12 15:52:28,348:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)]
2025-01-12 15:52:28,348:INFO:compare_models() successfully completed......................................
2025-01-12 15:52:33,347:INFO:Initializing tune_model()
2025-01-12 15:52:33,347:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-12 15:52:33,347:INFO:Checking exceptions
2025-01-12 15:52:33,366:INFO:Copying training dataset
2025-01-12 15:52:33,373:INFO:Checking base model
2025-01-12 15:52:33,373:INFO:Base model : Extra Trees Regressor
2025-01-12 15:52:33,379:INFO:Declaring metric variables
2025-01-12 15:52:33,386:INFO:Defining Hyperparameters
2025-01-12 15:52:33,694:INFO:Tuning with n_jobs=-1
2025-01-12 15:52:33,694:INFO:Initializing RandomizedSearchCV
2025-01-12 15:53:18,489:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-12 15:53:18,490:INFO:Hyperparameter search completed
2025-01-12 15:53:18,490:INFO:SubProcess create_model() called ==================================
2025-01-12 15:53:18,491:INFO:Initializing create_model()
2025-01-12 15:53:18,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F16CDF0610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-12 15:53:18,491:INFO:Checking exceptions
2025-01-12 15:53:18,492:INFO:Importing libraries
2025-01-12 15:53:18,492:INFO:Copying training dataset
2025-01-12 15:53:18,499:INFO:Defining folds
2025-01-12 15:53:18,499:INFO:Declaring metric variables
2025-01-12 15:53:18,504:INFO:Importing untrained model
2025-01-12 15:53:18,504:INFO:Declaring custom model
2025-01-12 15:53:18,509:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:53:18,518:INFO:Starting cross validation
2025-01-12 15:53:18,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:53:19,732:INFO:Calculating mean and std
2025-01-12 15:53:19,734:INFO:Creating metrics dataframe
2025-01-12 15:53:19,740:INFO:Finalizing model
2025-01-12 15:53:20,033:INFO:Uploading results into container
2025-01-12 15:53:20,035:INFO:Uploading model into container now
2025-01-12 15:53:20,036:INFO:_master_model_container: 19
2025-01-12 15:53:20,036:INFO:_display_container: 3
2025-01-12 15:53:20,037:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123)
2025-01-12 15:53:20,037:INFO:create_model() successfully completed......................................
2025-01-12 15:53:20,258:INFO:SubProcess create_model() end ==================================
2025-01-12 15:53:20,258:INFO:choose_better activated
2025-01-12 15:53:20,262:INFO:SubProcess create_model() called ==================================
2025-01-12 15:53:20,263:INFO:Initializing create_model()
2025-01-12 15:53:20,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:53:20,263:INFO:Checking exceptions
2025-01-12 15:53:20,265:INFO:Importing libraries
2025-01-12 15:53:20,265:INFO:Copying training dataset
2025-01-12 15:53:20,272:INFO:Defining folds
2025-01-12 15:53:20,272:INFO:Declaring metric variables
2025-01-12 15:53:20,272:INFO:Importing untrained model
2025-01-12 15:53:20,272:INFO:Declaring custom model
2025-01-12 15:53:20,273:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:53:20,274:INFO:Starting cross validation
2025-01-12 15:53:20,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:53:22,496:INFO:Calculating mean and std
2025-01-12 15:53:22,497:INFO:Creating metrics dataframe
2025-01-12 15:53:22,499:INFO:Finalizing model
2025-01-12 15:53:22,749:INFO:Uploading results into container
2025-01-12 15:53:22,750:INFO:Uploading model into container now
2025-01-12 15:53:22,751:INFO:_master_model_container: 20
2025-01-12 15:53:22,751:INFO:_display_container: 4
2025-01-12 15:53:22,752:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:53:22,752:INFO:create_model() successfully completed......................................
2025-01-12 15:53:22,968:INFO:SubProcess create_model() end ==================================
2025-01-12 15:53:22,968:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9738
2025-01-12 15:53:22,969:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123) result for R2 is 0.7118
2025-01-12 15:53:22,970:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2025-01-12 15:53:22,970:INFO:choose_better completed
2025-01-12 15:53:22,970:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-12 15:53:22,990:INFO:_master_model_container: 20
2025-01-12 15:53:22,990:INFO:_display_container: 3
2025-01-12 15:53:22,990:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:53:22,990:INFO:tune_model() successfully completed......................................
2025-01-12 15:53:23,239:INFO:Initializing tune_model()
2025-01-12 15:53:23,239:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-01-12 15:53:23,239:INFO:Checking exceptions
2025-01-12 15:53:23,259:INFO:Copying training dataset
2025-01-12 15:53:23,268:INFO:Checking base model
2025-01-12 15:53:23,268:INFO:Base model : Random Forest Regressor
2025-01-12 15:53:23,273:INFO:Declaring metric variables
2025-01-12 15:53:23,279:INFO:Defining Hyperparameters
2025-01-12 15:53:23,498:INFO:Tuning with n_jobs=-1
2025-01-12 15:53:23,498:INFO:Initializing RandomizedSearchCV
2025-01-12 15:55:00,455:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2025-01-12 15:55:00,456:INFO:Hyperparameter search completed
2025-01-12 15:55:00,456:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:00,457:INFO:Initializing create_model()
2025-01-12 15:55:00,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F145C98ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2025-01-12 15:55:00,457:INFO:Checking exceptions
2025-01-12 15:55:00,457:INFO:Importing libraries
2025-01-12 15:55:00,458:INFO:Copying training dataset
2025-01-12 15:55:00,467:INFO:Defining folds
2025-01-12 15:55:00,467:INFO:Declaring metric variables
2025-01-12 15:55:00,472:INFO:Importing untrained model
2025-01-12 15:55:00,472:INFO:Declaring custom model
2025-01-12 15:55:00,477:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:55:00,485:INFO:Starting cross validation
2025-01-12 15:55:00,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:04,308:INFO:Calculating mean and std
2025-01-12 15:55:04,309:INFO:Creating metrics dataframe
2025-01-12 15:55:04,316:INFO:Finalizing model
2025-01-12 15:55:04,795:INFO:Uploading results into container
2025-01-12 15:55:04,796:INFO:Uploading model into container now
2025-01-12 15:55:04,797:INFO:_master_model_container: 21
2025-01-12 15:55:04,797:INFO:_display_container: 4
2025-01-12 15:55:04,798:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123)
2025-01-12 15:55:04,798:INFO:create_model() successfully completed......................................
2025-01-12 15:55:05,013:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:05,013:INFO:choose_better activated
2025-01-12 15:55:05,017:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:05,018:INFO:Initializing create_model()
2025-01-12 15:55:05,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:05,018:INFO:Checking exceptions
2025-01-12 15:55:05,022:INFO:Importing libraries
2025-01-12 15:55:05,022:INFO:Copying training dataset
2025-01-12 15:55:05,028:INFO:Defining folds
2025-01-12 15:55:05,028:INFO:Declaring metric variables
2025-01-12 15:55:05,028:INFO:Importing untrained model
2025-01-12 15:55:05,028:INFO:Declaring custom model
2025-01-12 15:55:05,029:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:55:05,029:INFO:Starting cross validation
2025-01-12 15:55:05,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:08,987:INFO:Calculating mean and std
2025-01-12 15:55:08,988:INFO:Creating metrics dataframe
2025-01-12 15:55:08,990:INFO:Finalizing model
2025-01-12 15:55:09,451:INFO:Uploading results into container
2025-01-12 15:55:09,452:INFO:Uploading model into container now
2025-01-12 15:55:09,453:INFO:_master_model_container: 22
2025-01-12 15:55:09,453:INFO:_display_container: 5
2025-01-12 15:55:09,453:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:09,453:INFO:create_model() successfully completed......................................
2025-01-12 15:55:09,665:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:09,666:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) result for R2 is 0.9708
2025-01-12 15:55:09,666:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=240, n_jobs=-1,
                      random_state=123) result for R2 is 0.958
2025-01-12 15:55:09,667:INFO:RandomForestRegressor(n_jobs=-1, random_state=123) is best model
2025-01-12 15:55:09,667:INFO:choose_better completed
2025-01-12 15:55:09,667:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-01-12 15:55:09,681:INFO:_master_model_container: 22
2025-01-12 15:55:09,681:INFO:_display_container: 4
2025-01-12 15:55:09,681:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:09,682:INFO:tune_model() successfully completed......................................
2025-01-12 15:55:27,259:INFO:Initializing compare_models()
2025-01-12 15:55:27,259:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123), ExtraTreesRegressor(n_jobs=-1, random_state=123), RandomForestRegressor(n_jobs=-1, random_state=123)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 15:55:27,260:INFO:Checking exceptions
2025-01-12 15:55:27,263:INFO:Preparing display monitor
2025-01-12 15:55:27,288:INFO:Initializing custom model Extra Trees Regressor
2025-01-12 15:55:27,289:INFO:Total runtime is 1.665353775024414e-05 minutes
2025-01-12 15:55:27,293:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:27,294:INFO:Initializing create_model()
2025-01-12 15:55:27,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F16156F610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:27,295:INFO:Checking exceptions
2025-01-12 15:55:27,295:INFO:Importing libraries
2025-01-12 15:55:27,295:INFO:Copying training dataset
2025-01-12 15:55:27,304:INFO:Defining folds
2025-01-12 15:55:27,304:INFO:Declaring metric variables
2025-01-12 15:55:27,310:INFO:Importing untrained model
2025-01-12 15:55:27,310:INFO:Declaring custom model
2025-01-12 15:55:27,316:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:55:27,325:INFO:Starting cross validation
2025-01-12 15:55:27,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:29,955:INFO:Calculating mean and std
2025-01-12 15:55:29,957:INFO:Creating metrics dataframe
2025-01-12 15:55:29,960:INFO:Uploading results into container
2025-01-12 15:55:29,961:INFO:Uploading model into container now
2025-01-12 15:55:29,962:INFO:_master_model_container: 23
2025-01-12 15:55:29,962:INFO:_display_container: 5
2025-01-12 15:55:29,962:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:29,962:INFO:create_model() successfully completed......................................
2025-01-12 15:55:30,184:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:30,184:INFO:Creating metrics dataframe
2025-01-12 15:55:30,194:INFO:Initializing custom model Random Forest Regressor
2025-01-12 15:55:30,194:INFO:Total runtime is 0.04842279752095541 minutes
2025-01-12 15:55:30,198:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:30,198:INFO:Initializing create_model()
2025-01-12 15:55:30,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F16156F610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:30,199:INFO:Checking exceptions
2025-01-12 15:55:30,199:INFO:Importing libraries
2025-01-12 15:55:30,199:INFO:Copying training dataset
2025-01-12 15:55:30,206:INFO:Defining folds
2025-01-12 15:55:30,206:INFO:Declaring metric variables
2025-01-12 15:55:30,212:INFO:Importing untrained model
2025-01-12 15:55:30,212:INFO:Declaring custom model
2025-01-12 15:55:30,218:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:55:30,229:INFO:Starting cross validation
2025-01-12 15:55:30,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:34,268:INFO:Calculating mean and std
2025-01-12 15:55:34,269:INFO:Creating metrics dataframe
2025-01-12 15:55:34,272:INFO:Uploading results into container
2025-01-12 15:55:34,272:INFO:Uploading model into container now
2025-01-12 15:55:34,273:INFO:_master_model_container: 24
2025-01-12 15:55:34,273:INFO:_display_container: 5
2025-01-12 15:55:34,273:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:34,274:INFO:create_model() successfully completed......................................
2025-01-12 15:55:34,493:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:34,493:INFO:Creating metrics dataframe
2025-01-12 15:55:34,504:INFO:Initializing custom model Extra Trees Regressor
2025-01-12 15:55:34,504:INFO:Total runtime is 0.12025294303894044 minutes
2025-01-12 15:55:34,508:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:34,509:INFO:Initializing create_model()
2025-01-12 15:55:34,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F16156F610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:34,509:INFO:Checking exceptions
2025-01-12 15:55:34,509:INFO:Importing libraries
2025-01-12 15:55:34,509:INFO:Copying training dataset
2025-01-12 15:55:34,517:INFO:Defining folds
2025-01-12 15:55:34,517:INFO:Declaring metric variables
2025-01-12 15:55:34,523:INFO:Importing untrained model
2025-01-12 15:55:34,523:INFO:Declaring custom model
2025-01-12 15:55:34,530:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:55:34,542:INFO:Starting cross validation
2025-01-12 15:55:34,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:36,788:INFO:Calculating mean and std
2025-01-12 15:55:36,789:INFO:Creating metrics dataframe
2025-01-12 15:55:36,792:INFO:Uploading results into container
2025-01-12 15:55:36,793:INFO:Uploading model into container now
2025-01-12 15:55:36,793:INFO:_master_model_container: 25
2025-01-12 15:55:36,793:INFO:_display_container: 5
2025-01-12 15:55:36,793:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:36,794:INFO:create_model() successfully completed......................................
2025-01-12 15:55:37,011:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:37,012:INFO:Creating metrics dataframe
2025-01-12 15:55:37,022:INFO:Initializing custom model Random Forest Regressor
2025-01-12 15:55:37,022:INFO:Total runtime is 0.1622289776802063 minutes
2025-01-12 15:55:37,026:INFO:SubProcess create_model() called ==================================
2025-01-12 15:55:37,027:INFO:Initializing create_model()
2025-01-12 15:55:37,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F16156F610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:37,027:INFO:Checking exceptions
2025-01-12 15:55:37,027:INFO:Importing libraries
2025-01-12 15:55:37,028:INFO:Copying training dataset
2025-01-12 15:55:37,035:INFO:Defining folds
2025-01-12 15:55:37,035:INFO:Declaring metric variables
2025-01-12 15:55:37,041:INFO:Importing untrained model
2025-01-12 15:55:37,042:INFO:Declaring custom model
2025-01-12 15:55:37,048:INFO:Random Forest Regressor Imported successfully
2025-01-12 15:55:37,058:INFO:Starting cross validation
2025-01-12 15:55:37,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 15:55:41,017:INFO:Calculating mean and std
2025-01-12 15:55:41,019:INFO:Creating metrics dataframe
2025-01-12 15:55:41,021:INFO:Uploading results into container
2025-01-12 15:55:41,021:INFO:Uploading model into container now
2025-01-12 15:55:41,022:INFO:_master_model_container: 26
2025-01-12 15:55:41,022:INFO:_display_container: 5
2025-01-12 15:55:41,023:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:41,023:INFO:create_model() successfully completed......................................
2025-01-12 15:55:41,241:INFO:SubProcess create_model() end ==================================
2025-01-12 15:55:41,241:INFO:Creating metrics dataframe
2025-01-12 15:55:41,252:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 15:55:41,264:INFO:Initializing create_model()
2025-01-12 15:55:41,264:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:41,264:INFO:Checking exceptions
2025-01-12 15:55:41,267:INFO:Importing libraries
2025-01-12 15:55:41,267:INFO:Copying training dataset
2025-01-12 15:55:41,275:INFO:Defining folds
2025-01-12 15:55:41,275:INFO:Declaring metric variables
2025-01-12 15:55:41,275:INFO:Importing untrained model
2025-01-12 15:55:41,275:INFO:Declaring custom model
2025-01-12 15:55:41,276:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:55:41,277:INFO:Cross validation set to False
2025-01-12 15:55:41,277:INFO:Fitting Model
2025-01-12 15:55:41,536:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:41,536:INFO:create_model() successfully completed......................................
2025-01-12 15:55:41,779:INFO:_master_model_container: 26
2025-01-12 15:55:41,780:INFO:_display_container: 5
2025-01-12 15:55:41,780:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:41,780:INFO:compare_models() successfully completed......................................
2025-01-12 15:55:44,138:INFO:Initializing plot_model()
2025-01-12 15:55:44,138:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:55:44,138:INFO:Checking exceptions
2025-01-12 15:55:44,180:INFO:Preloading libraries
2025-01-12 15:55:44,270:INFO:Copying training dataset
2025-01-12 15:55:44,270:INFO:Plot type: residuals
2025-01-12 15:55:44,522:INFO:Fitting Model
2025-01-12 15:55:44,522:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-12 15:55:44,682:INFO:Scoring test/hold-out set
2025-01-12 15:55:45,487:INFO:Visual Rendered Successfully
2025-01-12 15:55:45,710:INFO:plot_model() successfully completed......................................
2025-01-12 15:55:45,731:INFO:Initializing plot_model()
2025-01-12 15:55:45,731:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:55:45,731:INFO:Checking exceptions
2025-01-12 15:55:45,775:INFO:Preloading libraries
2025-01-12 15:55:45,868:INFO:Copying training dataset
2025-01-12 15:55:45,868:INFO:Plot type: error
2025-01-12 15:55:46,086:INFO:Fitting Model
2025-01-12 15:55:46,086:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-12 15:55:46,087:INFO:Scoring test/hold-out set
2025-01-12 15:55:46,514:INFO:Visual Rendered Successfully
2025-01-12 15:55:46,740:INFO:plot_model() successfully completed......................................
2025-01-12 15:55:46,986:INFO:Initializing plot_model()
2025-01-12 15:55:46,987:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-12 15:55:46,987:INFO:Checking exceptions
2025-01-12 15:55:47,111:INFO:Preloading libraries
2025-01-12 15:55:47,201:INFO:Copying training dataset
2025-01-12 15:55:47,201:INFO:Plot type: feature
2025-01-12 15:55:47,202:WARNING:No coef_ found. Trying feature_importances_
2025-01-12 15:55:47,446:INFO:Visual Rendered Successfully
2025-01-12 15:55:47,666:INFO:plot_model() successfully completed......................................
2025-01-12 15:55:50,246:INFO:Initializing finalize_model()
2025-01-12 15:55:50,247:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 15:55:50,247:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 15:55:50,251:INFO:Initializing create_model()
2025-01-12 15:55:50,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 15:55:50,251:INFO:Checking exceptions
2025-01-12 15:55:50,253:INFO:Importing libraries
2025-01-12 15:55:50,253:INFO:Copying training dataset
2025-01-12 15:55:50,254:INFO:Defining folds
2025-01-12 15:55:50,254:INFO:Declaring metric variables
2025-01-12 15:55:50,254:INFO:Importing untrained model
2025-01-12 15:55:50,254:INFO:Declaring custom model
2025-01-12 15:55:50,255:INFO:Extra Trees Regressor Imported successfully
2025-01-12 15:55:50,256:INFO:Cross validation set to False
2025-01-12 15:55:50,256:INFO:Fitting Model
2025-01-12 15:55:50,591:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:55:50,591:INFO:create_model() successfully completed......................................
2025-01-12 15:55:50,804:INFO:_master_model_container: 26
2025-01-12 15:55:50,804:INFO:_display_container: 5
2025-01-12 15:55:50,813:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:55:50,813:INFO:finalize_model() successfully completed......................................
2025-01-12 15:55:51,041:INFO:Initializing save_model()
2025-01-12 15:55:51,042:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=super95_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-12 15:55:51,042:INFO:Adding model into prep_pipe
2025-01-12 15:55:51,042:WARNING:Only Model saved as it was a pipeline.
2025-01-12 15:55:51,235:INFO:super95_model.pkl saved in current working directory
2025-01-12 15:55:51,244:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 15:55:51,244:INFO:save_model() successfully completed......................................
2025-01-12 15:55:53,661:INFO:Initializing predict_model()
2025-01-12 15:55:53,661:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F16CDBD8A0>)
2025-01-12 15:55:53,661:INFO:Checking exceptions
2025-01-12 15:55:53,661:INFO:Preloading libraries
2025-01-12 15:55:53,664:INFO:Set up data.
2025-01-12 15:55:53,666:INFO:Set up index.
2025-01-12 16:05:23,560:INFO:Initializing predict_model()
2025-01-12 16:05:23,561:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CC97F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1460899E0>)
2025-01-12 16:05:23,561:INFO:Checking exceptions
2025-01-12 16:05:23,561:INFO:Preloading libraries
2025-01-12 16:05:23,563:INFO:Set up data.
2025-01-12 16:05:23,566:INFO:Set up index.
2025-01-12 16:12:48,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 16:12:48,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 16:12:48,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 16:12:48,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 16:20:47,477:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:20:52,900:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:20:56,616:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:48:36,030:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:48:51,130:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:49:36,883:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:49:41,511:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:49:47,888:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:49:52,355:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 16:49:55,562:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:107: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:28:25,877:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:198: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:28:28,694:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:198: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:35:55,815:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:198: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:35:57,186:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:198: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:39:50,676:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:41:12,766:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:41:45,016:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:42:05,258:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:42:41,096:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:42:57,986:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:45:07,368:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:45:40,750:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 17:46:21,880:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:21:33,380:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:21:59,160:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:22:16,968:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:22:51,450:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:24:34,806:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:25:07,519:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:26:16,693:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:26:40,923:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:27:42,553:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:28:39,721:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:200: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:30:32,920:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:32:46,206:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:33:06,948:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:33:30,812:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:33:38,909:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:33:43,306:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:33:51,325:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:34:16,444:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:34:29,126:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:34:39,159:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:37:03,298:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:37:36,206:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:37:52,205:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:38:08,353:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:39:39,814:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:40:07,687:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:40:48,753:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:44:19,302:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:44:42,887:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:44:56,337:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:201: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:48:43,555:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:109: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:48:51,019:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:109: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:48:59,539:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:202: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:54:41,680:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:55:05,655:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:55:47,397:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:56:07,199:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:56:51,328:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:57:28,680:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:57:55,874:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:58:10,637:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:58:34,260:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:58:47,455:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:59:01,027:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 19:59:07,338:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:204: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 20:13:08,786:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:109: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 20:13:21,656:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:109: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-12 21:04:07,182:INFO:Initializing load_model()
2025-01-12 21:04:07,182:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:07,890:INFO:Initializing load_model()
2025-01-12 21:04:07,890:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:51,933:INFO:Initializing load_model()
2025-01-12 21:04:51,934:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:52,119:INFO:Initializing load_model()
2025-01-12 21:04:52,119:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:55,221:INFO:Initializing load_model()
2025-01-12 21:04:55,222:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:55,392:INFO:Initializing load_model()
2025-01-12 21:04:55,392:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:57,811:INFO:Initializing load_model()
2025-01-12 21:04:57,811:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:04:57,993:INFO:Initializing load_model()
2025-01-12 21:04:57,993:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:05:07,949:INFO:Initializing load_model()
2025-01-12 21:05:07,949:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:05:08,134:INFO:Initializing load_model()
2025-01-12 21:05:08,134:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:05:29,681:INFO:Initializing load_model()
2025-01-12 21:05:29,682:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:05:29,876:INFO:Initializing load_model()
2025-01-12 21:05:29,876:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:08:01,587:INFO:Initializing load_model()
2025-01-12 21:08:01,587:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:08:01,768:INFO:Initializing load_model()
2025-01-12 21:08:01,768:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:08:02,026:INFO:Initializing predict_model()
2025-01-12 21:08:02,026:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDB3310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEE80>)
2025-01-12 21:08:02,026:INFO:Checking exceptions
2025-01-12 21:08:02,026:INFO:Preloading libraries
2025-01-12 21:08:02,026:INFO:Set up data.
2025-01-12 21:08:02,031:INFO:Set up index.
2025-01-12 21:08:02,212:INFO:Initializing predict_model()
2025-01-12 21:08:02,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEF07BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEE80>)
2025-01-12 21:08:02,212:INFO:Checking exceptions
2025-01-12 21:08:02,212:INFO:Preloading libraries
2025-01-12 21:08:02,213:INFO:Set up data.
2025-01-12 21:08:02,215:INFO:Set up index.
2025-01-12 21:08:57,474:INFO:Initializing load_model()
2025-01-12 21:08:57,474:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:08:57,644:INFO:Initializing load_model()
2025-01-12 21:08:57,644:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:08:57,877:INFO:Initializing predict_model()
2025-01-12 21:08:57,878:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDE21D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE760C0>)
2025-01-12 21:08:57,878:INFO:Checking exceptions
2025-01-12 21:08:57,878:INFO:Preloading libraries
2025-01-12 21:08:57,879:INFO:Set up data.
2025-01-12 21:08:57,881:INFO:Set up index.
2025-01-12 21:09:14,651:INFO:Initializing load_model()
2025-01-12 21:09:14,651:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:09:14,819:INFO:Initializing load_model()
2025-01-12 21:09:14,819:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:09:15,044:INFO:Initializing predict_model()
2025-01-12 21:09:15,045:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FCA9EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76CA0>)
2025-01-12 21:09:15,045:INFO:Checking exceptions
2025-01-12 21:09:15,045:INFO:Preloading libraries
2025-01-12 21:09:15,045:INFO:Set up data.
2025-01-12 21:09:15,047:INFO:Set up index.
2025-01-12 21:09:15,212:INFO:Initializing predict_model()
2025-01-12 21:09:15,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FCE6E710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEE80>)
2025-01-12 21:09:15,212:INFO:Checking exceptions
2025-01-12 21:09:15,212:INFO:Preloading libraries
2025-01-12 21:09:15,212:INFO:Set up data.
2025-01-12 21:09:15,214:INFO:Set up index.
2025-01-12 21:09:49,103:INFO:Initializing load_model()
2025-01-12 21:09:49,103:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:09:49,293:INFO:Initializing load_model()
2025-01-12 21:09:49,293:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:09:49,530:INFO:Initializing predict_model()
2025-01-12 21:09:49,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0E6150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75940>)
2025-01-12 21:09:49,531:INFO:Checking exceptions
2025-01-12 21:09:49,531:INFO:Preloading libraries
2025-01-12 21:09:49,531:INFO:Set up data.
2025-01-12 21:09:49,533:INFO:Set up index.
2025-01-12 21:10:18,765:INFO:Initializing load_model()
2025-01-12 21:10:18,765:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:10:18,939:INFO:Initializing load_model()
2025-01-12 21:10:18,939:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:10:19,173:INFO:Initializing predict_model()
2025-01-12 21:10:19,173:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE6FAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE751C0>)
2025-01-12 21:10:19,173:INFO:Checking exceptions
2025-01-12 21:10:19,173:INFO:Preloading libraries
2025-01-12 21:10:19,174:INFO:Set up data.
2025-01-12 21:10:19,177:INFO:Set up index.
2025-01-12 21:10:30,582:INFO:Initializing load_model()
2025-01-12 21:10:30,583:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:10:30,751:INFO:Initializing load_model()
2025-01-12 21:10:30,751:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:10:30,969:INFO:Initializing predict_model()
2025-01-12 21:10:30,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0DAA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76840>)
2025-01-12 21:10:30,971:INFO:Checking exceptions
2025-01-12 21:10:30,971:INFO:Preloading libraries
2025-01-12 21:10:30,972:INFO:Set up data.
2025-01-12 21:10:30,975:INFO:Set up index.
2025-01-12 21:11:00,225:INFO:Initializing load_model()
2025-01-12 21:11:00,225:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:00,390:INFO:Initializing load_model()
2025-01-12 21:11:00,391:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:00,599:INFO:Initializing predict_model()
2025-01-12 21:11:00,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0E1810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE2CE00>)
2025-01-12 21:11:00,600:INFO:Checking exceptions
2025-01-12 21:11:00,600:INFO:Preloading libraries
2025-01-12 21:11:00,600:INFO:Set up data.
2025-01-12 21:11:00,604:INFO:Set up index.
2025-01-12 21:11:02,731:INFO:Initializing load_model()
2025-01-12 21:11:02,731:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:02,901:INFO:Initializing load_model()
2025-01-12 21:11:02,901:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:03,107:INFO:Initializing predict_model()
2025-01-12 21:11:03,108:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEE0EC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75B20>)
2025-01-12 21:11:03,108:INFO:Checking exceptions
2025-01-12 21:11:03,108:INFO:Preloading libraries
2025-01-12 21:11:03,108:INFO:Set up data.
2025-01-12 21:11:03,110:INFO:Set up index.
2025-01-12 21:11:05,850:INFO:Initializing load_model()
2025-01-12 21:11:05,850:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:06,016:INFO:Initializing load_model()
2025-01-12 21:11:06,016:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:06,229:INFO:Initializing predict_model()
2025-01-12 21:11:06,229:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE6FB1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FE676520>)
2025-01-12 21:11:06,230:INFO:Checking exceptions
2025-01-12 21:11:06,230:INFO:Preloading libraries
2025-01-12 21:11:06,231:INFO:Set up data.
2025-01-12 21:11:06,237:INFO:Set up index.
2025-01-12 21:11:08,256:INFO:Initializing load_model()
2025-01-12 21:11:08,257:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:08,388:INFO:Initializing load_model()
2025-01-12 21:11:08,388:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:11:08,588:INFO:Initializing predict_model()
2025-01-12 21:11:08,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEE0CA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76D40>)
2025-01-12 21:11:08,589:INFO:Checking exceptions
2025-01-12 21:11:08,589:INFO:Preloading libraries
2025-01-12 21:11:08,590:INFO:Set up data.
2025-01-12 21:11:08,591:INFO:Set up index.
2025-01-12 21:12:11,908:INFO:Initializing load_model()
2025-01-12 21:12:11,908:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:12:12,043:INFO:Initializing load_model()
2025-01-12 21:12:12,043:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:12:12,252:INFO:Initializing predict_model()
2025-01-12 21:12:12,252:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDA3A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74FE0>)
2025-01-12 21:12:12,252:INFO:Checking exceptions
2025-01-12 21:12:12,253:INFO:Preloading libraries
2025-01-12 21:12:12,253:INFO:Set up data.
2025-01-12 21:12:12,257:INFO:Set up index.
2025-01-12 21:12:12,461:INFO:Initializing predict_model()
2025-01-12 21:12:12,462:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDFFEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['oil price', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236F0C48220>)
2025-01-12 21:12:12,462:INFO:Checking exceptions
2025-01-12 21:12:12,462:INFO:Preloading libraries
2025-01-12 21:12:12,462:INFO:Set up data.
2025-01-12 21:12:12,464:INFO:Set up index.
2025-01-12 21:14:01,578:INFO:PyCaret RegressionExperiment
2025-01-12 21:14:01,578:INFO:Logging name: reg-default-name
2025-01-12 21:14:01,579:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-12 21:14:01,580:INFO:version 3.3.2
2025-01-12 21:14:01,580:INFO:Initializing setup()
2025-01-12 21:14:01,580:INFO:self.USI: 51c6
2025-01-12 21:14:01,582:INFO:self._variable_keys: {'target_param', 'fold_generator', 'fold_groups_param', 'X_test', 'y', 'exp_id', 'y_test', 'y_train', 'idx', 'logging_param', 'data', 'log_plots_param', '_available_plots', 'memory', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'transform_target_param', 'seed', 'n_jobs_param', 'X', 'X_train', 'html_param'}
2025-01-12 21:14:01,583:INFO:Checking environment
2025-01-12 21:14:01,586:INFO:python_version: 3.11.11
2025-01-12 21:14:01,586:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-12 21:14:01,586:INFO:machine: AMD64
2025-01-12 21:14:01,588:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-12 21:14:01,599:INFO:Memory: svmem(total=6439919616, available=649932800, percent=89.9, used=5789986816, free=649932800)
2025-01-12 21:14:01,599:INFO:Physical Core: 4
2025-01-12 21:14:01,600:INFO:Logical Core: 4
2025-01-12 21:14:01,601:INFO:Checking libraries
2025-01-12 21:14:01,603:INFO:System:
2025-01-12 21:14:01,605:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-12 21:14:01,605:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-12 21:14:01,605:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-12 21:14:01,606:INFO:PyCaret required dependencies:
2025-01-12 21:14:01,614:INFO:                 pip: 24.2
2025-01-12 21:14:01,614:INFO:          setuptools: 75.1.0
2025-01-12 21:14:01,614:INFO:             pycaret: 3.3.2
2025-01-12 21:14:01,614:INFO:             IPython: 8.30.0
2025-01-12 21:14:01,614:INFO:          ipywidgets: 8.1.5
2025-01-12 21:14:01,614:INFO:                tqdm: 4.67.1
2025-01-12 21:14:01,614:INFO:               numpy: 1.26.4
2025-01-12 21:14:01,615:INFO:              pandas: 2.1.4
2025-01-12 21:14:01,615:INFO:              jinja2: 3.1.4
2025-01-12 21:14:01,615:INFO:               scipy: 1.11.4
2025-01-12 21:14:01,615:INFO:              joblib: 1.3.2
2025-01-12 21:14:01,615:INFO:             sklearn: 1.4.2
2025-01-12 21:14:01,615:INFO:                pyod: 2.0.3
2025-01-12 21:14:01,615:INFO:            imblearn: 0.13.0
2025-01-12 21:14:01,615:INFO:   category_encoders: 2.7.0
2025-01-12 21:14:01,615:INFO:            lightgbm: 4.5.0
2025-01-12 21:14:01,615:INFO:               numba: 0.60.0
2025-01-12 21:14:01,615:INFO:            requests: 2.32.3
2025-01-12 21:14:01,616:INFO:          matplotlib: 3.7.5
2025-01-12 21:14:01,616:INFO:          scikitplot: 0.3.7
2025-01-12 21:14:01,616:INFO:         yellowbrick: 1.5
2025-01-12 21:14:01,616:INFO:              plotly: 5.24.1
2025-01-12 21:14:01,616:INFO:    plotly-resampler: Not installed
2025-01-12 21:14:01,616:INFO:             kaleido: 0.2.1
2025-01-12 21:14:01,616:INFO:           schemdraw: 0.15
2025-01-12 21:14:01,616:INFO:         statsmodels: 0.14.4
2025-01-12 21:14:01,616:INFO:              sktime: 0.26.0
2025-01-12 21:14:01,616:INFO:               tbats: 1.1.3
2025-01-12 21:14:01,616:INFO:            pmdarima: 2.0.4
2025-01-12 21:14:01,616:INFO:              psutil: 5.9.0
2025-01-12 21:14:01,617:INFO:          markupsafe: 2.1.3
2025-01-12 21:14:01,617:INFO:             pickle5: Not installed
2025-01-12 21:14:01,617:INFO:         cloudpickle: 3.1.0
2025-01-12 21:14:01,617:INFO:         deprecation: 2.1.0
2025-01-12 21:14:01,617:INFO:              xxhash: 3.5.0
2025-01-12 21:14:01,617:INFO:           wurlitzer: Not installed
2025-01-12 21:14:01,617:INFO:PyCaret optional dependencies:
2025-01-12 21:14:01,617:INFO:                shap: Not installed
2025-01-12 21:14:01,617:INFO:           interpret: Not installed
2025-01-12 21:14:01,617:INFO:                umap: Not installed
2025-01-12 21:14:01,617:INFO:     ydata_profiling: Not installed
2025-01-12 21:14:01,618:INFO:  explainerdashboard: Not installed
2025-01-12 21:14:01,618:INFO:             autoviz: Not installed
2025-01-12 21:14:01,618:INFO:           fairlearn: Not installed
2025-01-12 21:14:01,618:INFO:          deepchecks: Not installed
2025-01-12 21:14:01,618:INFO:             xgboost: Not installed
2025-01-12 21:14:01,618:INFO:            catboost: Not installed
2025-01-12 21:14:01,618:INFO:              kmodes: Not installed
2025-01-12 21:14:01,618:INFO:             mlxtend: Not installed
2025-01-12 21:14:01,618:INFO:       statsforecast: Not installed
2025-01-12 21:14:01,618:INFO:        tune_sklearn: Not installed
2025-01-12 21:14:01,619:INFO:                 ray: Not installed
2025-01-12 21:14:01,619:INFO:            hyperopt: Not installed
2025-01-12 21:14:01,619:INFO:              optuna: Not installed
2025-01-12 21:14:01,619:INFO:               skopt: Not installed
2025-01-12 21:14:01,619:INFO:              mlflow: Not installed
2025-01-12 21:14:01,619:INFO:              gradio: Not installed
2025-01-12 21:14:01,619:INFO:             fastapi: Not installed
2025-01-12 21:14:01,619:INFO:             uvicorn: Not installed
2025-01-12 21:14:01,619:INFO:              m2cgen: Not installed
2025-01-12 21:14:01,619:INFO:           evidently: Not installed
2025-01-12 21:14:01,620:INFO:               fugue: Not installed
2025-01-12 21:14:01,620:INFO:           streamlit: 1.40.1
2025-01-12 21:14:01,620:INFO:             prophet: Not installed
2025-01-12 21:14:01,620:INFO:None
2025-01-12 21:14:01,622:INFO:Set up data.
2025-01-12 21:14:01,704:INFO:Set up folding strategy.
2025-01-12 21:14:01,717:INFO:Set up train/test split.
2025-01-12 21:14:01,804:INFO:Set up index.
2025-01-12 21:14:01,808:INFO:Assigning column types.
2025-01-12 21:14:01,827:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-12 21:14:01,841:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 21:14:01,867:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:14:01,888:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,212:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,224:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,236:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,489:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-12 21:14:02,501:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,803:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:02,817:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,829:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:02,965:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,079:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-12 21:14:03,099:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,361:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,613:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-12 21:14:03,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:03,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:03,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,033:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:04,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:14:04,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,143:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-12 21:14:04,293:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:04,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:14:04,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,668:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-12 21:14:04,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:04,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:05,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:05,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:05,231:INFO:Preparing preprocessing pipeline...
2025-01-12 21:14:05,232:INFO:Set up simple imputation.
2025-01-12 21:14:05,238:INFO:Set up column name cleaning.
2025-01-12 21:14:05,479:INFO:Finished creating preprocessing pipeline.
2025-01-12 21:14:05,499:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-12 21:14:05,500:INFO:Creating final display dataframe.
2025-01-12 21:14:05,803:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              51c6
2025-01-12 21:14:06,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:06,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:06,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:06,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:14:06,491:INFO:setup() successfully completed in 5.05s...............
2025-01-12 21:14:36,665:INFO:Initializing compare_models()
2025-01-12 21:14:36,665:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 21:14:36,666:INFO:Checking exceptions
2025-01-12 21:14:36,674:INFO:Preparing display monitor
2025-01-12 21:14:36,802:INFO:Initializing Linear Regression
2025-01-12 21:14:36,803:INFO:Total runtime is 3.331899642944336e-05 minutes
2025-01-12 21:14:36,808:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:36,814:INFO:Initializing create_model()
2025-01-12 21:14:36,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:36,816:INFO:Checking exceptions
2025-01-12 21:14:36,816:INFO:Importing libraries
2025-01-12 21:14:36,816:INFO:Copying training dataset
2025-01-12 21:14:36,825:INFO:Defining folds
2025-01-12 21:14:36,825:INFO:Declaring metric variables
2025-01-12 21:14:36,831:INFO:Importing untrained model
2025-01-12 21:14:36,839:INFO:Linear Regression Imported successfully
2025-01-12 21:14:36,851:INFO:Starting cross validation
2025-01-12 21:14:36,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:45,138:INFO:Calculating mean and std
2025-01-12 21:14:45,195:INFO:Creating metrics dataframe
2025-01-12 21:14:45,203:INFO:Uploading results into container
2025-01-12 21:14:45,204:INFO:Uploading model into container now
2025-01-12 21:14:45,205:INFO:_master_model_container: 1
2025-01-12 21:14:45,206:INFO:_display_container: 2
2025-01-12 21:14:45,206:INFO:LinearRegression(n_jobs=-1)
2025-01-12 21:14:45,207:INFO:create_model() successfully completed......................................
2025-01-12 21:14:49,275:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:49,276:INFO:Creating metrics dataframe
2025-01-12 21:14:49,330:INFO:Initializing Lasso Regression
2025-01-12 21:14:49,330:INFO:Total runtime is 0.2088034470876058 minutes
2025-01-12 21:14:49,336:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:49,337:INFO:Initializing create_model()
2025-01-12 21:14:49,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:49,338:INFO:Checking exceptions
2025-01-12 21:14:49,338:INFO:Importing libraries
2025-01-12 21:14:49,338:INFO:Copying training dataset
2025-01-12 21:14:49,352:INFO:Defining folds
2025-01-12 21:14:49,352:INFO:Declaring metric variables
2025-01-12 21:14:49,364:INFO:Importing untrained model
2025-01-12 21:14:49,374:INFO:Lasso Regression Imported successfully
2025-01-12 21:14:49,386:INFO:Starting cross validation
2025-01-12 21:14:49,388:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:49,533:INFO:Calculating mean and std
2025-01-12 21:14:49,535:INFO:Creating metrics dataframe
2025-01-12 21:14:49,546:INFO:Uploading results into container
2025-01-12 21:14:49,552:INFO:Uploading model into container now
2025-01-12 21:14:49,554:INFO:_master_model_container: 2
2025-01-12 21:14:49,554:INFO:_display_container: 2
2025-01-12 21:14:49,554:INFO:Lasso(random_state=123)
2025-01-12 21:14:49,554:INFO:create_model() successfully completed......................................
2025-01-12 21:14:49,785:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:49,791:INFO:Creating metrics dataframe
2025-01-12 21:14:49,809:INFO:Initializing Ridge Regression
2025-01-12 21:14:49,809:INFO:Total runtime is 0.21679766178131102 minutes
2025-01-12 21:14:49,815:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:49,815:INFO:Initializing create_model()
2025-01-12 21:14:49,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:49,815:INFO:Checking exceptions
2025-01-12 21:14:49,815:INFO:Importing libraries
2025-01-12 21:14:49,816:INFO:Copying training dataset
2025-01-12 21:14:49,824:INFO:Defining folds
2025-01-12 21:14:49,825:INFO:Declaring metric variables
2025-01-12 21:14:49,830:INFO:Importing untrained model
2025-01-12 21:14:49,835:INFO:Ridge Regression Imported successfully
2025-01-12 21:14:49,847:INFO:Starting cross validation
2025-01-12 21:14:49,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:49,991:INFO:Calculating mean and std
2025-01-12 21:14:49,993:INFO:Creating metrics dataframe
2025-01-12 21:14:49,995:INFO:Uploading results into container
2025-01-12 21:14:49,996:INFO:Uploading model into container now
2025-01-12 21:14:49,996:INFO:_master_model_container: 3
2025-01-12 21:14:49,996:INFO:_display_container: 2
2025-01-12 21:14:49,996:INFO:Ridge(random_state=123)
2025-01-12 21:14:49,997:INFO:create_model() successfully completed......................................
2025-01-12 21:14:50,229:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:50,230:INFO:Creating metrics dataframe
2025-01-12 21:14:50,247:INFO:Initializing Elastic Net
2025-01-12 21:14:50,247:INFO:Total runtime is 0.22409408489863075 minutes
2025-01-12 21:14:50,252:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:50,253:INFO:Initializing create_model()
2025-01-12 21:14:50,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:50,253:INFO:Checking exceptions
2025-01-12 21:14:50,253:INFO:Importing libraries
2025-01-12 21:14:50,253:INFO:Copying training dataset
2025-01-12 21:14:50,262:INFO:Defining folds
2025-01-12 21:14:50,262:INFO:Declaring metric variables
2025-01-12 21:14:50,269:INFO:Importing untrained model
2025-01-12 21:14:50,276:INFO:Elastic Net Imported successfully
2025-01-12 21:14:50,306:INFO:Starting cross validation
2025-01-12 21:14:50,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:50,437:INFO:Calculating mean and std
2025-01-12 21:14:50,439:INFO:Creating metrics dataframe
2025-01-12 21:14:50,442:INFO:Uploading results into container
2025-01-12 21:14:50,443:INFO:Uploading model into container now
2025-01-12 21:14:50,444:INFO:_master_model_container: 4
2025-01-12 21:14:50,444:INFO:_display_container: 2
2025-01-12 21:14:50,445:INFO:ElasticNet(random_state=123)
2025-01-12 21:14:50,445:INFO:create_model() successfully completed......................................
2025-01-12 21:14:50,729:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:50,729:INFO:Creating metrics dataframe
2025-01-12 21:14:50,743:INFO:Initializing Least Angle Regression
2025-01-12 21:14:50,744:INFO:Total runtime is 0.23237159252166745 minutes
2025-01-12 21:14:50,748:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:50,749:INFO:Initializing create_model()
2025-01-12 21:14:50,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:50,749:INFO:Checking exceptions
2025-01-12 21:14:50,749:INFO:Importing libraries
2025-01-12 21:14:50,749:INFO:Copying training dataset
2025-01-12 21:14:50,757:INFO:Defining folds
2025-01-12 21:14:50,758:INFO:Declaring metric variables
2025-01-12 21:14:50,764:INFO:Importing untrained model
2025-01-12 21:14:50,770:INFO:Least Angle Regression Imported successfully
2025-01-12 21:14:50,784:INFO:Starting cross validation
2025-01-12 21:14:50,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:50,916:INFO:Calculating mean and std
2025-01-12 21:14:50,917:INFO:Creating metrics dataframe
2025-01-12 21:14:50,920:INFO:Uploading results into container
2025-01-12 21:14:50,920:INFO:Uploading model into container now
2025-01-12 21:14:50,921:INFO:_master_model_container: 5
2025-01-12 21:14:50,921:INFO:_display_container: 2
2025-01-12 21:14:50,923:INFO:Lars(random_state=123)
2025-01-12 21:14:50,924:INFO:create_model() successfully completed......................................
2025-01-12 21:14:51,142:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:51,142:INFO:Creating metrics dataframe
2025-01-12 21:14:51,161:INFO:Initializing Lasso Least Angle Regression
2025-01-12 21:14:51,161:INFO:Total runtime is 0.23933400710423783 minutes
2025-01-12 21:14:51,166:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:51,167:INFO:Initializing create_model()
2025-01-12 21:14:51,167:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:51,167:INFO:Checking exceptions
2025-01-12 21:14:51,167:INFO:Importing libraries
2025-01-12 21:14:51,167:INFO:Copying training dataset
2025-01-12 21:14:51,175:INFO:Defining folds
2025-01-12 21:14:51,176:INFO:Declaring metric variables
2025-01-12 21:14:51,182:INFO:Importing untrained model
2025-01-12 21:14:51,188:INFO:Lasso Least Angle Regression Imported successfully
2025-01-12 21:14:51,198:INFO:Starting cross validation
2025-01-12 21:14:51,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:51,327:INFO:Calculating mean and std
2025-01-12 21:14:51,329:INFO:Creating metrics dataframe
2025-01-12 21:14:51,332:INFO:Uploading results into container
2025-01-12 21:14:51,334:INFO:Uploading model into container now
2025-01-12 21:14:51,334:INFO:_master_model_container: 6
2025-01-12 21:14:51,334:INFO:_display_container: 2
2025-01-12 21:14:51,335:INFO:LassoLars(random_state=123)
2025-01-12 21:14:51,335:INFO:create_model() successfully completed......................................
2025-01-12 21:14:51,550:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:51,550:INFO:Creating metrics dataframe
2025-01-12 21:14:51,565:INFO:Initializing Orthogonal Matching Pursuit
2025-01-12 21:14:51,566:INFO:Total runtime is 0.2460797270139058 minutes
2025-01-12 21:14:51,570:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:51,570:INFO:Initializing create_model()
2025-01-12 21:14:51,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:51,571:INFO:Checking exceptions
2025-01-12 21:14:51,571:INFO:Importing libraries
2025-01-12 21:14:51,571:INFO:Copying training dataset
2025-01-12 21:14:51,580:INFO:Defining folds
2025-01-12 21:14:51,580:INFO:Declaring metric variables
2025-01-12 21:14:51,585:INFO:Importing untrained model
2025-01-12 21:14:51,593:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-12 21:14:51,602:INFO:Starting cross validation
2025-01-12 21:14:51,604:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:51,733:INFO:Calculating mean and std
2025-01-12 21:14:51,735:INFO:Creating metrics dataframe
2025-01-12 21:14:51,737:INFO:Uploading results into container
2025-01-12 21:14:51,739:INFO:Uploading model into container now
2025-01-12 21:14:51,739:INFO:_master_model_container: 7
2025-01-12 21:14:51,739:INFO:_display_container: 2
2025-01-12 21:14:51,740:INFO:OrthogonalMatchingPursuit()
2025-01-12 21:14:51,740:INFO:create_model() successfully completed......................................
2025-01-12 21:14:51,959:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:51,959:INFO:Creating metrics dataframe
2025-01-12 21:14:51,975:INFO:Initializing Bayesian Ridge
2025-01-12 21:14:51,975:INFO:Total runtime is 0.2528917590777079 minutes
2025-01-12 21:14:51,980:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:51,981:INFO:Initializing create_model()
2025-01-12 21:14:51,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:51,981:INFO:Checking exceptions
2025-01-12 21:14:51,981:INFO:Importing libraries
2025-01-12 21:14:51,981:INFO:Copying training dataset
2025-01-12 21:14:51,989:INFO:Defining folds
2025-01-12 21:14:51,989:INFO:Declaring metric variables
2025-01-12 21:14:51,996:INFO:Importing untrained model
2025-01-12 21:14:52,000:INFO:Bayesian Ridge Imported successfully
2025-01-12 21:14:52,014:INFO:Starting cross validation
2025-01-12 21:14:52,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:52,204:INFO:Calculating mean and std
2025-01-12 21:14:52,206:INFO:Creating metrics dataframe
2025-01-12 21:14:52,210:INFO:Uploading results into container
2025-01-12 21:14:52,211:INFO:Uploading model into container now
2025-01-12 21:14:52,211:INFO:_master_model_container: 8
2025-01-12 21:14:52,212:INFO:_display_container: 2
2025-01-12 21:14:52,212:INFO:BayesianRidge()
2025-01-12 21:14:52,212:INFO:create_model() successfully completed......................................
2025-01-12 21:14:52,427:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:52,427:INFO:Creating metrics dataframe
2025-01-12 21:14:52,446:INFO:Initializing Passive Aggressive Regressor
2025-01-12 21:14:52,447:INFO:Total runtime is 0.2607542316118876 minutes
2025-01-12 21:14:52,452:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:52,452:INFO:Initializing create_model()
2025-01-12 21:14:52,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:52,452:INFO:Checking exceptions
2025-01-12 21:14:52,452:INFO:Importing libraries
2025-01-12 21:14:52,453:INFO:Copying training dataset
2025-01-12 21:14:52,460:INFO:Defining folds
2025-01-12 21:14:52,461:INFO:Declaring metric variables
2025-01-12 21:14:52,466:INFO:Importing untrained model
2025-01-12 21:14:52,471:INFO:Passive Aggressive Regressor Imported successfully
2025-01-12 21:14:52,484:INFO:Starting cross validation
2025-01-12 21:14:52,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:52,678:INFO:Calculating mean and std
2025-01-12 21:14:52,680:INFO:Creating metrics dataframe
2025-01-12 21:14:52,683:INFO:Uploading results into container
2025-01-12 21:14:52,683:INFO:Uploading model into container now
2025-01-12 21:14:52,684:INFO:_master_model_container: 9
2025-01-12 21:14:52,684:INFO:_display_container: 2
2025-01-12 21:14:52,684:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-12 21:14:52,684:INFO:create_model() successfully completed......................................
2025-01-12 21:14:52,958:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:52,959:INFO:Creating metrics dataframe
2025-01-12 21:14:52,975:INFO:Initializing Huber Regressor
2025-01-12 21:14:52,976:INFO:Total runtime is 0.2695813020070394 minutes
2025-01-12 21:14:52,981:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:52,981:INFO:Initializing create_model()
2025-01-12 21:14:52,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:52,982:INFO:Checking exceptions
2025-01-12 21:14:52,982:INFO:Importing libraries
2025-01-12 21:14:52,982:INFO:Copying training dataset
2025-01-12 21:14:52,991:INFO:Defining folds
2025-01-12 21:14:52,992:INFO:Declaring metric variables
2025-01-12 21:14:53,001:INFO:Importing untrained model
2025-01-12 21:14:53,008:INFO:Huber Regressor Imported successfully
2025-01-12 21:14:53,042:INFO:Starting cross validation
2025-01-12 21:14:53,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:53,384:INFO:Calculating mean and std
2025-01-12 21:14:53,386:INFO:Creating metrics dataframe
2025-01-12 21:14:53,389:INFO:Uploading results into container
2025-01-12 21:14:53,391:INFO:Uploading model into container now
2025-01-12 21:14:53,391:INFO:_master_model_container: 10
2025-01-12 21:14:53,392:INFO:_display_container: 2
2025-01-12 21:14:53,393:INFO:HuberRegressor()
2025-01-12 21:14:53,395:INFO:create_model() successfully completed......................................
2025-01-12 21:14:53,610:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:53,610:INFO:Creating metrics dataframe
2025-01-12 21:14:53,627:INFO:Initializing K Neighbors Regressor
2025-01-12 21:14:53,627:INFO:Total runtime is 0.28042492071787517 minutes
2025-01-12 21:14:53,631:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:53,632:INFO:Initializing create_model()
2025-01-12 21:14:53,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:53,633:INFO:Checking exceptions
2025-01-12 21:14:53,633:INFO:Importing libraries
2025-01-12 21:14:53,633:INFO:Copying training dataset
2025-01-12 21:14:53,641:INFO:Defining folds
2025-01-12 21:14:53,641:INFO:Declaring metric variables
2025-01-12 21:14:53,648:INFO:Importing untrained model
2025-01-12 21:14:53,653:INFO:K Neighbors Regressor Imported successfully
2025-01-12 21:14:53,663:INFO:Starting cross validation
2025-01-12 21:14:53,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:53,844:INFO:Calculating mean and std
2025-01-12 21:14:53,845:INFO:Creating metrics dataframe
2025-01-12 21:14:53,848:INFO:Uploading results into container
2025-01-12 21:14:53,848:INFO:Uploading model into container now
2025-01-12 21:14:53,849:INFO:_master_model_container: 11
2025-01-12 21:14:53,849:INFO:_display_container: 2
2025-01-12 21:14:53,849:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-12 21:14:53,849:INFO:create_model() successfully completed......................................
2025-01-12 21:14:54,070:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:54,071:INFO:Creating metrics dataframe
2025-01-12 21:14:54,091:INFO:Initializing Decision Tree Regressor
2025-01-12 21:14:54,091:INFO:Total runtime is 0.2881653626759847 minutes
2025-01-12 21:14:54,095:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:54,096:INFO:Initializing create_model()
2025-01-12 21:14:54,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:54,096:INFO:Checking exceptions
2025-01-12 21:14:54,096:INFO:Importing libraries
2025-01-12 21:14:54,096:INFO:Copying training dataset
2025-01-12 21:14:54,104:INFO:Defining folds
2025-01-12 21:14:54,105:INFO:Declaring metric variables
2025-01-12 21:14:54,112:INFO:Importing untrained model
2025-01-12 21:14:54,117:INFO:Decision Tree Regressor Imported successfully
2025-01-12 21:14:54,126:INFO:Starting cross validation
2025-01-12 21:14:54,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:54,314:INFO:Calculating mean and std
2025-01-12 21:14:54,315:INFO:Creating metrics dataframe
2025-01-12 21:14:54,318:INFO:Uploading results into container
2025-01-12 21:14:54,318:INFO:Uploading model into container now
2025-01-12 21:14:54,319:INFO:_master_model_container: 12
2025-01-12 21:14:54,319:INFO:_display_container: 2
2025-01-12 21:14:54,319:INFO:DecisionTreeRegressor(random_state=123)
2025-01-12 21:14:54,319:INFO:create_model() successfully completed......................................
2025-01-12 21:14:54,582:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:54,582:INFO:Creating metrics dataframe
2025-01-12 21:14:54,599:INFO:Initializing Random Forest Regressor
2025-01-12 21:14:54,599:INFO:Total runtime is 0.2966274619102478 minutes
2025-01-12 21:14:54,603:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:54,603:INFO:Initializing create_model()
2025-01-12 21:14:54,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:54,604:INFO:Checking exceptions
2025-01-12 21:14:54,604:INFO:Importing libraries
2025-01-12 21:14:54,604:INFO:Copying training dataset
2025-01-12 21:14:54,612:INFO:Defining folds
2025-01-12 21:14:54,612:INFO:Declaring metric variables
2025-01-12 21:14:54,619:INFO:Importing untrained model
2025-01-12 21:14:54,624:INFO:Random Forest Regressor Imported successfully
2025-01-12 21:14:54,634:INFO:Starting cross validation
2025-01-12 21:14:54,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:14:58,975:INFO:Calculating mean and std
2025-01-12 21:14:58,976:INFO:Creating metrics dataframe
2025-01-12 21:14:58,981:INFO:Uploading results into container
2025-01-12 21:14:58,982:INFO:Uploading model into container now
2025-01-12 21:14:58,983:INFO:_master_model_container: 13
2025-01-12 21:14:58,983:INFO:_display_container: 2
2025-01-12 21:14:58,985:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:14:58,985:INFO:create_model() successfully completed......................................
2025-01-12 21:14:59,210:INFO:SubProcess create_model() end ==================================
2025-01-12 21:14:59,210:INFO:Creating metrics dataframe
2025-01-12 21:14:59,253:INFO:Initializing Extra Trees Regressor
2025-01-12 21:14:59,253:INFO:Total runtime is 0.37419358889261883 minutes
2025-01-12 21:14:59,258:INFO:SubProcess create_model() called ==================================
2025-01-12 21:14:59,258:INFO:Initializing create_model()
2025-01-12 21:14:59,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:14:59,259:INFO:Checking exceptions
2025-01-12 21:14:59,259:INFO:Importing libraries
2025-01-12 21:14:59,259:INFO:Copying training dataset
2025-01-12 21:14:59,268:INFO:Defining folds
2025-01-12 21:14:59,268:INFO:Declaring metric variables
2025-01-12 21:14:59,274:INFO:Importing untrained model
2025-01-12 21:14:59,283:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:14:59,292:INFO:Starting cross validation
2025-01-12 21:14:59,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:15:02,359:INFO:Calculating mean and std
2025-01-12 21:15:02,361:INFO:Creating metrics dataframe
2025-01-12 21:15:02,364:INFO:Uploading results into container
2025-01-12 21:15:02,368:INFO:Uploading model into container now
2025-01-12 21:15:02,372:INFO:_master_model_container: 14
2025-01-12 21:15:02,373:INFO:_display_container: 2
2025-01-12 21:15:02,373:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:02,374:INFO:create_model() successfully completed......................................
2025-01-12 21:15:02,641:INFO:SubProcess create_model() end ==================================
2025-01-12 21:15:02,641:INFO:Creating metrics dataframe
2025-01-12 21:15:02,673:INFO:Initializing AdaBoost Regressor
2025-01-12 21:15:02,673:INFO:Total runtime is 0.431200913588206 minutes
2025-01-12 21:15:02,677:INFO:SubProcess create_model() called ==================================
2025-01-12 21:15:02,678:INFO:Initializing create_model()
2025-01-12 21:15:02,678:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:02,678:INFO:Checking exceptions
2025-01-12 21:15:02,678:INFO:Importing libraries
2025-01-12 21:15:02,678:INFO:Copying training dataset
2025-01-12 21:15:02,687:INFO:Defining folds
2025-01-12 21:15:02,688:INFO:Declaring metric variables
2025-01-12 21:15:02,692:INFO:Importing untrained model
2025-01-12 21:15:02,701:INFO:AdaBoost Regressor Imported successfully
2025-01-12 21:15:02,711:INFO:Starting cross validation
2025-01-12 21:15:02,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:15:03,579:INFO:Calculating mean and std
2025-01-12 21:15:03,581:INFO:Creating metrics dataframe
2025-01-12 21:15:03,583:INFO:Uploading results into container
2025-01-12 21:15:03,584:INFO:Uploading model into container now
2025-01-12 21:15:03,585:INFO:_master_model_container: 15
2025-01-12 21:15:03,585:INFO:_display_container: 2
2025-01-12 21:15:03,586:INFO:AdaBoostRegressor(random_state=123)
2025-01-12 21:15:03,586:INFO:create_model() successfully completed......................................
2025-01-12 21:15:03,890:INFO:SubProcess create_model() end ==================================
2025-01-12 21:15:03,891:INFO:Creating metrics dataframe
2025-01-12 21:15:03,914:INFO:Initializing Gradient Boosting Regressor
2025-01-12 21:15:03,914:INFO:Total runtime is 0.4518713235855103 minutes
2025-01-12 21:15:03,920:INFO:SubProcess create_model() called ==================================
2025-01-12 21:15:03,921:INFO:Initializing create_model()
2025-01-12 21:15:03,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:03,921:INFO:Checking exceptions
2025-01-12 21:15:03,922:INFO:Importing libraries
2025-01-12 21:15:03,922:INFO:Copying training dataset
2025-01-12 21:15:03,929:INFO:Defining folds
2025-01-12 21:15:03,930:INFO:Declaring metric variables
2025-01-12 21:15:03,938:INFO:Importing untrained model
2025-01-12 21:15:03,942:INFO:Gradient Boosting Regressor Imported successfully
2025-01-12 21:15:03,953:INFO:Starting cross validation
2025-01-12 21:15:03,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:15:05,467:INFO:Calculating mean and std
2025-01-12 21:15:05,475:INFO:Creating metrics dataframe
2025-01-12 21:15:05,478:INFO:Uploading results into container
2025-01-12 21:15:05,479:INFO:Uploading model into container now
2025-01-12 21:15:05,480:INFO:_master_model_container: 16
2025-01-12 21:15:05,480:INFO:_display_container: 2
2025-01-12 21:15:05,481:INFO:GradientBoostingRegressor(random_state=123)
2025-01-12 21:15:05,481:INFO:create_model() successfully completed......................................
2025-01-12 21:15:05,702:INFO:SubProcess create_model() end ==================================
2025-01-12 21:15:05,702:INFO:Creating metrics dataframe
2025-01-12 21:15:05,722:INFO:Initializing Light Gradient Boosting Machine
2025-01-12 21:15:05,723:INFO:Total runtime is 0.482019587357839 minutes
2025-01-12 21:15:05,727:INFO:SubProcess create_model() called ==================================
2025-01-12 21:15:05,728:INFO:Initializing create_model()
2025-01-12 21:15:05,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:05,728:INFO:Checking exceptions
2025-01-12 21:15:05,728:INFO:Importing libraries
2025-01-12 21:15:05,729:INFO:Copying training dataset
2025-01-12 21:15:05,737:INFO:Defining folds
2025-01-12 21:15:05,737:INFO:Declaring metric variables
2025-01-12 21:15:05,742:INFO:Importing untrained model
2025-01-12 21:15:05,752:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 21:15:05,769:INFO:Starting cross validation
2025-01-12 21:15:05,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:15:06,583:INFO:Calculating mean and std
2025-01-12 21:15:06,585:INFO:Creating metrics dataframe
2025-01-12 21:15:06,587:INFO:Uploading results into container
2025-01-12 21:15:06,588:INFO:Uploading model into container now
2025-01-12 21:15:06,588:INFO:_master_model_container: 17
2025-01-12 21:15:06,588:INFO:_display_container: 2
2025-01-12 21:15:06,589:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:06,589:INFO:create_model() successfully completed......................................
2025-01-12 21:15:06,822:INFO:SubProcess create_model() end ==================================
2025-01-12 21:15:06,823:INFO:Creating metrics dataframe
2025-01-12 21:15:06,847:INFO:Initializing Dummy Regressor
2025-01-12 21:15:06,850:INFO:Total runtime is 0.5008073528607687 minutes
2025-01-12 21:15:06,857:INFO:SubProcess create_model() called ==================================
2025-01-12 21:15:06,857:INFO:Initializing create_model()
2025-01-12 21:15:06,857:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F143D35010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:06,858:INFO:Checking exceptions
2025-01-12 21:15:06,858:INFO:Importing libraries
2025-01-12 21:15:06,858:INFO:Copying training dataset
2025-01-12 21:15:06,865:INFO:Defining folds
2025-01-12 21:15:06,866:INFO:Declaring metric variables
2025-01-12 21:15:06,872:INFO:Importing untrained model
2025-01-12 21:15:06,876:INFO:Dummy Regressor Imported successfully
2025-01-12 21:15:06,889:INFO:Starting cross validation
2025-01-12 21:15:06,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:15:07,003:INFO:Calculating mean and std
2025-01-12 21:15:07,004:INFO:Creating metrics dataframe
2025-01-12 21:15:07,007:INFO:Uploading results into container
2025-01-12 21:15:07,007:INFO:Uploading model into container now
2025-01-12 21:15:07,008:INFO:_master_model_container: 18
2025-01-12 21:15:07,008:INFO:_display_container: 2
2025-01-12 21:15:07,008:INFO:DummyRegressor()
2025-01-12 21:15:07,008:INFO:create_model() successfully completed......................................
2025-01-12 21:15:07,250:INFO:SubProcess create_model() end ==================================
2025-01-12 21:15:07,250:INFO:Creating metrics dataframe
2025-01-12 21:15:07,272:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 21:15:07,292:INFO:Initializing create_model()
2025-01-12 21:15:07,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:07,294:INFO:Checking exceptions
2025-01-12 21:15:07,303:INFO:Importing libraries
2025-01-12 21:15:07,303:INFO:Copying training dataset
2025-01-12 21:15:07,311:INFO:Defining folds
2025-01-12 21:15:07,311:INFO:Declaring metric variables
2025-01-12 21:15:07,311:INFO:Importing untrained model
2025-01-12 21:15:07,311:INFO:Declaring custom model
2025-01-12 21:15:07,312:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:15:07,313:INFO:Cross validation set to False
2025-01-12 21:15:07,313:INFO:Fitting Model
2025-01-12 21:15:07,665:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:07,665:INFO:create_model() successfully completed......................................
2025-01-12 21:15:07,958:INFO:_master_model_container: 18
2025-01-12 21:15:07,958:INFO:_display_container: 2
2025-01-12 21:15:07,959:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:07,959:INFO:compare_models() successfully completed......................................
2025-01-12 21:15:46,980:INFO:Initializing finalize_model()
2025-01-12 21:15:46,983:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 21:15:46,984:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:46,990:INFO:Initializing create_model()
2025-01-12 21:15:46,990:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:46,990:INFO:Checking exceptions
2025-01-12 21:15:46,993:INFO:Importing libraries
2025-01-12 21:15:46,993:INFO:Copying training dataset
2025-01-12 21:15:46,993:INFO:Defining folds
2025-01-12 21:15:46,993:INFO:Declaring metric variables
2025-01-12 21:15:46,993:INFO:Importing untrained model
2025-01-12 21:15:46,993:INFO:Declaring custom model
2025-01-12 21:15:46,994:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:15:46,995:INFO:Cross validation set to False
2025-01-12 21:15:46,995:INFO:Fitting Model
2025-01-12 21:15:47,363:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:15:47,364:INFO:create_model() successfully completed......................................
2025-01-12 21:15:47,578:INFO:_master_model_container: 18
2025-01-12 21:15:47,578:INFO:_display_container: 2
2025-01-12 21:15:47,587:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:15:47,587:INFO:finalize_model() successfully completed......................................
2025-01-12 21:15:58,526:INFO:Initializing finalize_model()
2025-01-12 21:15:58,526:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 21:15:58,526:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:15:58,531:INFO:Initializing create_model()
2025-01-12 21:15:58,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16D8342D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:15:58,532:INFO:Checking exceptions
2025-01-12 21:15:58,534:INFO:Importing libraries
2025-01-12 21:15:58,534:INFO:Copying training dataset
2025-01-12 21:15:58,534:INFO:Defining folds
2025-01-12 21:15:58,534:INFO:Declaring metric variables
2025-01-12 21:15:58,534:INFO:Importing untrained model
2025-01-12 21:15:58,535:INFO:Declaring custom model
2025-01-12 21:15:58,535:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:15:58,536:INFO:Cross validation set to False
2025-01-12 21:15:58,536:INFO:Fitting Model
2025-01-12 21:15:58,902:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:15:58,903:INFO:create_model() successfully completed......................................
2025-01-12 21:15:59,120:INFO:_master_model_container: 18
2025-01-12 21:15:59,120:INFO:_display_container: 2
2025-01-12 21:15:59,129:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:15:59,129:INFO:finalize_model() successfully completed......................................
2025-01-12 21:15:59,372:INFO:Initializing save_model()
2025-01-12 21:15:59,372:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=diesel_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-12 21:15:59,372:INFO:Adding model into prep_pipe
2025-01-12 21:15:59,372:WARNING:Only Model saved as it was a pipeline.
2025-01-12 21:15:59,580:INFO:diesel_model.pkl saved in current working directory
2025-01-12 21:15:59,589:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:15:59,589:INFO:save_model() successfully completed......................................
2025-01-12 21:17:03,946:INFO:PyCaret RegressionExperiment
2025-01-12 21:17:03,946:INFO:Logging name: reg-default-name
2025-01-12 21:17:03,946:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-12 21:17:03,946:INFO:version 3.3.2
2025-01-12 21:17:03,946:INFO:Initializing setup()
2025-01-12 21:17:03,946:INFO:self.USI: 2c45
2025-01-12 21:17:03,947:INFO:self._variable_keys: {'target_param', 'fold_generator', 'fold_groups_param', 'X_test', 'y', 'exp_id', 'y_test', 'y_train', 'idx', 'logging_param', 'data', 'log_plots_param', '_available_plots', 'memory', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'transform_target_param', 'seed', 'n_jobs_param', 'X', 'X_train', 'html_param'}
2025-01-12 21:17:03,947:INFO:Checking environment
2025-01-12 21:17:03,947:INFO:python_version: 3.11.11
2025-01-12 21:17:03,947:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-12 21:17:03,947:INFO:machine: AMD64
2025-01-12 21:17:03,947:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-12 21:17:03,947:INFO:Memory: svmem(total=6439919616, available=1270525952, percent=80.3, used=5169393664, free=1270525952)
2025-01-12 21:17:03,947:INFO:Physical Core: 4
2025-01-12 21:17:03,947:INFO:Logical Core: 4
2025-01-12 21:17:03,948:INFO:Checking libraries
2025-01-12 21:17:03,948:INFO:System:
2025-01-12 21:17:03,948:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-12 21:17:03,948:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-12 21:17:03,948:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-12 21:17:03,948:INFO:PyCaret required dependencies:
2025-01-12 21:17:03,948:INFO:                 pip: 24.2
2025-01-12 21:17:03,948:INFO:          setuptools: 75.1.0
2025-01-12 21:17:03,948:INFO:             pycaret: 3.3.2
2025-01-12 21:17:03,948:INFO:             IPython: 8.30.0
2025-01-12 21:17:03,949:INFO:          ipywidgets: 8.1.5
2025-01-12 21:17:03,949:INFO:                tqdm: 4.67.1
2025-01-12 21:17:03,949:INFO:               numpy: 1.26.4
2025-01-12 21:17:03,949:INFO:              pandas: 2.1.4
2025-01-12 21:17:03,949:INFO:              jinja2: 3.1.4
2025-01-12 21:17:03,949:INFO:               scipy: 1.11.4
2025-01-12 21:17:03,949:INFO:              joblib: 1.3.2
2025-01-12 21:17:03,949:INFO:             sklearn: 1.4.2
2025-01-12 21:17:03,949:INFO:                pyod: 2.0.3
2025-01-12 21:17:03,950:INFO:            imblearn: 0.13.0
2025-01-12 21:17:03,950:INFO:   category_encoders: 2.7.0
2025-01-12 21:17:03,950:INFO:            lightgbm: 4.5.0
2025-01-12 21:17:03,950:INFO:               numba: 0.60.0
2025-01-12 21:17:03,950:INFO:            requests: 2.32.3
2025-01-12 21:17:03,950:INFO:          matplotlib: 3.7.5
2025-01-12 21:17:03,950:INFO:          scikitplot: 0.3.7
2025-01-12 21:17:03,950:INFO:         yellowbrick: 1.5
2025-01-12 21:17:03,950:INFO:              plotly: 5.24.1
2025-01-12 21:17:03,950:INFO:    plotly-resampler: Not installed
2025-01-12 21:17:03,950:INFO:             kaleido: 0.2.1
2025-01-12 21:17:03,951:INFO:           schemdraw: 0.15
2025-01-12 21:17:03,951:INFO:         statsmodels: 0.14.4
2025-01-12 21:17:03,951:INFO:              sktime: 0.26.0
2025-01-12 21:17:03,951:INFO:               tbats: 1.1.3
2025-01-12 21:17:03,951:INFO:            pmdarima: 2.0.4
2025-01-12 21:17:03,951:INFO:              psutil: 5.9.0
2025-01-12 21:17:03,951:INFO:          markupsafe: 2.1.3
2025-01-12 21:17:03,951:INFO:             pickle5: Not installed
2025-01-12 21:17:03,951:INFO:         cloudpickle: 3.1.0
2025-01-12 21:17:03,951:INFO:         deprecation: 2.1.0
2025-01-12 21:17:03,952:INFO:              xxhash: 3.5.0
2025-01-12 21:17:03,952:INFO:           wurlitzer: Not installed
2025-01-12 21:17:03,952:INFO:PyCaret optional dependencies:
2025-01-12 21:17:03,952:INFO:                shap: Not installed
2025-01-12 21:17:03,952:INFO:           interpret: Not installed
2025-01-12 21:17:03,952:INFO:                umap: Not installed
2025-01-12 21:17:03,952:INFO:     ydata_profiling: Not installed
2025-01-12 21:17:03,952:INFO:  explainerdashboard: Not installed
2025-01-12 21:17:03,952:INFO:             autoviz: Not installed
2025-01-12 21:17:03,953:INFO:           fairlearn: Not installed
2025-01-12 21:17:03,953:INFO:          deepchecks: Not installed
2025-01-12 21:17:03,953:INFO:             xgboost: Not installed
2025-01-12 21:17:03,953:INFO:            catboost: Not installed
2025-01-12 21:17:03,953:INFO:              kmodes: Not installed
2025-01-12 21:17:03,953:INFO:             mlxtend: Not installed
2025-01-12 21:17:03,953:INFO:       statsforecast: Not installed
2025-01-12 21:17:03,953:INFO:        tune_sklearn: Not installed
2025-01-12 21:17:03,953:INFO:                 ray: Not installed
2025-01-12 21:17:03,953:INFO:            hyperopt: Not installed
2025-01-12 21:17:03,954:INFO:              optuna: Not installed
2025-01-12 21:17:03,954:INFO:               skopt: Not installed
2025-01-12 21:17:03,954:INFO:              mlflow: Not installed
2025-01-12 21:17:03,954:INFO:              gradio: Not installed
2025-01-12 21:17:03,954:INFO:             fastapi: Not installed
2025-01-12 21:17:03,954:INFO:             uvicorn: Not installed
2025-01-12 21:17:03,954:INFO:              m2cgen: Not installed
2025-01-12 21:17:03,954:INFO:           evidently: Not installed
2025-01-12 21:17:03,954:INFO:               fugue: Not installed
2025-01-12 21:17:03,954:INFO:           streamlit: 1.40.1
2025-01-12 21:17:03,955:INFO:             prophet: Not installed
2025-01-12 21:17:03,955:INFO:None
2025-01-12 21:17:03,955:INFO:Set up data.
2025-01-12 21:17:03,967:INFO:Set up folding strategy.
2025-01-12 21:17:03,967:INFO:Set up train/test split.
2025-01-12 21:17:03,976:INFO:Set up index.
2025-01-12 21:17:03,977:INFO:Assigning column types.
2025-01-12 21:17:03,984:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-12 21:17:03,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 21:17:03,995:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,156:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,265:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,276:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,527:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-12 21:17:04,538:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,548:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,677:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:04,789:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:04,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,136:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,138:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-12 21:17:05,160:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,675:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,676:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-12 21:17:05,827:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:05,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:05,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:06,186:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-12 21:17:06,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,188:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-12 21:17:06,342:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:06,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-12 21:17:06,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,709:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-12 21:17:06,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:06,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:07,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:07,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:07,245:INFO:Preparing preprocessing pipeline...
2025-01-12 21:17:07,245:INFO:Set up simple imputation.
2025-01-12 21:17:07,246:INFO:Set up column name cleaning.
2025-01-12 21:17:07,340:INFO:Finished creating preprocessing pipeline.
2025-01-12 21:17:07,347:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-12 21:17:07,348:INFO:Creating final display dataframe.
2025-01-12 21:17:07,583:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           super95
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              2c45
2025-01-12 21:17:07,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:07,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:08,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:08,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-12 21:17:08,112:INFO:setup() successfully completed in 4.17s...............
2025-01-12 21:17:35,553:INFO:Initializing compare_models()
2025-01-12 21:17:35,553:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-12 21:17:35,553:INFO:Checking exceptions
2025-01-12 21:17:35,556:INFO:Preparing display monitor
2025-01-12 21:17:35,586:INFO:Initializing Linear Regression
2025-01-12 21:17:35,586:INFO:Total runtime is 1.6661485036214194e-05 minutes
2025-01-12 21:17:35,591:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:35,591:INFO:Initializing create_model()
2025-01-12 21:17:35,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:35,591:INFO:Checking exceptions
2025-01-12 21:17:35,592:INFO:Importing libraries
2025-01-12 21:17:35,592:INFO:Copying training dataset
2025-01-12 21:17:35,604:INFO:Defining folds
2025-01-12 21:17:35,604:INFO:Declaring metric variables
2025-01-12 21:17:35,625:INFO:Importing untrained model
2025-01-12 21:17:35,638:INFO:Linear Regression Imported successfully
2025-01-12 21:17:35,662:INFO:Starting cross validation
2025-01-12 21:17:35,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:35,912:INFO:Calculating mean and std
2025-01-12 21:17:35,913:INFO:Creating metrics dataframe
2025-01-12 21:17:35,915:INFO:Uploading results into container
2025-01-12 21:17:35,916:INFO:Uploading model into container now
2025-01-12 21:17:35,916:INFO:_master_model_container: 1
2025-01-12 21:17:35,916:INFO:_display_container: 2
2025-01-12 21:17:35,916:INFO:LinearRegression(n_jobs=-1)
2025-01-12 21:17:35,917:INFO:create_model() successfully completed......................................
2025-01-12 21:17:36,150:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:36,150:INFO:Creating metrics dataframe
2025-01-12 21:17:36,160:INFO:Initializing Lasso Regression
2025-01-12 21:17:36,161:INFO:Total runtime is 0.009593995412190755 minutes
2025-01-12 21:17:36,165:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:36,165:INFO:Initializing create_model()
2025-01-12 21:17:36,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:36,166:INFO:Checking exceptions
2025-01-12 21:17:36,166:INFO:Importing libraries
2025-01-12 21:17:36,166:INFO:Copying training dataset
2025-01-12 21:17:36,172:INFO:Defining folds
2025-01-12 21:17:36,172:INFO:Declaring metric variables
2025-01-12 21:17:36,178:INFO:Importing untrained model
2025-01-12 21:17:36,183:INFO:Lasso Regression Imported successfully
2025-01-12 21:17:36,191:INFO:Starting cross validation
2025-01-12 21:17:36,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:36,315:INFO:Calculating mean and std
2025-01-12 21:17:36,316:INFO:Creating metrics dataframe
2025-01-12 21:17:36,318:INFO:Uploading results into container
2025-01-12 21:17:36,319:INFO:Uploading model into container now
2025-01-12 21:17:36,319:INFO:_master_model_container: 2
2025-01-12 21:17:36,319:INFO:_display_container: 2
2025-01-12 21:17:36,319:INFO:Lasso(random_state=123)
2025-01-12 21:17:36,319:INFO:create_model() successfully completed......................................
2025-01-12 21:17:36,546:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:36,546:INFO:Creating metrics dataframe
2025-01-12 21:17:36,556:INFO:Initializing Ridge Regression
2025-01-12 21:17:36,556:INFO:Total runtime is 0.016173211733500163 minutes
2025-01-12 21:17:36,562:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:36,563:INFO:Initializing create_model()
2025-01-12 21:17:36,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:36,563:INFO:Checking exceptions
2025-01-12 21:17:36,563:INFO:Importing libraries
2025-01-12 21:17:36,563:INFO:Copying training dataset
2025-01-12 21:17:36,572:INFO:Defining folds
2025-01-12 21:17:36,572:INFO:Declaring metric variables
2025-01-12 21:17:36,579:INFO:Importing untrained model
2025-01-12 21:17:36,586:INFO:Ridge Regression Imported successfully
2025-01-12 21:17:36,597:INFO:Starting cross validation
2025-01-12 21:17:36,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:36,743:INFO:Calculating mean and std
2025-01-12 21:17:36,746:INFO:Creating metrics dataframe
2025-01-12 21:17:36,749:INFO:Uploading results into container
2025-01-12 21:17:36,749:INFO:Uploading model into container now
2025-01-12 21:17:36,750:INFO:_master_model_container: 3
2025-01-12 21:17:36,750:INFO:_display_container: 2
2025-01-12 21:17:36,750:INFO:Ridge(random_state=123)
2025-01-12 21:17:36,750:INFO:create_model() successfully completed......................................
2025-01-12 21:17:36,973:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:36,973:INFO:Creating metrics dataframe
2025-01-12 21:17:36,984:INFO:Initializing Elastic Net
2025-01-12 21:17:36,984:INFO:Total runtime is 0.023319701353708904 minutes
2025-01-12 21:17:36,988:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:36,989:INFO:Initializing create_model()
2025-01-12 21:17:36,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:36,989:INFO:Checking exceptions
2025-01-12 21:17:36,990:INFO:Importing libraries
2025-01-12 21:17:36,990:INFO:Copying training dataset
2025-01-12 21:17:36,998:INFO:Defining folds
2025-01-12 21:17:36,999:INFO:Declaring metric variables
2025-01-12 21:17:37,005:INFO:Importing untrained model
2025-01-12 21:17:37,011:INFO:Elastic Net Imported successfully
2025-01-12 21:17:37,037:INFO:Starting cross validation
2025-01-12 21:17:37,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:37,248:INFO:Calculating mean and std
2025-01-12 21:17:37,249:INFO:Creating metrics dataframe
2025-01-12 21:17:37,252:INFO:Uploading results into container
2025-01-12 21:17:37,252:INFO:Uploading model into container now
2025-01-12 21:17:37,253:INFO:_master_model_container: 4
2025-01-12 21:17:37,253:INFO:_display_container: 2
2025-01-12 21:17:37,253:INFO:ElasticNet(random_state=123)
2025-01-12 21:17:37,253:INFO:create_model() successfully completed......................................
2025-01-12 21:17:37,474:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:37,474:INFO:Creating metrics dataframe
2025-01-12 21:17:37,485:INFO:Initializing Least Angle Regression
2025-01-12 21:17:37,485:INFO:Total runtime is 0.0316638986269633 minutes
2025-01-12 21:17:37,489:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:37,490:INFO:Initializing create_model()
2025-01-12 21:17:37,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:37,490:INFO:Checking exceptions
2025-01-12 21:17:37,490:INFO:Importing libraries
2025-01-12 21:17:37,491:INFO:Copying training dataset
2025-01-12 21:17:37,499:INFO:Defining folds
2025-01-12 21:17:37,499:INFO:Declaring metric variables
2025-01-12 21:17:37,506:INFO:Importing untrained model
2025-01-12 21:17:37,511:INFO:Least Angle Regression Imported successfully
2025-01-12 21:17:37,525:INFO:Starting cross validation
2025-01-12 21:17:37,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:37,674:INFO:Calculating mean and std
2025-01-12 21:17:37,675:INFO:Creating metrics dataframe
2025-01-12 21:17:37,679:INFO:Uploading results into container
2025-01-12 21:17:37,681:INFO:Uploading model into container now
2025-01-12 21:17:37,681:INFO:_master_model_container: 5
2025-01-12 21:17:37,681:INFO:_display_container: 2
2025-01-12 21:17:37,682:INFO:Lars(random_state=123)
2025-01-12 21:17:37,682:INFO:create_model() successfully completed......................................
2025-01-12 21:17:37,901:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:37,901:INFO:Creating metrics dataframe
2025-01-12 21:17:37,915:INFO:Initializing Lasso Least Angle Regression
2025-01-12 21:17:37,915:INFO:Total runtime is 0.038825714588165285 minutes
2025-01-12 21:17:37,920:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:37,920:INFO:Initializing create_model()
2025-01-12 21:17:37,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:37,921:INFO:Checking exceptions
2025-01-12 21:17:37,921:INFO:Importing libraries
2025-01-12 21:17:37,921:INFO:Copying training dataset
2025-01-12 21:17:37,930:INFO:Defining folds
2025-01-12 21:17:37,930:INFO:Declaring metric variables
2025-01-12 21:17:37,935:INFO:Importing untrained model
2025-01-12 21:17:37,940:INFO:Lasso Least Angle Regression Imported successfully
2025-01-12 21:17:37,954:INFO:Starting cross validation
2025-01-12 21:17:37,956:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:38,084:INFO:Calculating mean and std
2025-01-12 21:17:38,086:INFO:Creating metrics dataframe
2025-01-12 21:17:38,088:INFO:Uploading results into container
2025-01-12 21:17:38,089:INFO:Uploading model into container now
2025-01-12 21:17:38,089:INFO:_master_model_container: 6
2025-01-12 21:17:38,089:INFO:_display_container: 2
2025-01-12 21:17:38,089:INFO:LassoLars(random_state=123)
2025-01-12 21:17:38,090:INFO:create_model() successfully completed......................................
2025-01-12 21:17:38,314:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:38,315:INFO:Creating metrics dataframe
2025-01-12 21:17:38,326:INFO:Initializing Orthogonal Matching Pursuit
2025-01-12 21:17:38,326:INFO:Total runtime is 0.04568909804026286 minutes
2025-01-12 21:17:38,332:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:38,333:INFO:Initializing create_model()
2025-01-12 21:17:38,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:38,333:INFO:Checking exceptions
2025-01-12 21:17:38,333:INFO:Importing libraries
2025-01-12 21:17:38,333:INFO:Copying training dataset
2025-01-12 21:17:38,341:INFO:Defining folds
2025-01-12 21:17:38,341:INFO:Declaring metric variables
2025-01-12 21:17:38,346:INFO:Importing untrained model
2025-01-12 21:17:38,351:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-12 21:17:38,362:INFO:Starting cross validation
2025-01-12 21:17:38,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:38,503:INFO:Calculating mean and std
2025-01-12 21:17:38,504:INFO:Creating metrics dataframe
2025-01-12 21:17:38,507:INFO:Uploading results into container
2025-01-12 21:17:38,507:INFO:Uploading model into container now
2025-01-12 21:17:38,508:INFO:_master_model_container: 7
2025-01-12 21:17:38,508:INFO:_display_container: 2
2025-01-12 21:17:38,508:INFO:OrthogonalMatchingPursuit()
2025-01-12 21:17:38,508:INFO:create_model() successfully completed......................................
2025-01-12 21:17:38,729:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:38,729:INFO:Creating metrics dataframe
2025-01-12 21:17:38,743:INFO:Initializing Bayesian Ridge
2025-01-12 21:17:38,743:INFO:Total runtime is 0.052633734544118245 minutes
2025-01-12 21:17:38,750:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:38,751:INFO:Initializing create_model()
2025-01-12 21:17:38,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:38,752:INFO:Checking exceptions
2025-01-12 21:17:38,752:INFO:Importing libraries
2025-01-12 21:17:38,753:INFO:Copying training dataset
2025-01-12 21:17:38,760:INFO:Defining folds
2025-01-12 21:17:38,760:INFO:Declaring metric variables
2025-01-12 21:17:38,766:INFO:Importing untrained model
2025-01-12 21:17:38,772:INFO:Bayesian Ridge Imported successfully
2025-01-12 21:17:38,782:INFO:Starting cross validation
2025-01-12 21:17:38,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:38,985:INFO:Calculating mean and std
2025-01-12 21:17:38,987:INFO:Creating metrics dataframe
2025-01-12 21:17:38,989:INFO:Uploading results into container
2025-01-12 21:17:38,990:INFO:Uploading model into container now
2025-01-12 21:17:38,990:INFO:_master_model_container: 8
2025-01-12 21:17:38,990:INFO:_display_container: 2
2025-01-12 21:17:38,990:INFO:BayesianRidge()
2025-01-12 21:17:38,991:INFO:create_model() successfully completed......................................
2025-01-12 21:17:39,211:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:39,211:INFO:Creating metrics dataframe
2025-01-12 21:17:39,227:INFO:Initializing Passive Aggressive Regressor
2025-01-12 21:17:39,227:INFO:Total runtime is 0.06069566408793131 minutes
2025-01-12 21:17:39,232:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:39,233:INFO:Initializing create_model()
2025-01-12 21:17:39,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:39,233:INFO:Checking exceptions
2025-01-12 21:17:39,234:INFO:Importing libraries
2025-01-12 21:17:39,234:INFO:Copying training dataset
2025-01-12 21:17:39,241:INFO:Defining folds
2025-01-12 21:17:39,241:INFO:Declaring metric variables
2025-01-12 21:17:39,247:INFO:Importing untrained model
2025-01-12 21:17:39,254:INFO:Passive Aggressive Regressor Imported successfully
2025-01-12 21:17:39,263:INFO:Starting cross validation
2025-01-12 21:17:39,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:39,433:INFO:Calculating mean and std
2025-01-12 21:17:39,435:INFO:Creating metrics dataframe
2025-01-12 21:17:39,437:INFO:Uploading results into container
2025-01-12 21:17:39,438:INFO:Uploading model into container now
2025-01-12 21:17:39,438:INFO:_master_model_container: 9
2025-01-12 21:17:39,438:INFO:_display_container: 2
2025-01-12 21:17:39,439:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-12 21:17:39,439:INFO:create_model() successfully completed......................................
2025-01-12 21:17:39,660:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:39,660:INFO:Creating metrics dataframe
2025-01-12 21:17:39,674:INFO:Initializing Huber Regressor
2025-01-12 21:17:39,674:INFO:Total runtime is 0.06814201672871907 minutes
2025-01-12 21:17:39,679:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:39,681:INFO:Initializing create_model()
2025-01-12 21:17:39,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:39,681:INFO:Checking exceptions
2025-01-12 21:17:39,681:INFO:Importing libraries
2025-01-12 21:17:39,681:INFO:Copying training dataset
2025-01-12 21:17:39,689:INFO:Defining folds
2025-01-12 21:17:39,689:INFO:Declaring metric variables
2025-01-12 21:17:39,695:INFO:Importing untrained model
2025-01-12 21:17:39,702:INFO:Huber Regressor Imported successfully
2025-01-12 21:17:39,710:INFO:Starting cross validation
2025-01-12 21:17:39,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:39,966:INFO:Calculating mean and std
2025-01-12 21:17:39,967:INFO:Creating metrics dataframe
2025-01-12 21:17:39,970:INFO:Uploading results into container
2025-01-12 21:17:39,970:INFO:Uploading model into container now
2025-01-12 21:17:39,971:INFO:_master_model_container: 10
2025-01-12 21:17:39,971:INFO:_display_container: 2
2025-01-12 21:17:39,972:INFO:HuberRegressor()
2025-01-12 21:17:39,972:INFO:create_model() successfully completed......................................
2025-01-12 21:17:40,191:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:40,191:INFO:Creating metrics dataframe
2025-01-12 21:17:40,204:INFO:Initializing K Neighbors Regressor
2025-01-12 21:17:40,204:INFO:Total runtime is 0.07698550621668497 minutes
2025-01-12 21:17:40,209:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:40,210:INFO:Initializing create_model()
2025-01-12 21:17:40,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:40,210:INFO:Checking exceptions
2025-01-12 21:17:40,210:INFO:Importing libraries
2025-01-12 21:17:40,210:INFO:Copying training dataset
2025-01-12 21:17:40,219:INFO:Defining folds
2025-01-12 21:17:40,219:INFO:Declaring metric variables
2025-01-12 21:17:40,225:INFO:Importing untrained model
2025-01-12 21:17:40,235:INFO:K Neighbors Regressor Imported successfully
2025-01-12 21:17:40,245:INFO:Starting cross validation
2025-01-12 21:17:40,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:40,417:INFO:Calculating mean and std
2025-01-12 21:17:40,418:INFO:Creating metrics dataframe
2025-01-12 21:17:40,421:INFO:Uploading results into container
2025-01-12 21:17:40,421:INFO:Uploading model into container now
2025-01-12 21:17:40,422:INFO:_master_model_container: 11
2025-01-12 21:17:40,422:INFO:_display_container: 2
2025-01-12 21:17:40,422:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-12 21:17:40,422:INFO:create_model() successfully completed......................................
2025-01-12 21:17:40,646:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:40,646:INFO:Creating metrics dataframe
2025-01-12 21:17:40,660:INFO:Initializing Decision Tree Regressor
2025-01-12 21:17:40,660:INFO:Total runtime is 0.08457690080006916 minutes
2025-01-12 21:17:40,664:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:40,665:INFO:Initializing create_model()
2025-01-12 21:17:40,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:40,665:INFO:Checking exceptions
2025-01-12 21:17:40,665:INFO:Importing libraries
2025-01-12 21:17:40,666:INFO:Copying training dataset
2025-01-12 21:17:40,674:INFO:Defining folds
2025-01-12 21:17:40,674:INFO:Declaring metric variables
2025-01-12 21:17:40,679:INFO:Importing untrained model
2025-01-12 21:17:40,687:INFO:Decision Tree Regressor Imported successfully
2025-01-12 21:17:40,696:INFO:Starting cross validation
2025-01-12 21:17:40,699:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:40,946:INFO:Calculating mean and std
2025-01-12 21:17:40,948:INFO:Creating metrics dataframe
2025-01-12 21:17:40,952:INFO:Uploading results into container
2025-01-12 21:17:40,954:INFO:Uploading model into container now
2025-01-12 21:17:40,954:INFO:_master_model_container: 12
2025-01-12 21:17:40,954:INFO:_display_container: 2
2025-01-12 21:17:40,955:INFO:DecisionTreeRegressor(random_state=123)
2025-01-12 21:17:40,955:INFO:create_model() successfully completed......................................
2025-01-12 21:17:41,174:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:41,174:INFO:Creating metrics dataframe
2025-01-12 21:17:41,191:INFO:Initializing Random Forest Regressor
2025-01-12 21:17:41,191:INFO:Total runtime is 0.09343838294347126 minutes
2025-01-12 21:17:41,198:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:41,198:INFO:Initializing create_model()
2025-01-12 21:17:41,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:41,198:INFO:Checking exceptions
2025-01-12 21:17:41,199:INFO:Importing libraries
2025-01-12 21:17:41,199:INFO:Copying training dataset
2025-01-12 21:17:41,206:INFO:Defining folds
2025-01-12 21:17:41,207:INFO:Declaring metric variables
2025-01-12 21:17:41,213:INFO:Importing untrained model
2025-01-12 21:17:41,220:INFO:Random Forest Regressor Imported successfully
2025-01-12 21:17:41,227:INFO:Starting cross validation
2025-01-12 21:17:41,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:45,207:INFO:Calculating mean and std
2025-01-12 21:17:45,208:INFO:Creating metrics dataframe
2025-01-12 21:17:45,211:INFO:Uploading results into container
2025-01-12 21:17:45,211:INFO:Uploading model into container now
2025-01-12 21:17:45,212:INFO:_master_model_container: 13
2025-01-12 21:17:45,212:INFO:_display_container: 2
2025-01-12 21:17:45,212:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:17:45,213:INFO:create_model() successfully completed......................................
2025-01-12 21:17:45,434:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:45,435:INFO:Creating metrics dataframe
2025-01-12 21:17:45,449:INFO:Initializing Extra Trees Regressor
2025-01-12 21:17:45,449:INFO:Total runtime is 0.16439775228500364 minutes
2025-01-12 21:17:45,454:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:45,455:INFO:Initializing create_model()
2025-01-12 21:17:45,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:45,455:INFO:Checking exceptions
2025-01-12 21:17:45,455:INFO:Importing libraries
2025-01-12 21:17:45,456:INFO:Copying training dataset
2025-01-12 21:17:45,463:INFO:Defining folds
2025-01-12 21:17:45,463:INFO:Declaring metric variables
2025-01-12 21:17:45,469:INFO:Importing untrained model
2025-01-12 21:17:45,477:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:17:45,487:INFO:Starting cross validation
2025-01-12 21:17:45,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:47,706:INFO:Calculating mean and std
2025-01-12 21:17:47,708:INFO:Creating metrics dataframe
2025-01-12 21:17:47,711:INFO:Uploading results into container
2025-01-12 21:17:47,713:INFO:Uploading model into container now
2025-01-12 21:17:47,714:INFO:_master_model_container: 14
2025-01-12 21:17:47,714:INFO:_display_container: 2
2025-01-12 21:17:47,714:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:17:47,715:INFO:create_model() successfully completed......................................
2025-01-12 21:17:47,934:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:47,935:INFO:Creating metrics dataframe
2025-01-12 21:17:47,953:INFO:Initializing AdaBoost Regressor
2025-01-12 21:17:47,953:INFO:Total runtime is 0.2061318755149841 minutes
2025-01-12 21:17:47,959:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:47,959:INFO:Initializing create_model()
2025-01-12 21:17:47,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:47,960:INFO:Checking exceptions
2025-01-12 21:17:47,960:INFO:Importing libraries
2025-01-12 21:17:47,960:INFO:Copying training dataset
2025-01-12 21:17:47,967:INFO:Defining folds
2025-01-12 21:17:47,967:INFO:Declaring metric variables
2025-01-12 21:17:47,972:INFO:Importing untrained model
2025-01-12 21:17:47,979:INFO:AdaBoost Regressor Imported successfully
2025-01-12 21:17:47,990:INFO:Starting cross validation
2025-01-12 21:17:47,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:48,573:INFO:Calculating mean and std
2025-01-12 21:17:48,574:INFO:Creating metrics dataframe
2025-01-12 21:17:48,577:INFO:Uploading results into container
2025-01-12 21:17:48,577:INFO:Uploading model into container now
2025-01-12 21:17:48,578:INFO:_master_model_container: 15
2025-01-12 21:17:48,578:INFO:_display_container: 2
2025-01-12 21:17:48,578:INFO:AdaBoostRegressor(random_state=123)
2025-01-12 21:17:48,578:INFO:create_model() successfully completed......................................
2025-01-12 21:17:48,799:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:48,800:INFO:Creating metrics dataframe
2025-01-12 21:17:48,815:INFO:Initializing Gradient Boosting Regressor
2025-01-12 21:17:48,815:INFO:Total runtime is 0.22048995097478227 minutes
2025-01-12 21:17:48,819:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:48,820:INFO:Initializing create_model()
2025-01-12 21:17:48,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:48,820:INFO:Checking exceptions
2025-01-12 21:17:48,820:INFO:Importing libraries
2025-01-12 21:17:48,821:INFO:Copying training dataset
2025-01-12 21:17:48,829:INFO:Defining folds
2025-01-12 21:17:48,830:INFO:Declaring metric variables
2025-01-12 21:17:48,834:INFO:Importing untrained model
2025-01-12 21:17:48,843:INFO:Gradient Boosting Regressor Imported successfully
2025-01-12 21:17:48,874:INFO:Starting cross validation
2025-01-12 21:17:48,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:50,457:INFO:Calculating mean and std
2025-01-12 21:17:50,457:INFO:Creating metrics dataframe
2025-01-12 21:17:50,460:INFO:Uploading results into container
2025-01-12 21:17:50,460:INFO:Uploading model into container now
2025-01-12 21:17:50,462:INFO:_master_model_container: 16
2025-01-12 21:17:50,462:INFO:_display_container: 2
2025-01-12 21:17:50,462:INFO:GradientBoostingRegressor(random_state=123)
2025-01-12 21:17:50,462:INFO:create_model() successfully completed......................................
2025-01-12 21:17:50,677:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:50,677:INFO:Creating metrics dataframe
2025-01-12 21:17:50,697:INFO:Initializing Light Gradient Boosting Machine
2025-01-12 21:17:50,697:INFO:Total runtime is 0.2518705606460571 minutes
2025-01-12 21:17:50,702:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:50,702:INFO:Initializing create_model()
2025-01-12 21:17:50,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:50,702:INFO:Checking exceptions
2025-01-12 21:17:50,702:INFO:Importing libraries
2025-01-12 21:17:50,703:INFO:Copying training dataset
2025-01-12 21:17:50,710:INFO:Defining folds
2025-01-12 21:17:50,711:INFO:Declaring metric variables
2025-01-12 21:17:50,717:INFO:Importing untrained model
2025-01-12 21:17:50,723:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-12 21:17:50,732:INFO:Starting cross validation
2025-01-12 21:17:50,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:51,445:INFO:Calculating mean and std
2025-01-12 21:17:51,447:INFO:Creating metrics dataframe
2025-01-12 21:17:51,449:INFO:Uploading results into container
2025-01-12 21:17:51,449:INFO:Uploading model into container now
2025-01-12 21:17:51,450:INFO:_master_model_container: 17
2025-01-12 21:17:51,450:INFO:_display_container: 2
2025-01-12 21:17:51,451:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:17:51,451:INFO:create_model() successfully completed......................................
2025-01-12 21:17:51,668:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:51,668:INFO:Creating metrics dataframe
2025-01-12 21:17:51,684:INFO:Initializing Dummy Regressor
2025-01-12 21:17:51,684:INFO:Total runtime is 0.26831029256184896 minutes
2025-01-12 21:17:51,688:INFO:SubProcess create_model() called ==================================
2025-01-12 21:17:51,689:INFO:Initializing create_model()
2025-01-12 21:17:51,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1439673D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:51,689:INFO:Checking exceptions
2025-01-12 21:17:51,689:INFO:Importing libraries
2025-01-12 21:17:51,690:INFO:Copying training dataset
2025-01-12 21:17:51,698:INFO:Defining folds
2025-01-12 21:17:51,699:INFO:Declaring metric variables
2025-01-12 21:17:51,703:INFO:Importing untrained model
2025-01-12 21:17:51,707:INFO:Dummy Regressor Imported successfully
2025-01-12 21:17:51,717:INFO:Starting cross validation
2025-01-12 21:17:51,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-12 21:17:51,841:INFO:Calculating mean and std
2025-01-12 21:17:51,842:INFO:Creating metrics dataframe
2025-01-12 21:17:51,845:INFO:Uploading results into container
2025-01-12 21:17:51,845:INFO:Uploading model into container now
2025-01-12 21:17:51,846:INFO:_master_model_container: 18
2025-01-12 21:17:51,846:INFO:_display_container: 2
2025-01-12 21:17:51,846:INFO:DummyRegressor()
2025-01-12 21:17:51,846:INFO:create_model() successfully completed......................................
2025-01-12 21:17:52,063:INFO:SubProcess create_model() end ==================================
2025-01-12 21:17:52,065:INFO:Creating metrics dataframe
2025-01-12 21:17:52,080:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-12 21:17:52,094:INFO:Initializing create_model()
2025-01-12 21:17:52,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:17:52,094:INFO:Checking exceptions
2025-01-12 21:17:52,096:INFO:Importing libraries
2025-01-12 21:17:52,096:INFO:Copying training dataset
2025-01-12 21:17:52,103:INFO:Defining folds
2025-01-12 21:17:52,103:INFO:Declaring metric variables
2025-01-12 21:17:52,103:INFO:Importing untrained model
2025-01-12 21:17:52,103:INFO:Declaring custom model
2025-01-12 21:17:52,104:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:17:52,105:INFO:Cross validation set to False
2025-01-12 21:17:52,105:INFO:Fitting Model
2025-01-12 21:17:52,371:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:17:52,371:INFO:create_model() successfully completed......................................
2025-01-12 21:17:52,631:INFO:_master_model_container: 18
2025-01-12 21:17:52,631:INFO:_display_container: 2
2025-01-12 21:17:52,632:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:17:52,632:INFO:compare_models() successfully completed......................................
2025-01-12 21:18:15,312:INFO:Initializing finalize_model()
2025-01-12 21:18:15,312:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-12 21:18:15,313:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-12 21:18:15,317:INFO:Initializing create_model()
2025-01-12 21:18:15,317:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-12 21:18:15,317:INFO:Checking exceptions
2025-01-12 21:18:15,319:INFO:Importing libraries
2025-01-12 21:18:15,319:INFO:Copying training dataset
2025-01-12 21:18:15,320:INFO:Defining folds
2025-01-12 21:18:15,320:INFO:Declaring metric variables
2025-01-12 21:18:15,320:INFO:Importing untrained model
2025-01-12 21:18:15,320:INFO:Declaring custom model
2025-01-12 21:18:15,321:INFO:Extra Trees Regressor Imported successfully
2025-01-12 21:18:15,322:INFO:Cross validation set to False
2025-01-12 21:18:15,322:INFO:Fitting Model
2025-01-12 21:18:15,670:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:18:15,670:INFO:create_model() successfully completed......................................
2025-01-12 21:18:15,885:INFO:_master_model_container: 18
2025-01-12 21:18:15,886:INFO:_display_container: 2
2025-01-12 21:18:15,894:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:18:15,894:INFO:finalize_model() successfully completed......................................
2025-01-12 21:18:16,125:INFO:Initializing save_model()
2025-01-12 21:18:16,125:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=super95_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-12 21:18:16,125:INFO:Adding model into prep_pipe
2025-01-12 21:18:16,125:WARNING:Only Model saved as it was a pipeline.
2025-01-12 21:18:16,229:INFO:super95_model.pkl saved in current working directory
2025-01-12 21:18:16,238:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-12 21:18:16,238:INFO:save_model() successfully completed......................................
2025-01-12 21:19:54,036:INFO:Initializing load_model()
2025-01-12 21:19:54,039:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:19:55,423:INFO:Initializing load_model()
2025-01-12 21:19:55,423:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:19:55,854:INFO:Initializing predict_model()
2025-01-12 21:19:55,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0B7B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76FC0>)
2025-01-12 21:19:55,854:INFO:Checking exceptions
2025-01-12 21:19:55,854:INFO:Preloading libraries
2025-01-12 21:19:55,855:INFO:Set up data.
2025-01-12 21:19:55,859:INFO:Set up index.
2025-01-12 21:19:56,175:INFO:Initializing predict_model()
2025-01-12 21:19:56,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDA5450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEB5CD60>)
2025-01-12 21:19:56,175:INFO:Checking exceptions
2025-01-12 21:19:56,175:INFO:Preloading libraries
2025-01-12 21:19:56,176:INFO:Set up data.
2025-01-12 21:19:56,177:INFO:Set up index.
2025-01-12 21:20:20,838:INFO:Initializing load_model()
2025-01-12 21:20:20,838:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:20:21,025:INFO:Initializing load_model()
2025-01-12 21:20:21,025:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:20:21,242:INFO:Initializing predict_model()
2025-01-12 21:20:21,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDA1A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE758A0>)
2025-01-12 21:20:21,242:INFO:Checking exceptions
2025-01-12 21:20:21,242:INFO:Preloading libraries
2025-01-12 21:20:21,243:INFO:Set up data.
2025-01-12 21:20:21,244:INFO:Set up index.
2025-01-12 21:20:21,404:INFO:Initializing predict_model()
2025-01-12 21:20:21,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE9EF150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5EF20>)
2025-01-12 21:20:21,404:INFO:Checking exceptions
2025-01-12 21:20:21,404:INFO:Preloading libraries
2025-01-12 21:20:21,404:INFO:Set up data.
2025-01-12 21:20:21,406:INFO:Set up index.
2025-01-12 21:21:19,943:INFO:Initializing load_model()
2025-01-12 21:21:19,943:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:21:20,110:INFO:Initializing load_model()
2025-01-12 21:21:20,110:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:21:20,318:INFO:Initializing predict_model()
2025-01-12 21:21:20,318:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0AC2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75A80>)
2025-01-12 21:21:20,318:INFO:Checking exceptions
2025-01-12 21:21:20,318:INFO:Preloading libraries
2025-01-12 21:21:20,318:INFO:Set up data.
2025-01-12 21:21:20,320:INFO:Set up index.
2025-01-12 21:21:20,480:INFO:Initializing predict_model()
2025-01-12 21:21:20,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE48F390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:21:20,481:INFO:Checking exceptions
2025-01-12 21:21:20,481:INFO:Preloading libraries
2025-01-12 21:21:20,481:INFO:Set up data.
2025-01-12 21:21:20,483:INFO:Set up index.
2025-01-12 21:21:58,884:INFO:Initializing load_model()
2025-01-12 21:21:58,884:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:21:59,022:INFO:Initializing load_model()
2025-01-12 21:21:59,022:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:21:59,233:INFO:Initializing predict_model()
2025-01-12 21:21:59,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC3C950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75080>)
2025-01-12 21:21:59,233:INFO:Checking exceptions
2025-01-12 21:21:59,233:INFO:Preloading libraries
2025-01-12 21:21:59,233:INFO:Set up data.
2025-01-12 21:21:59,235:INFO:Set up index.
2025-01-12 21:21:59,409:INFO:Initializing predict_model()
2025-01-12 21:21:59,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF71910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5EF20>)
2025-01-12 21:21:59,409:INFO:Checking exceptions
2025-01-12 21:21:59,410:INFO:Preloading libraries
2025-01-12 21:21:59,410:INFO:Set up data.
2025-01-12 21:21:59,412:INFO:Set up index.
2025-01-12 21:22:13,673:INFO:Initializing load_model()
2025-01-12 21:22:13,673:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:22:13,848:INFO:Initializing load_model()
2025-01-12 21:22:13,848:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:22:14,067:INFO:Initializing predict_model()
2025-01-12 21:22:14,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF4FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74EA0>)
2025-01-12 21:22:14,067:INFO:Checking exceptions
2025-01-12 21:22:14,067:INFO:Preloading libraries
2025-01-12 21:22:14,068:INFO:Set up data.
2025-01-12 21:22:14,070:INFO:Set up index.
2025-01-12 21:22:14,230:INFO:Initializing predict_model()
2025-01-12 21:22:14,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE2BC150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE2E520>)
2025-01-12 21:22:14,231:INFO:Checking exceptions
2025-01-12 21:22:14,231:INFO:Preloading libraries
2025-01-12 21:22:14,231:INFO:Set up data.
2025-01-12 21:22:14,233:INFO:Set up index.
2025-01-12 21:23:55,198:INFO:Initializing load_model()
2025-01-12 21:23:55,198:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:23:55,418:INFO:Initializing load_model()
2025-01-12 21:23:55,419:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:23:55,663:INFO:Initializing predict_model()
2025-01-12 21:23:55,663:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0E00D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75C60>)
2025-01-12 21:23:55,663:INFO:Checking exceptions
2025-01-12 21:23:55,663:INFO:Preloading libraries
2025-01-12 21:23:55,664:INFO:Set up data.
2025-01-12 21:23:55,666:INFO:Set up index.
2025-01-12 21:23:55,838:INFO:Initializing predict_model()
2025-01-12 21:23:55,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF4B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEB5C7C0>)
2025-01-12 21:23:55,838:INFO:Checking exceptions
2025-01-12 21:23:55,839:INFO:Preloading libraries
2025-01-12 21:23:55,839:INFO:Set up data.
2025-01-12 21:23:55,841:INFO:Set up index.
2025-01-12 21:24:16,097:INFO:Initializing load_model()
2025-01-12 21:24:16,098:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:24:16,234:INFO:Initializing load_model()
2025-01-12 21:24:16,234:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:24:16,438:INFO:Initializing predict_model()
2025-01-12 21:24:16,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC9C510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74E00>)
2025-01-12 21:24:16,438:INFO:Checking exceptions
2025-01-12 21:24:16,438:INFO:Preloading libraries
2025-01-12 21:24:16,438:INFO:Set up data.
2025-01-12 21:24:16,440:INFO:Set up index.
2025-01-12 21:24:16,604:INFO:Initializing predict_model()
2025-01-12 21:24:16,604:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF549D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:24:16,605:INFO:Checking exceptions
2025-01-12 21:24:16,605:INFO:Preloading libraries
2025-01-12 21:24:16,605:INFO:Set up data.
2025-01-12 21:24:16,607:INFO:Set up index.
2025-01-12 21:26:30,418:INFO:Initializing load_model()
2025-01-12 21:26:30,418:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:26:30,564:INFO:Initializing load_model()
2025-01-12 21:26:30,564:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:26:30,776:INFO:Initializing predict_model()
2025-01-12 21:26:30,777:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC8EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74D60>)
2025-01-12 21:26:30,777:INFO:Checking exceptions
2025-01-12 21:26:30,777:INFO:Preloading libraries
2025-01-12 21:26:30,778:INFO:Set up data.
2025-01-12 21:26:30,780:INFO:Set up index.
2025-01-12 21:26:30,943:INFO:Initializing predict_model()
2025-01-12 21:26:30,944:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDFE1DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236F0C48220>)
2025-01-12 21:26:30,944:INFO:Checking exceptions
2025-01-12 21:26:30,944:INFO:Preloading libraries
2025-01-12 21:26:30,944:INFO:Set up data.
2025-01-12 21:26:30,946:INFO:Set up index.
2025-01-12 21:26:46,524:INFO:Initializing load_model()
2025-01-12 21:26:46,524:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:26:46,674:INFO:Initializing load_model()
2025-01-12 21:26:46,674:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:26:46,882:INFO:Initializing predict_model()
2025-01-12 21:26:46,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC9DBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76FC0>)
2025-01-12 21:26:46,882:INFO:Checking exceptions
2025-01-12 21:26:46,882:INFO:Preloading libraries
2025-01-12 21:26:46,883:INFO:Set up data.
2025-01-12 21:26:46,885:INFO:Set up index.
2025-01-12 21:26:47,052:INFO:Initializing predict_model()
2025-01-12 21:26:47,052:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FBEA5D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:26:47,052:INFO:Checking exceptions
2025-01-12 21:26:47,052:INFO:Preloading libraries
2025-01-12 21:26:47,053:INFO:Set up data.
2025-01-12 21:26:47,054:INFO:Set up index.
2025-01-12 21:31:00,753:INFO:Initializing load_model()
2025-01-12 21:31:00,753:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:00,888:INFO:Initializing load_model()
2025-01-12 21:31:00,889:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:01,097:INFO:Initializing predict_model()
2025-01-12 21:31:01,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDA0510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75760>)
2025-01-12 21:31:01,098:INFO:Checking exceptions
2025-01-12 21:31:01,098:INFO:Preloading libraries
2025-01-12 21:31:01,098:INFO:Set up data.
2025-01-12 21:31:01,101:INFO:Set up index.
2025-01-12 21:31:01,266:INFO:Initializing predict_model()
2025-01-12 21:31:01,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE6B3390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FE677E20>)
2025-01-12 21:31:01,267:INFO:Checking exceptions
2025-01-12 21:31:01,267:INFO:Preloading libraries
2025-01-12 21:31:01,267:INFO:Set up data.
2025-01-12 21:31:01,269:INFO:Set up index.
2025-01-12 21:31:11,034:INFO:Initializing load_model()
2025-01-12 21:31:11,035:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:11,169:INFO:Initializing load_model()
2025-01-12 21:31:11,170:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:11,378:INFO:Initializing predict_model()
2025-01-12 21:31:11,378:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC9F150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE762A0>)
2025-01-12 21:31:11,379:INFO:Checking exceptions
2025-01-12 21:31:11,379:INFO:Preloading libraries
2025-01-12 21:31:11,379:INFO:Set up data.
2025-01-12 21:31:11,382:INFO:Set up index.
2025-01-12 21:31:11,547:INFO:Initializing predict_model()
2025-01-12 21:31:11,548:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE3D97D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEB5CD60>)
2025-01-12 21:31:11,548:INFO:Checking exceptions
2025-01-12 21:31:11,548:INFO:Preloading libraries
2025-01-12 21:31:11,548:INFO:Set up data.
2025-01-12 21:31:11,550:INFO:Set up index.
2025-01-12 21:31:13,515:INFO:Initializing load_model()
2025-01-12 21:31:13,515:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:13,647:INFO:Initializing load_model()
2025-01-12 21:31:13,648:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:13,848:INFO:Initializing predict_model()
2025-01-12 21:31:13,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEECE4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE751C0>)
2025-01-12 21:31:13,848:INFO:Checking exceptions
2025-01-12 21:31:13,848:INFO:Preloading libraries
2025-01-12 21:31:13,849:INFO:Set up data.
2025-01-12 21:31:13,851:INFO:Set up index.
2025-01-12 21:31:14,010:INFO:Initializing predict_model()
2025-01-12 21:31:14,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF4B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEB5C7C0>)
2025-01-12 21:31:14,010:INFO:Checking exceptions
2025-01-12 21:31:14,010:INFO:Preloading libraries
2025-01-12 21:31:14,010:INFO:Set up data.
2025-01-12 21:31:14,012:INFO:Set up index.
2025-01-12 21:31:16,503:INFO:Initializing load_model()
2025-01-12 21:31:16,503:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:16,667:INFO:Initializing load_model()
2025-01-12 21:31:16,667:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:16,871:INFO:Initializing predict_model()
2025-01-12 21:31:16,871:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDC0750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE753A0>)
2025-01-12 21:31:16,871:INFO:Checking exceptions
2025-01-12 21:31:16,871:INFO:Preloading libraries
2025-01-12 21:31:16,872:INFO:Set up data.
2025-01-12 21:31:16,874:INFO:Set up index.
2025-01-12 21:31:17,033:INFO:Initializing predict_model()
2025-01-12 21:31:17,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE378310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5EF20>)
2025-01-12 21:31:17,034:INFO:Checking exceptions
2025-01-12 21:31:17,034:INFO:Preloading libraries
2025-01-12 21:31:17,034:INFO:Set up data.
2025-01-12 21:31:17,037:INFO:Set up index.
2025-01-12 21:31:20,676:INFO:Initializing load_model()
2025-01-12 21:31:20,676:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:20,809:INFO:Initializing load_model()
2025-01-12 21:31:20,810:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:21,006:INFO:Initializing predict_model()
2025-01-12 21:31:21,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC8D350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74D60>)
2025-01-12 21:31:21,006:INFO:Checking exceptions
2025-01-12 21:31:21,007:INFO:Preloading libraries
2025-01-12 21:31:21,007:INFO:Set up data.
2025-01-12 21:31:21,009:INFO:Set up index.
2025-01-12 21:31:21,169:INFO:Initializing predict_model()
2025-01-12 21:31:21,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE27C6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FE6763E0>)
2025-01-12 21:31:21,169:INFO:Checking exceptions
2025-01-12 21:31:21,169:INFO:Preloading libraries
2025-01-12 21:31:21,170:INFO:Set up data.
2025-01-12 21:31:21,172:INFO:Set up index.
2025-01-12 21:31:24,886:INFO:Initializing load_model()
2025-01-12 21:31:24,886:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:25,048:INFO:Initializing load_model()
2025-01-12 21:31:25,048:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:25,254:INFO:Initializing predict_model()
2025-01-12 21:31:25,254:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FECF0590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76340>)
2025-01-12 21:31:25,255:INFO:Checking exceptions
2025-01-12 21:31:25,255:INFO:Preloading libraries
2025-01-12 21:31:25,255:INFO:Set up data.
2025-01-12 21:31:25,257:INFO:Set up index.
2025-01-12 21:31:25,414:INFO:Initializing predict_model()
2025-01-12 21:31:25,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE467990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5EF20>)
2025-01-12 21:31:25,414:INFO:Checking exceptions
2025-01-12 21:31:25,414:INFO:Preloading libraries
2025-01-12 21:31:25,414:INFO:Set up data.
2025-01-12 21:31:25,416:INFO:Set up index.
2025-01-12 21:31:28,659:INFO:Initializing load_model()
2025-01-12 21:31:28,659:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:28,814:INFO:Initializing load_model()
2025-01-12 21:31:28,814:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:29,018:INFO:Initializing predict_model()
2025-01-12 21:31:29,018:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC8C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75A80>)
2025-01-12 21:31:29,019:INFO:Checking exceptions
2025-01-12 21:31:29,019:INFO:Preloading libraries
2025-01-12 21:31:29,019:INFO:Set up data.
2025-01-12 21:31:29,021:INFO:Set up index.
2025-01-12 21:31:29,193:INFO:Initializing predict_model()
2025-01-12 21:31:29,193:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEA4E390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEAFA340>)
2025-01-12 21:31:29,193:INFO:Checking exceptions
2025-01-12 21:31:29,193:INFO:Preloading libraries
2025-01-12 21:31:29,193:INFO:Set up data.
2025-01-12 21:31:29,195:INFO:Set up index.
2025-01-12 21:31:31,216:INFO:Initializing load_model()
2025-01-12 21:31:31,217:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:31,386:INFO:Initializing load_model()
2025-01-12 21:31:31,386:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:31,600:INFO:Initializing predict_model()
2025-01-12 21:31:31,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEAECC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75620>)
2025-01-12 21:31:31,600:INFO:Checking exceptions
2025-01-12 21:31:31,600:INFO:Preloading libraries
2025-01-12 21:31:31,600:INFO:Set up data.
2025-01-12 21:31:31,602:INFO:Set up index.
2025-01-12 21:31:31,779:INFO:Initializing predict_model()
2025-01-12 21:31:31,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDFAF390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEAFAA20>)
2025-01-12 21:31:31,779:INFO:Checking exceptions
2025-01-12 21:31:31,779:INFO:Preloading libraries
2025-01-12 21:31:31,780:INFO:Set up data.
2025-01-12 21:31:31,783:INFO:Set up index.
2025-01-12 21:31:32,669:INFO:Initializing load_model()
2025-01-12 21:31:32,670:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:32,809:INFO:Initializing load_model()
2025-01-12 21:31:32,809:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:33,014:INFO:Initializing predict_model()
2025-01-12 21:31:33,015:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0C8090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74F40>)
2025-01-12 21:31:33,015:INFO:Checking exceptions
2025-01-12 21:31:33,015:INFO:Preloading libraries
2025-01-12 21:31:33,015:INFO:Set up data.
2025-01-12 21:31:33,017:INFO:Set up index.
2025-01-12 21:31:33,174:INFO:Initializing predict_model()
2025-01-12 21:31:33,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEACB3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEDE0>)
2025-01-12 21:31:33,175:INFO:Checking exceptions
2025-01-12 21:31:33,175:INFO:Preloading libraries
2025-01-12 21:31:33,175:INFO:Set up data.
2025-01-12 21:31:33,177:INFO:Set up index.
2025-01-12 21:31:38,431:INFO:Initializing load_model()
2025-01-12 21:31:38,431:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:38,568:INFO:Initializing load_model()
2025-01-12 21:31:38,569:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:38,779:INFO:Initializing predict_model()
2025-01-12 21:31:38,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEE0EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE762A0>)
2025-01-12 21:31:38,780:INFO:Checking exceptions
2025-01-12 21:31:38,780:INFO:Preloading libraries
2025-01-12 21:31:38,780:INFO:Set up data.
2025-01-12 21:31:38,782:INFO:Set up index.
2025-01-12 21:31:38,944:INFO:Initializing predict_model()
2025-01-12 21:31:38,944:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236EDE42350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5EF20>)
2025-01-12 21:31:38,945:INFO:Checking exceptions
2025-01-12 21:31:38,945:INFO:Preloading libraries
2025-01-12 21:31:38,945:INFO:Set up data.
2025-01-12 21:31:38,947:INFO:Set up index.
2025-01-12 21:31:39,672:INFO:Initializing load_model()
2025-01-12 21:31:39,672:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:39,841:INFO:Initializing load_model()
2025-01-12 21:31:39,841:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:40,045:INFO:Initializing predict_model()
2025-01-12 21:31:40,045:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC98410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76660>)
2025-01-12 21:31:40,046:INFO:Checking exceptions
2025-01-12 21:31:40,046:INFO:Preloading libraries
2025-01-12 21:31:40,046:INFO:Set up data.
2025-01-12 21:31:40,048:INFO:Set up index.
2025-01-12 21:31:40,212:INFO:Initializing predict_model()
2025-01-12 21:31:40,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236EC578210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:31:40,212:INFO:Checking exceptions
2025-01-12 21:31:40,212:INFO:Preloading libraries
2025-01-12 21:31:40,212:INFO:Set up data.
2025-01-12 21:31:40,214:INFO:Set up index.
2025-01-12 21:31:40,598:INFO:Initializing load_model()
2025-01-12 21:31:40,599:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:40,738:INFO:Initializing load_model()
2025-01-12 21:31:40,739:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:31:40,934:INFO:Initializing predict_model()
2025-01-12 21:31:40,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FED66E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76340>)
2025-01-12 21:31:40,934:INFO:Checking exceptions
2025-01-12 21:31:40,935:INFO:Preloading libraries
2025-01-12 21:31:40,935:INFO:Set up data.
2025-01-12 21:31:40,937:INFO:Set up index.
2025-01-12 21:31:41,094:INFO:Initializing predict_model()
2025-01-12 21:31:41,095:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE450850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FE676520>)
2025-01-12 21:31:41,095:INFO:Checking exceptions
2025-01-12 21:31:41,095:INFO:Preloading libraries
2025-01-12 21:31:41,095:INFO:Set up data.
2025-01-12 21:31:41,097:INFO:Set up index.
2025-01-12 21:32:50,451:INFO:Initializing load_model()
2025-01-12 21:32:50,452:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:32:50,591:INFO:Initializing load_model()
2025-01-12 21:32:50,591:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:33:30,187:INFO:Initializing load_model()
2025-01-12 21:33:30,187:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:33:30,321:INFO:Initializing load_model()
2025-01-12 21:33:30,321:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:33:30,566:INFO:Initializing predict_model()
2025-01-12 21:33:30,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF55190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75DA0>)
2025-01-12 21:33:30,566:INFO:Checking exceptions
2025-01-12 21:33:30,567:INFO:Preloading libraries
2025-01-12 21:33:30,567:INFO:Set up data.
2025-01-12 21:33:30,569:INFO:Set up index.
2025-01-12 21:33:30,730:INFO:Initializing predict_model()
2025-01-12 21:33:30,731:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF55190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEB5CD60>)
2025-01-12 21:33:30,731:INFO:Checking exceptions
2025-01-12 21:33:30,731:INFO:Preloading libraries
2025-01-12 21:33:30,731:INFO:Set up data.
2025-01-12 21:33:30,733:INFO:Set up index.
2025-01-12 21:34:10,879:INFO:Initializing load_model()
2025-01-12 21:34:10,879:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:34:11,017:INFO:Initializing load_model()
2025-01-12 21:34:11,018:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:34:11,234:INFO:Initializing predict_model()
2025-01-12 21:34:11,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE199750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:34:11,234:INFO:Checking exceptions
2025-01-12 21:34:11,234:INFO:Preloading libraries
2025-01-12 21:34:11,235:INFO:Set up data.
2025-01-12 21:34:11,237:INFO:Set up index.
2025-01-12 21:34:11,393:INFO:Initializing predict_model()
2025-01-12 21:34:11,393:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDF4FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:34:11,393:INFO:Checking exceptions
2025-01-12 21:34:11,393:INFO:Preloading libraries
2025-01-12 21:34:11,394:INFO:Set up data.
2025-01-12 21:34:11,395:INFO:Set up index.
2025-01-12 21:35:25,371:INFO:Initializing load_model()
2025-01-12 21:35:25,371:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:35:25,508:INFO:Initializing load_model()
2025-01-12 21:35:25,508:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:35:25,710:INFO:Initializing predict_model()
2025-01-12 21:35:25,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FA8EC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE763E0>)
2025-01-12 21:35:25,711:INFO:Checking exceptions
2025-01-12 21:35:25,711:INFO:Preloading libraries
2025-01-12 21:35:25,711:INFO:Set up data.
2025-01-12 21:35:25,715:INFO:Set up index.
2025-01-12 21:35:25,886:INFO:Initializing predict_model()
2025-01-12 21:35:25,886:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FDFFEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEDE0>)
2025-01-12 21:35:25,886:INFO:Checking exceptions
2025-01-12 21:35:25,886:INFO:Preloading libraries
2025-01-12 21:35:25,887:INFO:Set up data.
2025-01-12 21:35:25,888:INFO:Set up index.
2025-01-12 21:37:05,107:INFO:Initializing load_model()
2025-01-12 21:37:05,108:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:37:05,513:INFO:Initializing load_model()
2025-01-12 21:37:05,513:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:37:15,694:INFO:Initializing load_model()
2025-01-12 21:37:15,695:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:37:15,870:INFO:Initializing load_model()
2025-01-12 21:37:15,871:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:38:49,486:INFO:Initializing load_model()
2025-01-12 21:38:49,487:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:38:49,647:INFO:Initializing load_model()
2025-01-12 21:38:49,647:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:38:49,856:INFO:Initializing predict_model()
2025-01-12 21:38:49,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEC9A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75620>)
2025-01-12 21:38:49,856:INFO:Checking exceptions
2025-01-12 21:38:49,856:INFO:Preloading libraries
2025-01-12 21:38:49,856:INFO:Set up data.
2025-01-12 21:38:49,858:INFO:Set up index.
2025-01-12 21:47:29,001:INFO:Initializing load_model()
2025-01-12 21:47:29,002:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:47:29,435:INFO:Initializing load_model()
2025-01-12 21:47:29,435:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:47:30,205:INFO:Initializing predict_model()
2025-01-12 21:47:30,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE558290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEA5FE20>)
2025-01-12 21:47:30,205:INFO:Checking exceptions
2025-01-12 21:47:30,205:INFO:Preloading libraries
2025-01-12 21:47:30,206:INFO:Set up data.
2025-01-12 21:47:30,208:INFO:Set up index.
2025-01-12 21:47:33,746:INFO:Initializing load_model()
2025-01-12 21:47:33,746:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:47:33,885:INFO:Initializing load_model()
2025-01-12 21:47:33,885:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:47:34,122:INFO:Initializing predict_model()
2025-01-12 21:47:34,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FA9EC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE763E0>)
2025-01-12 21:47:34,122:INFO:Checking exceptions
2025-01-12 21:47:34,123:INFO:Preloading libraries
2025-01-12 21:47:34,123:INFO:Set up data.
2025-01-12 21:47:34,125:INFO:Set up index.
2025-01-12 21:58:11,423:INFO:Initializing load_model()
2025-01-12 21:58:11,424:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:58:11,570:INFO:Initializing load_model()
2025-01-12 21:58:11,570:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:58:11,787:INFO:Initializing predict_model()
2025-01-12 21:58:11,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FABCBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FE6763E0>)
2025-01-12 21:58:11,787:INFO:Checking exceptions
2025-01-12 21:58:11,787:INFO:Preloading libraries
2025-01-12 21:58:11,788:INFO:Set up data.
2025-01-12 21:58:11,790:INFO:Set up index.
2025-01-12 21:58:37,334:INFO:Initializing load_model()
2025-01-12 21:58:37,335:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:58:37,473:INFO:Initializing load_model()
2025-01-12 21:58:37,473:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 21:58:37,680:INFO:Initializing predict_model()
2025-01-12 21:58:37,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FAC2E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEDE0>)
2025-01-12 21:58:37,681:INFO:Checking exceptions
2025-01-12 21:58:37,681:INFO:Preloading libraries
2025-01-12 21:58:37,682:INFO:Set up data.
2025-01-12 21:58:37,684:INFO:Set up index.
2025-01-12 21:58:37,867:INFO:Initializing predict_model()
2025-01-12 21:58:37,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FE41A750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEDFEDE0>)
2025-01-12 21:58:37,868:INFO:Checking exceptions
2025-01-12 21:58:37,868:INFO:Preloading libraries
2025-01-12 21:58:37,869:INFO:Set up data.
2025-01-12 21:58:37,870:INFO:Set up index.
2025-01-12 22:02:48,585:INFO:Initializing predict_model()
2025-01-12 22:02:48,592:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F145819760>)
2025-01-12 22:02:48,593:INFO:Checking exceptions
2025-01-12 22:02:48,593:INFO:Preloading libraries
2025-01-12 22:02:48,659:INFO:Set up data.
2025-01-12 22:02:48,677:INFO:Set up index.
2025-01-12 22:03:36,860:INFO:Initializing load_model()
2025-01-12 22:03:36,861:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:03:36,997:INFO:Initializing load_model()
2025-01-12 22:03:36,997:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:04:48,655:INFO:Initializing load_model()
2025-01-12 22:04:48,655:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:04:48,822:INFO:Initializing load_model()
2025-01-12 22:04:48,822:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:04:49,033:INFO:Initializing predict_model()
2025-01-12 22:04:49,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FA87890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76020>)
2025-01-12 22:04:49,034:INFO:Checking exceptions
2025-01-12 22:04:49,034:INFO:Preloading libraries
2025-01-12 22:04:49,034:INFO:Set up data.
2025-01-12 22:04:49,037:INFO:Set up index.
2025-01-12 22:05:18,322:INFO:Initializing load_model()
2025-01-12 22:05:18,322:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:05:18,463:INFO:Initializing load_model()
2025-01-12 22:05:18,463:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:05:18,682:INFO:Initializing predict_model()
2025-01-12 22:05:18,682:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FCA9EB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE75760>)
2025-01-12 22:05:18,682:INFO:Checking exceptions
2025-01-12 22:05:18,682:INFO:Preloading libraries
2025-01-12 22:05:18,683:INFO:Set up data.
2025-01-12 22:05:18,685:INFO:Set up index.
2025-01-12 22:05:37,494:INFO:Initializing load_model()
2025-01-12 22:05:37,495:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:05:37,638:INFO:Initializing load_model()
2025-01-12 22:05:37,639:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:05:37,835:INFO:Initializing predict_model()
2025-01-12 22:05:37,835:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0DED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE765C0>)
2025-01-12 22:05:37,836:INFO:Checking exceptions
2025-01-12 22:05:37,836:INFO:Preloading libraries
2025-01-12 22:05:37,836:INFO:Set up data.
2025-01-12 22:05:37,838:INFO:Set up index.
2025-01-12 22:07:01,957:INFO:Initializing predict_model()
2025-01-12 22:07:01,957:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F16D0B4860>)
2025-01-12 22:07:01,958:INFO:Checking exceptions
2025-01-12 22:07:01,958:INFO:Preloading libraries
2025-01-12 22:07:01,960:INFO:Set up data.
2025-01-12 22:07:01,962:INFO:Set up index.
2025-01-12 22:10:41,090:INFO:Initializing load_model()
2025-01-12 22:10:41,090:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:10:41,513:INFO:Initializing load_model()
2025-01-12 22:10:41,513:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:10:41,992:INFO:Initializing predict_model()
2025-01-12 22:10:41,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FECC5090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76B60>)
2025-01-12 22:10:41,992:INFO:Checking exceptions
2025-01-12 22:10:41,993:INFO:Preloading libraries
2025-01-12 22:10:41,993:INFO:Set up data.
2025-01-12 22:10:41,995:INFO:Set up index.
2025-01-12 22:15:40,792:INFO:Initializing load_model()
2025-01-12 22:15:40,792:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:15:40,934:INFO:Initializing load_model()
2025-01-12 22:15:40,934:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:15:41,145:INFO:Initializing predict_model()
2025-01-12 22:15:41,145:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF0C8D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74B80>)
2025-01-12 22:15:41,145:INFO:Checking exceptions
2025-01-12 22:15:41,146:INFO:Preloading libraries
2025-01-12 22:15:41,146:INFO:Set up data.
2025-01-12 22:15:41,148:INFO:Set up index.
2025-01-12 22:20:10,027:INFO:Initializing load_model()
2025-01-12 22:20:10,028:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:20:10,428:INFO:Initializing load_model()
2025-01-12 22:20:10,428:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:20:10,911:INFO:Initializing predict_model()
2025-01-12 22:20:10,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FECC6C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE753A0>)
2025-01-12 22:20:10,912:INFO:Checking exceptions
2025-01-12 22:20:10,912:INFO:Preloading libraries
2025-01-12 22:20:10,912:INFO:Set up data.
2025-01-12 22:20:10,914:INFO:Set up index.
2025-01-12 22:21:52,886:INFO:Initializing predict_model()
2025-01-12 22:21:52,890:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F16CF1E3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1460899E0>)
2025-01-12 22:21:52,890:INFO:Checking exceptions
2025-01-12 22:21:52,890:INFO:Preloading libraries
2025-01-12 22:21:52,944:INFO:Set up data.
2025-01-12 22:21:52,974:INFO:Set up index.
2025-01-12 22:28:29,201:INFO:Initializing load_model()
2025-01-12 22:28:29,201:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:28:29,635:INFO:Initializing load_model()
2025-01-12 22:28:29,635:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:28:30,153:INFO:Initializing predict_model()
2025-01-12 22:28:30,154:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEA235D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76340>)
2025-01-12 22:28:30,154:INFO:Checking exceptions
2025-01-12 22:28:30,155:INFO:Preloading libraries
2025-01-12 22:28:30,155:INFO:Set up data.
2025-01-12 22:28:30,157:INFO:Set up index.
2025-01-12 22:28:48,281:INFO:Initializing load_model()
2025-01-12 22:28:48,281:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:28:48,421:INFO:Initializing load_model()
2025-01-12 22:28:48,421:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:28:48,635:INFO:Initializing predict_model()
2025-01-12 22:28:48,635:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEDC1AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74EA0>)
2025-01-12 22:28:48,636:INFO:Checking exceptions
2025-01-12 22:28:48,636:INFO:Preloading libraries
2025-01-12 22:28:48,636:INFO:Set up data.
2025-01-12 22:28:48,638:INFO:Set up index.
2025-01-12 22:30:28,466:INFO:Initializing load_model()
2025-01-12 22:30:28,466:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:30:28,600:INFO:Initializing load_model()
2025-01-12 22:30:28,601:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:30:28,815:INFO:Initializing predict_model()
2025-01-12 22:30:28,815:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FED47010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=2, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE76160>)
2025-01-12 22:30:28,816:INFO:Checking exceptions
2025-01-12 22:30:28,816:INFO:Preloading libraries
2025-01-12 22:30:28,816:INFO:Set up data.
2025-01-12 22:30:28,818:INFO:Set up index.
2025-01-12 22:30:48,534:INFO:Initializing load_model()
2025-01-12 22:30:48,534:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:30:48,672:INFO:Initializing load_model()
2025-01-12 22:30:48,672:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:30:48,873:INFO:Initializing predict_model()
2025-01-12 22:30:48,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FECC6BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=2, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE753A0>)
2025-01-12 22:30:48,874:INFO:Checking exceptions
2025-01-12 22:30:48,874:INFO:Preloading libraries
2025-01-12 22:30:48,874:INFO:Set up data.
2025-01-12 22:30:48,877:INFO:Set up index.
2025-01-12 22:31:13,810:INFO:Initializing load_model()
2025-01-12 22:31:13,810:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:31:13,970:INFO:Initializing load_model()
2025-01-12 22:31:13,970:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:31:14,175:INFO:Initializing predict_model()
2025-01-12 22:31:14,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FEAD85D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74FE0>)
2025-01-12 22:31:14,176:INFO:Checking exceptions
2025-01-12 22:31:14,176:INFO:Preloading libraries
2025-01-12 22:31:14,176:INFO:Set up data.
2025-01-12 22:31:14,178:INFO:Set up index.
2025-01-12 22:31:35,889:INFO:Initializing load_model()
2025-01-12 22:31:35,889:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:31:36,024:INFO:Initializing load_model()
2025-01-12 22:31:36,024:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:31:36,234:INFO:Initializing predict_model()
2025-01-12 22:31:36,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FECF2010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE771A0>)
2025-01-12 22:31:36,235:INFO:Checking exceptions
2025-01-12 22:31:36,235:INFO:Preloading libraries
2025-01-12 22:31:36,235:INFO:Set up data.
2025-01-12 22:31:36,237:INFO:Set up index.
2025-01-12 22:32:09,679:INFO:Initializing load_model()
2025-01-12 22:32:09,679:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:32:09,818:INFO:Initializing load_model()
2025-01-12 22:32:09,818:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:32:10,023:INFO:Initializing predict_model()
2025-01-12 22:32:10,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002369FA87A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEE74CC0>)
2025-01-12 22:32:10,024:INFO:Checking exceptions
2025-01-12 22:32:10,024:INFO:Preloading libraries
2025-01-12 22:32:10,024:INFO:Set up data.
2025-01-12 22:32:10,026:INFO:Set up index.
2025-01-12 22:32:28,445:INFO:Initializing load_model()
2025-01-12 22:32:28,445:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:32:28,583:INFO:Initializing load_model()
2025-01-12 22:32:28,583:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:32:28,780:INFO:Initializing predict_model()
2025-01-12 22:32:28,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000236FF07CB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236FEAFAA20>)
2025-01-12 22:32:28,781:INFO:Checking exceptions
2025-01-12 22:32:28,781:INFO:Preloading libraries
2025-01-12 22:32:28,781:INFO:Set up data.
2025-01-12 22:32:28,783:INFO:Set up index.
2025-01-12 22:38:19,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 22:38:19,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 22:38:19,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 22:38:19,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-12 22:38:25,527:INFO:Initializing load_model()
2025-01-12 22:38:25,527:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:26,373:WARNING:C:\conda\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.1', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.4', 'lightgbm': '4.4.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.30.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-12 22:38:26,380:INFO:Initializing load_model()
2025-01-12 22:38:26,380:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:28,627:INFO:Initializing predict_model()
2025-01-12 22:38:28,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022DFCE525D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022DFF271760>)
2025-01-12 22:38:28,627:INFO:Checking exceptions
2025-01-12 22:38:28,628:INFO:Preloading libraries
2025-01-12 22:38:28,630:INFO:Set up data.
2025-01-12 22:38:28,634:INFO:Set up index.
2025-01-12 22:38:41,015:INFO:Initializing load_model()
2025-01-12 22:38:41,015:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:41,446:WARNING:C:\conda\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.1', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.4', 'lightgbm': '4.4.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.30.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-12 22:38:41,452:INFO:Initializing load_model()
2025-01-12 22:38:41,452:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:41,997:INFO:Initializing predict_model()
2025-01-12 22:38:41,997:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022DFF2FBF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022DFF303100>)
2025-01-12 22:38:41,997:INFO:Checking exceptions
2025-01-12 22:38:41,997:INFO:Preloading libraries
2025-01-12 22:38:41,998:INFO:Set up data.
2025-01-12 22:38:42,000:INFO:Set up index.
2025-01-12 22:38:44,629:INFO:Initializing load_model()
2025-01-12 22:38:44,629:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:45,040:WARNING:C:\conda\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.1', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.4', 'lightgbm': '4.4.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.30.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-12 22:38:45,046:INFO:Initializing load_model()
2025-01-12 22:38:45,046:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:38:46,050:INFO:Initializing predict_model()
2025-01-12 22:38:46,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022DFF5BE510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=5, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022DFF303600>)
2025-01-12 22:38:46,068:INFO:Checking exceptions
2025-01-12 22:38:46,069:INFO:Preloading libraries
2025-01-12 22:38:46,077:INFO:Set up data.
2025-01-12 22:38:46,134:INFO:Set up index.
2025-01-12 22:39:22,102:INFO:Initializing load_model()
2025-01-12 22:39:22,102:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:39:22,594:WARNING:C:\conda\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.1', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.4', 'lightgbm': '4.4.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.30.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-12 22:39:22,600:INFO:Initializing load_model()
2025-01-12 22:39:22,600:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:39:24,782:INFO:Initializing predict_model()
2025-01-12 22:39:24,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022DFF5FF1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022DFF303A60>)
2025-01-12 22:39:24,783:INFO:Checking exceptions
2025-01-12 22:39:24,783:INFO:Preloading libraries
2025-01-12 22:39:24,784:INFO:Set up data.
2025-01-12 22:39:24,787:INFO:Set up index.
2025-01-12 22:40:21,372:INFO:Initializing load_model()
2025-01-12 22:40:21,372:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:40:22,012:WARNING:C:\conda\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.1', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.4', 'lightgbm': '4.4.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.30.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-12 22:40:22,019:INFO:Initializing load_model()
2025-01-12 22:40:22,019:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-12 22:40:22,454:INFO:Initializing predict_model()
2025-01-12 22:40:22,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022DFF5BC7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022DF19E4900>)
2025-01-12 22:40:22,455:INFO:Checking exceptions
2025-01-12 22:40:22,455:INFO:Preloading libraries
2025-01-12 22:40:22,455:INFO:Set up data.
2025-01-12 22:40:22,458:INFO:Set up index.
2025-01-13 11:10:52,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 11:10:52,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 11:10:52,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 11:10:52,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 11:10:56,303:INFO:Initializing load_model()
2025-01-13 11:10:56,303:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:10:56,974:INFO:Initializing load_model()
2025-01-13 11:10:56,974:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:10:58,765:INFO:Initializing predict_model()
2025-01-13 11:10:58,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F7501F29D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7502CA200>)
2025-01-13 11:10:58,765:INFO:Checking exceptions
2025-01-13 11:10:58,767:INFO:Preloading libraries
2025-01-13 11:10:58,782:INFO:Set up data.
2025-01-13 11:10:58,789:INFO:Set up index.
2025-01-13 11:11:05,619:INFO:Initializing load_model()
2025-01-13 11:11:05,620:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:05,913:INFO:Initializing load_model()
2025-01-13 11:11:05,913:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:06,667:INFO:Initializing load_model()
2025-01-13 11:11:06,667:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:07,184:INFO:Initializing load_model()
2025-01-13 11:11:07,185:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:07,312:INFO:Initializing load_model()
2025-01-13 11:11:07,312:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:08,968:INFO:Initializing load_model()
2025-01-13 11:11:08,980:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:11,316:INFO:Initializing predict_model()
2025-01-13 11:11:11,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F750380810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750140860>)
2025-01-13 11:11:11,316:INFO:Checking exceptions
2025-01-13 11:11:11,316:INFO:Preloading libraries
2025-01-13 11:11:11,319:INFO:Set up data.
2025-01-13 11:11:11,325:INFO:Set up index.
2025-01-13 11:11:13,130:INFO:Initializing load_model()
2025-01-13 11:11:13,131:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:13,519:INFO:Initializing load_model()
2025-01-13 11:11:13,519:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:13,802:INFO:Initializing predict_model()
2025-01-13 11:11:13,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F750346C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750140CC0>)
2025-01-13 11:11:13,803:INFO:Checking exceptions
2025-01-13 11:11:13,803:INFO:Preloading libraries
2025-01-13 11:11:13,803:INFO:Set up data.
2025-01-13 11:11:13,805:INFO:Set up index.
2025-01-13 11:11:14,075:INFO:Initializing load_model()
2025-01-13 11:11:14,076:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:14,287:INFO:Initializing load_model()
2025-01-13 11:11:14,287:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:14,536:INFO:Initializing predict_model()
2025-01-13 11:11:14,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F75037B7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750140EA0>)
2025-01-13 11:11:14,537:INFO:Checking exceptions
2025-01-13 11:11:14,537:INFO:Preloading libraries
2025-01-13 11:11:14,537:INFO:Set up data.
2025-01-13 11:11:14,541:INFO:Set up index.
2025-01-13 11:11:17,746:INFO:Initializing load_model()
2025-01-13 11:11:17,747:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:17,936:INFO:Initializing load_model()
2025-01-13 11:11:17,937:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:18,200:INFO:Initializing predict_model()
2025-01-13 11:11:18,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F75034FAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750141120>)
2025-01-13 11:11:18,200:INFO:Checking exceptions
2025-01-13 11:11:18,201:INFO:Preloading libraries
2025-01-13 11:11:18,201:INFO:Set up data.
2025-01-13 11:11:18,203:INFO:Set up index.
2025-01-13 11:11:18,502:INFO:Initializing load_model()
2025-01-13 11:11:18,504:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:18,696:INFO:Initializing load_model()
2025-01-13 11:11:18,696:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:18,946:INFO:Initializing predict_model()
2025-01-13 11:11:18,946:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F75037BC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750141120>)
2025-01-13 11:11:18,946:INFO:Checking exceptions
2025-01-13 11:11:18,946:INFO:Preloading libraries
2025-01-13 11:11:18,947:INFO:Set up data.
2025-01-13 11:11:18,949:INFO:Set up index.
2025-01-13 11:11:19,941:INFO:Initializing load_model()
2025-01-13 11:11:19,941:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:20,137:INFO:Initializing load_model()
2025-01-13 11:11:20,137:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:20,368:INFO:Initializing predict_model()
2025-01-13 11:11:20,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F74B0B5DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7501414E0>)
2025-01-13 11:11:20,369:INFO:Checking exceptions
2025-01-13 11:11:20,369:INFO:Preloading libraries
2025-01-13 11:11:20,369:INFO:Set up data.
2025-01-13 11:11:20,371:INFO:Set up index.
2025-01-13 11:11:20,847:INFO:Initializing load_model()
2025-01-13 11:11:20,848:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:21,038:INFO:Initializing load_model()
2025-01-13 11:11:21,038:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:21,286:INFO:Initializing predict_model()
2025-01-13 11:11:21,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F750315090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750141940>)
2025-01-13 11:11:21,288:INFO:Checking exceptions
2025-01-13 11:11:21,288:INFO:Preloading libraries
2025-01-13 11:11:21,289:INFO:Set up data.
2025-01-13 11:11:21,291:INFO:Set up index.
2025-01-13 11:11:30,397:INFO:Initializing load_model()
2025-01-13 11:11:30,397:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:30,592:INFO:Initializing load_model()
2025-01-13 11:11:30,592:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:30,839:INFO:Initializing predict_model()
2025-01-13 11:11:30,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F74B0B7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750140D60>)
2025-01-13 11:11:30,839:INFO:Checking exceptions
2025-01-13 11:11:30,839:INFO:Preloading libraries
2025-01-13 11:11:30,839:INFO:Set up data.
2025-01-13 11:11:30,842:INFO:Set up index.
2025-01-13 11:11:33,577:INFO:Initializing load_model()
2025-01-13 11:11:33,577:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:33,758:INFO:Initializing load_model()
2025-01-13 11:11:33,758:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:33,982:INFO:Initializing predict_model()
2025-01-13 11:11:33,986:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F7502DA890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750141F80>)
2025-01-13 11:11:33,986:INFO:Checking exceptions
2025-01-13 11:11:33,986:INFO:Preloading libraries
2025-01-13 11:11:33,987:INFO:Set up data.
2025-01-13 11:11:33,989:INFO:Set up index.
2025-01-13 11:11:35,119:INFO:Initializing load_model()
2025-01-13 11:11:35,119:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:35,312:INFO:Initializing load_model()
2025-01-13 11:11:35,312:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:35,538:INFO:Initializing predict_model()
2025-01-13 11:11:35,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F75030D890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750140CC0>)
2025-01-13 11:11:35,538:INFO:Checking exceptions
2025-01-13 11:11:35,538:INFO:Preloading libraries
2025-01-13 11:11:35,539:INFO:Set up data.
2025-01-13 11:11:35,541:INFO:Set up index.
2025-01-13 11:11:35,809:INFO:Initializing load_model()
2025-01-13 11:11:35,810:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:36,012:INFO:Initializing load_model()
2025-01-13 11:11:36,012:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:36,424:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:111: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:11:36,448:INFO:Initializing predict_model()
2025-01-13 11:11:36,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F74B0B7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033C720>)
2025-01-13 11:11:36,449:INFO:Checking exceptions
2025-01-13 11:11:36,449:INFO:Preloading libraries
2025-01-13 11:11:36,449:INFO:Set up data.
2025-01-13 11:11:36,451:INFO:Set up index.
2025-01-13 11:11:45,912:INFO:Initializing load_model()
2025-01-13 11:11:45,913:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:46,050:INFO:Initializing load_model()
2025-01-13 11:11:46,050:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:46,280:INFO:Initializing predict_model()
2025-01-13 11:11:46,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F75034FF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7501407C0>)
2025-01-13 11:11:46,281:INFO:Checking exceptions
2025-01-13 11:11:46,281:INFO:Preloading libraries
2025-01-13 11:11:46,281:INFO:Set up data.
2025-01-13 11:11:46,283:INFO:Set up index.
2025-01-13 11:11:49,294:INFO:Initializing load_model()
2025-01-13 11:11:49,294:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:49,500:INFO:Initializing load_model()
2025-01-13 11:11:49,501:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:49,722:INFO:Initializing predict_model()
2025-01-13 11:11:49,722:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BED6510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7311142C0>)
2025-01-13 11:11:49,723:INFO:Checking exceptions
2025-01-13 11:11:49,723:INFO:Preloading libraries
2025-01-13 11:11:49,724:INFO:Set up data.
2025-01-13 11:11:49,728:INFO:Set up index.
2025-01-13 11:11:50,965:INFO:Initializing load_model()
2025-01-13 11:11:50,965:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:51,117:INFO:Initializing load_model()
2025-01-13 11:11:51,117:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:51,322:INFO:Initializing predict_model()
2025-01-13 11:11:51,322:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BEEB050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F750141260>)
2025-01-13 11:11:51,323:INFO:Checking exceptions
2025-01-13 11:11:51,323:INFO:Preloading libraries
2025-01-13 11:11:51,323:INFO:Set up data.
2025-01-13 11:11:51,325:INFO:Set up index.
2025-01-13 11:11:52,141:INFO:Initializing load_model()
2025-01-13 11:11:52,141:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:52,285:INFO:Initializing load_model()
2025-01-13 11:11:52,285:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:11:52,483:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:111: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:11:52,509:INFO:Initializing predict_model()
2025-01-13 11:11:52,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BED4910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033FF60>)
2025-01-13 11:11:52,509:INFO:Checking exceptions
2025-01-13 11:11:52,510:INFO:Preloading libraries
2025-01-13 11:11:52,510:INFO:Set up data.
2025-01-13 11:11:52,512:INFO:Set up index.
2025-01-13 11:12:20,092:INFO:Initializing load_model()
2025-01-13 11:12:20,092:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:20,271:INFO:Initializing load_model()
2025-01-13 11:12:20,271:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:20,486:INFO:Initializing predict_model()
2025-01-13 11:12:20,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BEEB650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033F2E0>)
2025-01-13 11:12:20,488:INFO:Checking exceptions
2025-01-13 11:12:20,488:INFO:Preloading libraries
2025-01-13 11:12:20,489:INFO:Set up data.
2025-01-13 11:12:20,491:INFO:Set up index.
2025-01-13 11:12:24,358:INFO:Initializing load_model()
2025-01-13 11:12:24,358:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:24,551:INFO:Initializing load_model()
2025-01-13 11:12:24,551:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:24,770:INFO:Initializing predict_model()
2025-01-13 11:12:24,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BEF5550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033D620>)
2025-01-13 11:12:24,774:INFO:Checking exceptions
2025-01-13 11:12:24,774:INFO:Preloading libraries
2025-01-13 11:12:24,774:INFO:Set up data.
2025-01-13 11:12:24,776:INFO:Set up index.
2025-01-13 11:12:26,938:INFO:Initializing load_model()
2025-01-13 11:12:26,938:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:27,114:INFO:Initializing load_model()
2025-01-13 11:12:27,114:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:27,596:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:12:27,614:INFO:Initializing predict_model()
2025-01-13 11:12:27,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F7410F2D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF69440>)
2025-01-13 11:12:27,614:INFO:Checking exceptions
2025-01-13 11:12:27,614:INFO:Preloading libraries
2025-01-13 11:12:27,615:INFO:Set up data.
2025-01-13 11:12:27,616:INFO:Set up index.
2025-01-13 11:12:36,409:INFO:Initializing load_model()
2025-01-13 11:12:36,409:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:36,555:INFO:Initializing load_model()
2025-01-13 11:12:36,555:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:36,771:INFO:Initializing predict_model()
2025-01-13 11:12:36,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F74B0B7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF68F40>)
2025-01-13 11:12:36,771:INFO:Checking exceptions
2025-01-13 11:12:36,771:INFO:Preloading libraries
2025-01-13 11:12:36,772:INFO:Set up data.
2025-01-13 11:12:36,773:INFO:Set up index.
2025-01-13 11:12:38,741:INFO:Initializing load_model()
2025-01-13 11:12:38,741:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:38,886:INFO:Initializing load_model()
2025-01-13 11:12:38,886:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:12:39,108:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:12:39,126:INFO:Initializing predict_model()
2025-01-13 11:12:39,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76C036E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033FCE0>)
2025-01-13 11:12:39,126:INFO:Checking exceptions
2025-01-13 11:12:39,126:INFO:Preloading libraries
2025-01-13 11:12:39,127:INFO:Set up data.
2025-01-13 11:12:39,129:INFO:Set up index.
2025-01-13 11:13:07,167:INFO:Initializing load_model()
2025-01-13 11:13:07,167:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:07,351:INFO:Initializing load_model()
2025-01-13 11:13:07,351:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:07,579:INFO:Initializing predict_model()
2025-01-13 11:13:07,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76C018B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F75033F560>)
2025-01-13 11:13:07,580:INFO:Checking exceptions
2025-01-13 11:13:07,580:INFO:Preloading libraries
2025-01-13 11:13:07,580:INFO:Set up data.
2025-01-13 11:13:07,582:INFO:Set up index.
2025-01-13 11:13:11,827:INFO:Initializing load_model()
2025-01-13 11:13:11,827:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:12,037:INFO:Initializing load_model()
2025-01-13 11:13:12,037:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:12,268:INFO:Initializing predict_model()
2025-01-13 11:13:12,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BFB8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7502C9C60>)
2025-01-13 11:13:12,269:INFO:Checking exceptions
2025-01-13 11:13:12,269:INFO:Preloading libraries
2025-01-13 11:13:12,270:INFO:Set up data.
2025-01-13 11:13:12,272:INFO:Set up index.
2025-01-13 11:13:25,342:INFO:Initializing load_model()
2025-01-13 11:13:25,343:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:25,484:INFO:Initializing load_model()
2025-01-13 11:13:25,484:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:25,702:INFO:Initializing predict_model()
2025-01-13 11:13:25,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76C002550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7502C9C60>)
2025-01-13 11:13:25,702:INFO:Checking exceptions
2025-01-13 11:13:25,703:INFO:Preloading libraries
2025-01-13 11:13:25,703:INFO:Set up data.
2025-01-13 11:13:25,705:INFO:Set up index.
2025-01-13 11:13:26,905:INFO:Initializing load_model()
2025-01-13 11:13:26,905:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:27,060:INFO:Initializing load_model()
2025-01-13 11:13:27,060:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:27,287:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:13:27,306:INFO:Initializing predict_model()
2025-01-13 11:13:27,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BFFD690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF69C60>)
2025-01-13 11:13:27,306:INFO:Checking exceptions
2025-01-13 11:13:27,307:INFO:Preloading libraries
2025-01-13 11:13:27,307:INFO:Set up data.
2025-01-13 11:13:27,310:INFO:Set up index.
2025-01-13 11:13:34,686:INFO:Initializing load_model()
2025-01-13 11:13:34,686:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:34,822:INFO:Initializing load_model()
2025-01-13 11:13:34,823:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:35,029:INFO:Initializing predict_model()
2025-01-13 11:13:35,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BFFEB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF6A200>)
2025-01-13 11:13:35,030:INFO:Checking exceptions
2025-01-13 11:13:35,030:INFO:Preloading libraries
2025-01-13 11:13:35,030:INFO:Set up data.
2025-01-13 11:13:35,033:INFO:Set up index.
2025-01-13 11:13:38,642:INFO:Initializing load_model()
2025-01-13 11:13:38,643:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:38,785:INFO:Initializing load_model()
2025-01-13 11:13:38,785:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:13:39,012:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 11:13:39,032:INFO:Initializing predict_model()
2025-01-13 11:13:39,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76BFBF390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF69EE0>)
2025-01-13 11:13:39,033:INFO:Checking exceptions
2025-01-13 11:13:39,033:INFO:Preloading libraries
2025-01-13 11:13:39,034:INFO:Set up data.
2025-01-13 11:13:39,037:INFO:Set up index.
2025-01-13 11:14:08,648:INFO:Initializing load_model()
2025-01-13 11:14:08,648:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:14:08,825:INFO:Initializing load_model()
2025-01-13 11:14:08,825:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:14:09,040:INFO:Initializing predict_model()
2025-01-13 11:14:09,041:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76C014090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F76BF69120>)
2025-01-13 11:14:09,041:INFO:Checking exceptions
2025-01-13 11:14:09,041:INFO:Preloading libraries
2025-01-13 11:14:09,041:INFO:Set up data.
2025-01-13 11:14:09,045:INFO:Set up index.
2025-01-13 11:14:10,460:INFO:Initializing load_model()
2025-01-13 11:14:10,461:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:14:10,625:INFO:Initializing load_model()
2025-01-13 11:14:10,625:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 11:14:10,834:INFO:Initializing predict_model()
2025-01-13 11:14:10,834:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F76C03E3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002F7502CA2A0>)
2025-01-13 11:14:10,834:INFO:Checking exceptions
2025-01-13 11:14:10,834:INFO:Preloading libraries
2025-01-13 11:14:10,834:INFO:Set up data.
2025-01-13 11:14:10,837:INFO:Set up index.
2025-01-13 14:51:24,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 14:51:24,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 14:51:24,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 14:51:24,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 14:51:55,093:INFO:PyCaret RegressionExperiment
2025-01-13 14:51:55,093:INFO:Logging name: reg-default-name
2025-01-13 14:51:55,093:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-13 14:51:55,093:INFO:version 3.3.2
2025-01-13 14:51:55,093:INFO:Initializing setup()
2025-01-13 14:51:55,094:INFO:self.USI: f8cd
2025-01-13 14:51:55,094:INFO:self._variable_keys: {'X_test', 'transform_target_param', 'log_plots_param', 'target_param', '_available_plots', 'exp_id', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'html_param', 'y_train', 'y', 'USI', 'pipeline', 'n_jobs_param', 'fold_groups_param', 'fold_generator', '_ml_usecase', 'logging_param', 'X', 'exp_name_log', 'fold_shuffle_param', 'data', 'X_train', 'idx', 'y_test', 'seed'}
2025-01-13 14:51:55,094:INFO:Checking environment
2025-01-13 14:51:55,094:INFO:python_version: 3.11.11
2025-01-13 14:51:55,094:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-13 14:51:55,094:INFO:machine: AMD64
2025-01-13 14:51:55,094:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-13 14:51:55,095:INFO:Memory: svmem(total=6439919616, available=849158144, percent=86.8, used=5590761472, free=849158144)
2025-01-13 14:51:55,095:INFO:Physical Core: 4
2025-01-13 14:51:55,095:INFO:Logical Core: 4
2025-01-13 14:51:55,095:INFO:Checking libraries
2025-01-13 14:51:55,095:INFO:System:
2025-01-13 14:51:55,095:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-13 14:51:55,095:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-13 14:51:55,095:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-13 14:51:55,096:INFO:PyCaret required dependencies:
2025-01-13 14:51:55,248:INFO:                 pip: 24.2
2025-01-13 14:51:55,250:INFO:          setuptools: 75.1.0
2025-01-13 14:51:55,250:INFO:             pycaret: 3.3.2
2025-01-13 14:51:55,250:INFO:             IPython: 8.30.0
2025-01-13 14:51:55,250:INFO:          ipywidgets: 8.1.5
2025-01-13 14:51:55,250:INFO:                tqdm: 4.67.1
2025-01-13 14:51:55,250:INFO:               numpy: 1.26.4
2025-01-13 14:51:55,250:INFO:              pandas: 2.1.4
2025-01-13 14:51:55,250:INFO:              jinja2: 3.1.4
2025-01-13 14:51:55,250:INFO:               scipy: 1.11.4
2025-01-13 14:51:55,250:INFO:              joblib: 1.3.2
2025-01-13 14:51:55,251:INFO:             sklearn: 1.4.2
2025-01-13 14:51:55,251:INFO:                pyod: 2.0.3
2025-01-13 14:51:55,251:INFO:            imblearn: 0.13.0
2025-01-13 14:51:55,251:INFO:   category_encoders: 2.7.0
2025-01-13 14:51:55,251:INFO:            lightgbm: 4.5.0
2025-01-13 14:51:55,251:INFO:               numba: 0.60.0
2025-01-13 14:51:55,251:INFO:            requests: 2.32.3
2025-01-13 14:51:55,251:INFO:          matplotlib: 3.7.5
2025-01-13 14:51:55,251:INFO:          scikitplot: 0.3.7
2025-01-13 14:51:55,251:INFO:         yellowbrick: 1.5
2025-01-13 14:51:55,251:INFO:              plotly: 5.24.1
2025-01-13 14:51:55,252:INFO:    plotly-resampler: Not installed
2025-01-13 14:51:55,252:INFO:             kaleido: 0.2.1
2025-01-13 14:51:55,252:INFO:           schemdraw: 0.15
2025-01-13 14:51:55,252:INFO:         statsmodels: 0.14.4
2025-01-13 14:51:55,252:INFO:              sktime: 0.26.0
2025-01-13 14:51:55,252:INFO:               tbats: 1.1.3
2025-01-13 14:51:55,252:INFO:            pmdarima: 2.0.4
2025-01-13 14:51:55,252:INFO:              psutil: 5.9.0
2025-01-13 14:51:55,252:INFO:          markupsafe: 2.1.3
2025-01-13 14:51:55,252:INFO:             pickle5: Not installed
2025-01-13 14:51:55,253:INFO:         cloudpickle: 3.1.0
2025-01-13 14:51:55,253:INFO:         deprecation: 2.1.0
2025-01-13 14:51:55,253:INFO:              xxhash: 3.5.0
2025-01-13 14:51:55,253:INFO:           wurlitzer: Not installed
2025-01-13 14:51:55,253:INFO:PyCaret optional dependencies:
2025-01-13 14:51:55,278:INFO:                shap: Not installed
2025-01-13 14:51:55,278:INFO:           interpret: Not installed
2025-01-13 14:51:55,278:INFO:                umap: Not installed
2025-01-13 14:51:55,278:INFO:     ydata_profiling: Not installed
2025-01-13 14:51:55,279:INFO:  explainerdashboard: Not installed
2025-01-13 14:51:55,279:INFO:             autoviz: Not installed
2025-01-13 14:51:55,279:INFO:           fairlearn: Not installed
2025-01-13 14:51:55,279:INFO:          deepchecks: Not installed
2025-01-13 14:51:55,279:INFO:             xgboost: Not installed
2025-01-13 14:51:55,279:INFO:            catboost: Not installed
2025-01-13 14:51:55,279:INFO:              kmodes: Not installed
2025-01-13 14:51:55,279:INFO:             mlxtend: Not installed
2025-01-13 14:51:55,279:INFO:       statsforecast: Not installed
2025-01-13 14:51:55,279:INFO:        tune_sklearn: Not installed
2025-01-13 14:51:55,279:INFO:                 ray: Not installed
2025-01-13 14:51:55,279:INFO:            hyperopt: Not installed
2025-01-13 14:51:55,280:INFO:              optuna: Not installed
2025-01-13 14:51:55,280:INFO:               skopt: Not installed
2025-01-13 14:51:55,280:INFO:              mlflow: Not installed
2025-01-13 14:51:55,280:INFO:              gradio: Not installed
2025-01-13 14:51:55,280:INFO:             fastapi: Not installed
2025-01-13 14:51:55,280:INFO:             uvicorn: Not installed
2025-01-13 14:51:55,280:INFO:              m2cgen: Not installed
2025-01-13 14:51:55,280:INFO:           evidently: Not installed
2025-01-13 14:51:55,280:INFO:               fugue: Not installed
2025-01-13 14:51:55,280:INFO:           streamlit: 1.40.1
2025-01-13 14:51:55,280:INFO:             prophet: Not installed
2025-01-13 14:51:55,281:INFO:None
2025-01-13 14:51:55,281:INFO:Set up data.
2025-01-13 14:51:55,291:INFO:Set up folding strategy.
2025-01-13 14:51:55,291:INFO:Set up train/test split.
2025-01-13 14:51:55,301:INFO:Set up index.
2025-01-13 14:51:55,302:INFO:Assigning column types.
2025-01-13 14:51:55,309:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-13 14:51:55,309:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,321:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,331:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:55,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:55,561:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,581:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,706:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:55,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:55,807:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-13 14:51:55,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,828:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:55,956:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,069:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,400:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-13 14:51:56,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,549:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,801:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:56,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:56,904:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-13 14:51:57,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,410:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-13 14:51:57,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:51:57,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:57,912:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-13 14:51:58,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:58,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:58,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:58,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:58,436:INFO:Preparing preprocessing pipeline...
2025-01-13 14:51:58,436:INFO:Set up simple imputation.
2025-01-13 14:51:58,437:INFO:Set up column name cleaning.
2025-01-13 14:51:58,728:INFO:Finished creating preprocessing pipeline.
2025-01-13 14:51:58,739:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-13 14:51:58,739:INFO:Creating final display dataframe.
2025-01-13 14:51:58,966:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            diesel
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f8cd
2025-01-13 14:51:59,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:59,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:59,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:59,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:51:59,508:INFO:setup() successfully completed in 4.43s...............
2025-01-13 14:52:09,727:INFO:Initializing compare_models()
2025-01-13 14:52:09,727:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-13 14:52:09,728:INFO:Checking exceptions
2025-01-13 14:52:09,731:INFO:Preparing display monitor
2025-01-13 14:52:09,761:INFO:Initializing Linear Regression
2025-01-13 14:52:09,761:INFO:Total runtime is 0.0 minutes
2025-01-13 14:52:09,766:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:09,767:INFO:Initializing create_model()
2025-01-13 14:52:09,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:09,768:INFO:Checking exceptions
2025-01-13 14:52:09,768:INFO:Importing libraries
2025-01-13 14:52:09,768:INFO:Copying training dataset
2025-01-13 14:52:09,776:INFO:Defining folds
2025-01-13 14:52:09,777:INFO:Declaring metric variables
2025-01-13 14:52:09,781:INFO:Importing untrained model
2025-01-13 14:52:09,787:INFO:Linear Regression Imported successfully
2025-01-13 14:52:09,797:INFO:Starting cross validation
2025-01-13 14:52:09,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:14,677:INFO:Calculating mean and std
2025-01-13 14:52:14,679:INFO:Creating metrics dataframe
2025-01-13 14:52:14,681:INFO:Uploading results into container
2025-01-13 14:52:14,682:INFO:Uploading model into container now
2025-01-13 14:52:14,682:INFO:_master_model_container: 1
2025-01-13 14:52:14,683:INFO:_display_container: 2
2025-01-13 14:52:14,683:INFO:LinearRegression(n_jobs=-1)
2025-01-13 14:52:14,683:INFO:create_model() successfully completed......................................
2025-01-13 14:52:14,786:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:14,786:INFO:Creating metrics dataframe
2025-01-13 14:52:14,800:INFO:Initializing Lasso Regression
2025-01-13 14:52:14,801:INFO:Total runtime is 0.08399938344955445 minutes
2025-01-13 14:52:14,806:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:14,807:INFO:Initializing create_model()
2025-01-13 14:52:14,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:14,807:INFO:Checking exceptions
2025-01-13 14:52:14,808:INFO:Importing libraries
2025-01-13 14:52:14,808:INFO:Copying training dataset
2025-01-13 14:52:14,815:INFO:Defining folds
2025-01-13 14:52:14,816:INFO:Declaring metric variables
2025-01-13 14:52:14,820:INFO:Importing untrained model
2025-01-13 14:52:14,826:INFO:Lasso Regression Imported successfully
2025-01-13 14:52:14,839:INFO:Starting cross validation
2025-01-13 14:52:14,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:14,965:INFO:Calculating mean and std
2025-01-13 14:52:14,967:INFO:Creating metrics dataframe
2025-01-13 14:52:14,969:INFO:Uploading results into container
2025-01-13 14:52:14,970:INFO:Uploading model into container now
2025-01-13 14:52:14,970:INFO:_master_model_container: 2
2025-01-13 14:52:14,970:INFO:_display_container: 2
2025-01-13 14:52:14,970:INFO:Lasso(random_state=123)
2025-01-13 14:52:14,971:INFO:create_model() successfully completed......................................
2025-01-13 14:52:15,067:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:15,068:INFO:Creating metrics dataframe
2025-01-13 14:52:15,079:INFO:Initializing Ridge Regression
2025-01-13 14:52:15,079:INFO:Total runtime is 0.08862990538279215 minutes
2025-01-13 14:52:15,084:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:15,084:INFO:Initializing create_model()
2025-01-13 14:52:15,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:15,084:INFO:Checking exceptions
2025-01-13 14:52:15,085:INFO:Importing libraries
2025-01-13 14:52:15,085:INFO:Copying training dataset
2025-01-13 14:52:15,092:INFO:Defining folds
2025-01-13 14:52:15,092:INFO:Declaring metric variables
2025-01-13 14:52:15,096:INFO:Importing untrained model
2025-01-13 14:52:15,103:INFO:Ridge Regression Imported successfully
2025-01-13 14:52:15,111:INFO:Starting cross validation
2025-01-13 14:52:15,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:15,248:INFO:Calculating mean and std
2025-01-13 14:52:15,249:INFO:Creating metrics dataframe
2025-01-13 14:52:15,252:INFO:Uploading results into container
2025-01-13 14:52:15,252:INFO:Uploading model into container now
2025-01-13 14:52:15,253:INFO:_master_model_container: 3
2025-01-13 14:52:15,253:INFO:_display_container: 2
2025-01-13 14:52:15,253:INFO:Ridge(random_state=123)
2025-01-13 14:52:15,253:INFO:create_model() successfully completed......................................
2025-01-13 14:52:15,351:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:15,351:INFO:Creating metrics dataframe
2025-01-13 14:52:15,362:INFO:Initializing Elastic Net
2025-01-13 14:52:15,362:INFO:Total runtime is 0.09335208336512248 minutes
2025-01-13 14:52:15,367:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:15,367:INFO:Initializing create_model()
2025-01-13 14:52:15,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:15,367:INFO:Checking exceptions
2025-01-13 14:52:15,368:INFO:Importing libraries
2025-01-13 14:52:15,368:INFO:Copying training dataset
2025-01-13 14:52:15,375:INFO:Defining folds
2025-01-13 14:52:15,375:INFO:Declaring metric variables
2025-01-13 14:52:15,380:INFO:Importing untrained model
2025-01-13 14:52:15,387:INFO:Elastic Net Imported successfully
2025-01-13 14:52:15,399:INFO:Starting cross validation
2025-01-13 14:52:15,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:15,527:INFO:Calculating mean and std
2025-01-13 14:52:15,529:INFO:Creating metrics dataframe
2025-01-13 14:52:15,533:INFO:Uploading results into container
2025-01-13 14:52:15,534:INFO:Uploading model into container now
2025-01-13 14:52:15,534:INFO:_master_model_container: 4
2025-01-13 14:52:15,534:INFO:_display_container: 2
2025-01-13 14:52:15,535:INFO:ElasticNet(random_state=123)
2025-01-13 14:52:15,535:INFO:create_model() successfully completed......................................
2025-01-13 14:52:15,630:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:15,631:INFO:Creating metrics dataframe
2025-01-13 14:52:15,641:INFO:Initializing Least Angle Regression
2025-01-13 14:52:15,642:INFO:Total runtime is 0.09800816377003987 minutes
2025-01-13 14:52:15,646:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:15,647:INFO:Initializing create_model()
2025-01-13 14:52:15,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:15,647:INFO:Checking exceptions
2025-01-13 14:52:15,647:INFO:Importing libraries
2025-01-13 14:52:15,647:INFO:Copying training dataset
2025-01-13 14:52:15,655:INFO:Defining folds
2025-01-13 14:52:15,655:INFO:Declaring metric variables
2025-01-13 14:52:15,659:INFO:Importing untrained model
2025-01-13 14:52:15,667:INFO:Least Angle Regression Imported successfully
2025-01-13 14:52:15,677:INFO:Starting cross validation
2025-01-13 14:52:15,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:15,802:INFO:Calculating mean and std
2025-01-13 14:52:15,804:INFO:Creating metrics dataframe
2025-01-13 14:52:15,806:INFO:Uploading results into container
2025-01-13 14:52:15,806:INFO:Uploading model into container now
2025-01-13 14:52:15,807:INFO:_master_model_container: 5
2025-01-13 14:52:15,807:INFO:_display_container: 2
2025-01-13 14:52:15,808:INFO:Lars(random_state=123)
2025-01-13 14:52:15,808:INFO:create_model() successfully completed......................................
2025-01-13 14:52:15,906:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:15,906:INFO:Creating metrics dataframe
2025-01-13 14:52:15,918:INFO:Initializing Lasso Least Angle Regression
2025-01-13 14:52:15,918:INFO:Total runtime is 0.10260573228200276 minutes
2025-01-13 14:52:15,922:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:15,922:INFO:Initializing create_model()
2025-01-13 14:52:15,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:15,922:INFO:Checking exceptions
2025-01-13 14:52:15,923:INFO:Importing libraries
2025-01-13 14:52:15,923:INFO:Copying training dataset
2025-01-13 14:52:15,930:INFO:Defining folds
2025-01-13 14:52:15,931:INFO:Declaring metric variables
2025-01-13 14:52:15,936:INFO:Importing untrained model
2025-01-13 14:52:15,941:INFO:Lasso Least Angle Regression Imported successfully
2025-01-13 14:52:15,953:INFO:Starting cross validation
2025-01-13 14:52:15,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:16,076:INFO:Calculating mean and std
2025-01-13 14:52:16,077:INFO:Creating metrics dataframe
2025-01-13 14:52:16,081:INFO:Uploading results into container
2025-01-13 14:52:16,082:INFO:Uploading model into container now
2025-01-13 14:52:16,083:INFO:_master_model_container: 6
2025-01-13 14:52:16,083:INFO:_display_container: 2
2025-01-13 14:52:16,083:INFO:LassoLars(random_state=123)
2025-01-13 14:52:16,084:INFO:create_model() successfully completed......................................
2025-01-13 14:52:16,181:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:16,182:INFO:Creating metrics dataframe
2025-01-13 14:52:16,192:INFO:Initializing Orthogonal Matching Pursuit
2025-01-13 14:52:16,193:INFO:Total runtime is 0.10719334681828815 minutes
2025-01-13 14:52:16,198:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:16,198:INFO:Initializing create_model()
2025-01-13 14:52:16,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:16,199:INFO:Checking exceptions
2025-01-13 14:52:16,199:INFO:Importing libraries
2025-01-13 14:52:16,199:INFO:Copying training dataset
2025-01-13 14:52:16,206:INFO:Defining folds
2025-01-13 14:52:16,206:INFO:Declaring metric variables
2025-01-13 14:52:16,211:INFO:Importing untrained model
2025-01-13 14:52:16,219:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-13 14:52:16,228:INFO:Starting cross validation
2025-01-13 14:52:16,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:16,354:INFO:Calculating mean and std
2025-01-13 14:52:16,356:INFO:Creating metrics dataframe
2025-01-13 14:52:16,358:INFO:Uploading results into container
2025-01-13 14:52:16,358:INFO:Uploading model into container now
2025-01-13 14:52:16,359:INFO:_master_model_container: 7
2025-01-13 14:52:16,359:INFO:_display_container: 2
2025-01-13 14:52:16,359:INFO:OrthogonalMatchingPursuit()
2025-01-13 14:52:16,359:INFO:create_model() successfully completed......................................
2025-01-13 14:52:16,456:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:16,456:INFO:Creating metrics dataframe
2025-01-13 14:52:16,471:INFO:Initializing Bayesian Ridge
2025-01-13 14:52:16,471:INFO:Total runtime is 0.11183173656463621 minutes
2025-01-13 14:52:16,475:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:16,475:INFO:Initializing create_model()
2025-01-13 14:52:16,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:16,476:INFO:Checking exceptions
2025-01-13 14:52:16,476:INFO:Importing libraries
2025-01-13 14:52:16,476:INFO:Copying training dataset
2025-01-13 14:52:16,484:INFO:Defining folds
2025-01-13 14:52:16,484:INFO:Declaring metric variables
2025-01-13 14:52:16,489:INFO:Importing untrained model
2025-01-13 14:52:16,495:INFO:Bayesian Ridge Imported successfully
2025-01-13 14:52:16,547:INFO:Starting cross validation
2025-01-13 14:52:16,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:16,702:INFO:Calculating mean and std
2025-01-13 14:52:16,703:INFO:Creating metrics dataframe
2025-01-13 14:52:16,706:INFO:Uploading results into container
2025-01-13 14:52:16,706:INFO:Uploading model into container now
2025-01-13 14:52:16,707:INFO:_master_model_container: 8
2025-01-13 14:52:16,707:INFO:_display_container: 2
2025-01-13 14:52:16,707:INFO:BayesianRidge()
2025-01-13 14:52:16,707:INFO:create_model() successfully completed......................................
2025-01-13 14:52:16,803:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:16,804:INFO:Creating metrics dataframe
2025-01-13 14:52:16,817:INFO:Initializing Passive Aggressive Regressor
2025-01-13 14:52:16,817:INFO:Total runtime is 0.11760400931040445 minutes
2025-01-13 14:52:16,821:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:16,821:INFO:Initializing create_model()
2025-01-13 14:52:16,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:16,822:INFO:Checking exceptions
2025-01-13 14:52:16,822:INFO:Importing libraries
2025-01-13 14:52:16,822:INFO:Copying training dataset
2025-01-13 14:52:16,830:INFO:Defining folds
2025-01-13 14:52:16,830:INFO:Declaring metric variables
2025-01-13 14:52:16,837:INFO:Importing untrained model
2025-01-13 14:52:16,841:INFO:Passive Aggressive Regressor Imported successfully
2025-01-13 14:52:16,852:INFO:Starting cross validation
2025-01-13 14:52:16,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:17,047:INFO:Calculating mean and std
2025-01-13 14:52:17,049:INFO:Creating metrics dataframe
2025-01-13 14:52:17,053:INFO:Uploading results into container
2025-01-13 14:52:17,054:INFO:Uploading model into container now
2025-01-13 14:52:17,054:INFO:_master_model_container: 9
2025-01-13 14:52:17,054:INFO:_display_container: 2
2025-01-13 14:52:17,054:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-13 14:52:17,055:INFO:create_model() successfully completed......................................
2025-01-13 14:52:17,151:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:17,151:INFO:Creating metrics dataframe
2025-01-13 14:52:17,164:INFO:Initializing Huber Regressor
2025-01-13 14:52:17,164:INFO:Total runtime is 0.12338334719340005 minutes
2025-01-13 14:52:17,168:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:17,169:INFO:Initializing create_model()
2025-01-13 14:52:17,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:17,169:INFO:Checking exceptions
2025-01-13 14:52:17,169:INFO:Importing libraries
2025-01-13 14:52:17,169:INFO:Copying training dataset
2025-01-13 14:52:17,176:INFO:Defining folds
2025-01-13 14:52:17,176:INFO:Declaring metric variables
2025-01-13 14:52:17,183:INFO:Importing untrained model
2025-01-13 14:52:17,188:INFO:Huber Regressor Imported successfully
2025-01-13 14:52:17,199:INFO:Starting cross validation
2025-01-13 14:52:17,200:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:17,448:INFO:Calculating mean and std
2025-01-13 14:52:17,449:INFO:Creating metrics dataframe
2025-01-13 14:52:17,452:INFO:Uploading results into container
2025-01-13 14:52:17,452:INFO:Uploading model into container now
2025-01-13 14:52:17,453:INFO:_master_model_container: 10
2025-01-13 14:52:17,453:INFO:_display_container: 2
2025-01-13 14:52:17,453:INFO:HuberRegressor()
2025-01-13 14:52:17,453:INFO:create_model() successfully completed......................................
2025-01-13 14:52:17,549:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:17,550:INFO:Creating metrics dataframe
2025-01-13 14:52:17,565:INFO:Initializing K Neighbors Regressor
2025-01-13 14:52:17,565:INFO:Total runtime is 0.13005795876185097 minutes
2025-01-13 14:52:17,570:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:17,571:INFO:Initializing create_model()
2025-01-13 14:52:17,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:17,571:INFO:Checking exceptions
2025-01-13 14:52:17,571:INFO:Importing libraries
2025-01-13 14:52:17,571:INFO:Copying training dataset
2025-01-13 14:52:17,578:INFO:Defining folds
2025-01-13 14:52:17,578:INFO:Declaring metric variables
2025-01-13 14:52:17,584:INFO:Importing untrained model
2025-01-13 14:52:17,590:INFO:K Neighbors Regressor Imported successfully
2025-01-13 14:52:17,602:INFO:Starting cross validation
2025-01-13 14:52:17,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:17,787:INFO:Calculating mean and std
2025-01-13 14:52:17,788:INFO:Creating metrics dataframe
2025-01-13 14:52:17,791:INFO:Uploading results into container
2025-01-13 14:52:17,793:INFO:Uploading model into container now
2025-01-13 14:52:17,794:INFO:_master_model_container: 11
2025-01-13 14:52:17,794:INFO:_display_container: 2
2025-01-13 14:52:17,794:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-13 14:52:17,794:INFO:create_model() successfully completed......................................
2025-01-13 14:52:17,891:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:17,891:INFO:Creating metrics dataframe
2025-01-13 14:52:17,905:INFO:Initializing Decision Tree Regressor
2025-01-13 14:52:17,905:INFO:Total runtime is 0.13572419881820677 minutes
2025-01-13 14:52:17,908:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:17,909:INFO:Initializing create_model()
2025-01-13 14:52:17,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:17,909:INFO:Checking exceptions
2025-01-13 14:52:17,909:INFO:Importing libraries
2025-01-13 14:52:17,909:INFO:Copying training dataset
2025-01-13 14:52:17,917:INFO:Defining folds
2025-01-13 14:52:17,917:INFO:Declaring metric variables
2025-01-13 14:52:17,922:INFO:Importing untrained model
2025-01-13 14:52:17,927:INFO:Decision Tree Regressor Imported successfully
2025-01-13 14:52:17,939:INFO:Starting cross validation
2025-01-13 14:52:17,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:18,109:INFO:Calculating mean and std
2025-01-13 14:52:18,110:INFO:Creating metrics dataframe
2025-01-13 14:52:18,113:INFO:Uploading results into container
2025-01-13 14:52:18,113:INFO:Uploading model into container now
2025-01-13 14:52:18,114:INFO:_master_model_container: 12
2025-01-13 14:52:18,115:INFO:_display_container: 2
2025-01-13 14:52:18,118:INFO:DecisionTreeRegressor(random_state=123)
2025-01-13 14:52:18,118:INFO:create_model() successfully completed......................................
2025-01-13 14:52:18,213:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:18,214:INFO:Creating metrics dataframe
2025-01-13 14:52:18,227:INFO:Initializing Random Forest Regressor
2025-01-13 14:52:18,227:INFO:Total runtime is 0.14109144210815427 minutes
2025-01-13 14:52:18,232:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:18,232:INFO:Initializing create_model()
2025-01-13 14:52:18,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:18,233:INFO:Checking exceptions
2025-01-13 14:52:18,233:INFO:Importing libraries
2025-01-13 14:52:18,233:INFO:Copying training dataset
2025-01-13 14:52:18,240:INFO:Defining folds
2025-01-13 14:52:18,240:INFO:Declaring metric variables
2025-01-13 14:52:18,245:INFO:Importing untrained model
2025-01-13 14:52:18,253:INFO:Random Forest Regressor Imported successfully
2025-01-13 14:52:18,262:INFO:Starting cross validation
2025-01-13 14:52:18,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:22,313:INFO:Calculating mean and std
2025-01-13 14:52:22,314:INFO:Creating metrics dataframe
2025-01-13 14:52:22,319:INFO:Uploading results into container
2025-01-13 14:52:22,319:INFO:Uploading model into container now
2025-01-13 14:52:22,320:INFO:_master_model_container: 13
2025-01-13 14:52:22,320:INFO:_display_container: 2
2025-01-13 14:52:22,321:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:22,321:INFO:create_model() successfully completed......................................
2025-01-13 14:52:22,421:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:22,421:INFO:Creating metrics dataframe
2025-01-13 14:52:22,435:INFO:Initializing Extra Trees Regressor
2025-01-13 14:52:22,435:INFO:Total runtime is 0.21123657623926795 minutes
2025-01-13 14:52:22,440:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:22,441:INFO:Initializing create_model()
2025-01-13 14:52:22,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:22,441:INFO:Checking exceptions
2025-01-13 14:52:22,441:INFO:Importing libraries
2025-01-13 14:52:22,441:INFO:Copying training dataset
2025-01-13 14:52:22,449:INFO:Defining folds
2025-01-13 14:52:22,449:INFO:Declaring metric variables
2025-01-13 14:52:22,454:INFO:Importing untrained model
2025-01-13 14:52:22,461:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:52:22,472:INFO:Starting cross validation
2025-01-13 14:52:22,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:24,983:INFO:Calculating mean and std
2025-01-13 14:52:24,985:INFO:Creating metrics dataframe
2025-01-13 14:52:24,989:INFO:Uploading results into container
2025-01-13 14:52:24,989:INFO:Uploading model into container now
2025-01-13 14:52:24,990:INFO:_master_model_container: 14
2025-01-13 14:52:24,990:INFO:_display_container: 2
2025-01-13 14:52:24,991:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:24,991:INFO:create_model() successfully completed......................................
2025-01-13 14:52:25,096:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:25,096:INFO:Creating metrics dataframe
2025-01-13 14:52:25,110:INFO:Initializing AdaBoost Regressor
2025-01-13 14:52:25,110:INFO:Total runtime is 0.25581697622934974 minutes
2025-01-13 14:52:25,114:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:25,115:INFO:Initializing create_model()
2025-01-13 14:52:25,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:25,115:INFO:Checking exceptions
2025-01-13 14:52:25,116:INFO:Importing libraries
2025-01-13 14:52:25,116:INFO:Copying training dataset
2025-01-13 14:52:25,123:INFO:Defining folds
2025-01-13 14:52:25,123:INFO:Declaring metric variables
2025-01-13 14:52:25,130:INFO:Importing untrained model
2025-01-13 14:52:25,134:INFO:AdaBoost Regressor Imported successfully
2025-01-13 14:52:25,146:INFO:Starting cross validation
2025-01-13 14:52:25,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:26,072:INFO:Calculating mean and std
2025-01-13 14:52:26,073:INFO:Creating metrics dataframe
2025-01-13 14:52:26,076:INFO:Uploading results into container
2025-01-13 14:52:26,076:INFO:Uploading model into container now
2025-01-13 14:52:26,077:INFO:_master_model_container: 15
2025-01-13 14:52:26,077:INFO:_display_container: 2
2025-01-13 14:52:26,077:INFO:AdaBoostRegressor(random_state=123)
2025-01-13 14:52:26,078:INFO:create_model() successfully completed......................................
2025-01-13 14:52:26,181:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:26,181:INFO:Creating metrics dataframe
2025-01-13 14:52:26,199:INFO:Initializing Gradient Boosting Regressor
2025-01-13 14:52:26,199:INFO:Total runtime is 0.27395860751469925 minutes
2025-01-13 14:52:26,206:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:26,206:INFO:Initializing create_model()
2025-01-13 14:52:26,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:26,207:INFO:Checking exceptions
2025-01-13 14:52:26,207:INFO:Importing libraries
2025-01-13 14:52:26,207:INFO:Copying training dataset
2025-01-13 14:52:26,215:INFO:Defining folds
2025-01-13 14:52:26,215:INFO:Declaring metric variables
2025-01-13 14:52:26,233:INFO:Importing untrained model
2025-01-13 14:52:26,263:INFO:Gradient Boosting Regressor Imported successfully
2025-01-13 14:52:26,300:INFO:Starting cross validation
2025-01-13 14:52:26,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:28,916:INFO:Calculating mean and std
2025-01-13 14:52:28,917:INFO:Creating metrics dataframe
2025-01-13 14:52:28,920:INFO:Uploading results into container
2025-01-13 14:52:28,921:INFO:Uploading model into container now
2025-01-13 14:52:28,922:INFO:_master_model_container: 16
2025-01-13 14:52:28,922:INFO:_display_container: 2
2025-01-13 14:52:28,923:INFO:GradientBoostingRegressor(random_state=123)
2025-01-13 14:52:28,924:INFO:create_model() successfully completed......................................
2025-01-13 14:52:29,025:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:29,025:INFO:Creating metrics dataframe
2025-01-13 14:52:29,041:INFO:Initializing Light Gradient Boosting Machine
2025-01-13 14:52:29,041:INFO:Total runtime is 0.3213245789210001 minutes
2025-01-13 14:52:29,046:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:29,047:INFO:Initializing create_model()
2025-01-13 14:52:29,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:29,047:INFO:Checking exceptions
2025-01-13 14:52:29,047:INFO:Importing libraries
2025-01-13 14:52:29,047:INFO:Copying training dataset
2025-01-13 14:52:29,054:INFO:Defining folds
2025-01-13 14:52:29,055:INFO:Declaring metric variables
2025-01-13 14:52:29,061:INFO:Importing untrained model
2025-01-13 14:52:29,066:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-13 14:52:29,077:INFO:Starting cross validation
2025-01-13 14:52:29,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:29,843:INFO:Calculating mean and std
2025-01-13 14:52:29,845:INFO:Creating metrics dataframe
2025-01-13 14:52:29,847:INFO:Uploading results into container
2025-01-13 14:52:29,848:INFO:Uploading model into container now
2025-01-13 14:52:29,848:INFO:_master_model_container: 17
2025-01-13 14:52:29,848:INFO:_display_container: 2
2025-01-13 14:52:29,849:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:29,850:INFO:create_model() successfully completed......................................
2025-01-13 14:52:29,946:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:29,946:INFO:Creating metrics dataframe
2025-01-13 14:52:29,962:INFO:Initializing Dummy Regressor
2025-01-13 14:52:29,962:INFO:Total runtime is 0.33668684959411616 minutes
2025-01-13 14:52:29,967:INFO:SubProcess create_model() called ==================================
2025-01-13 14:52:29,967:INFO:Initializing create_model()
2025-01-13 14:52:29,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227D521DD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:29,967:INFO:Checking exceptions
2025-01-13 14:52:29,968:INFO:Importing libraries
2025-01-13 14:52:29,968:INFO:Copying training dataset
2025-01-13 14:52:29,975:INFO:Defining folds
2025-01-13 14:52:29,975:INFO:Declaring metric variables
2025-01-13 14:52:29,981:INFO:Importing untrained model
2025-01-13 14:52:29,986:INFO:Dummy Regressor Imported successfully
2025-01-13 14:52:29,997:INFO:Starting cross validation
2025-01-13 14:52:29,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:52:30,111:INFO:Calculating mean and std
2025-01-13 14:52:30,113:INFO:Creating metrics dataframe
2025-01-13 14:52:30,115:INFO:Uploading results into container
2025-01-13 14:52:30,115:INFO:Uploading model into container now
2025-01-13 14:52:30,116:INFO:_master_model_container: 18
2025-01-13 14:52:30,116:INFO:_display_container: 2
2025-01-13 14:52:30,116:INFO:DummyRegressor()
2025-01-13 14:52:30,116:INFO:create_model() successfully completed......................................
2025-01-13 14:52:30,222:INFO:SubProcess create_model() end ==================================
2025-01-13 14:52:30,222:INFO:Creating metrics dataframe
2025-01-13 14:52:30,248:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-13 14:52:30,261:INFO:Initializing create_model()
2025-01-13 14:52:30,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:30,261:INFO:Checking exceptions
2025-01-13 14:52:30,264:INFO:Importing libraries
2025-01-13 14:52:30,264:INFO:Copying training dataset
2025-01-13 14:52:30,270:INFO:Defining folds
2025-01-13 14:52:30,271:INFO:Declaring metric variables
2025-01-13 14:52:30,271:INFO:Importing untrained model
2025-01-13 14:52:30,271:INFO:Declaring custom model
2025-01-13 14:52:30,272:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:52:30,273:INFO:Cross validation set to False
2025-01-13 14:52:30,273:INFO:Fitting Model
2025-01-13 14:52:30,553:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:30,553:INFO:create_model() successfully completed......................................
2025-01-13 14:52:30,693:INFO:_master_model_container: 18
2025-01-13 14:52:30,693:INFO:_display_container: 2
2025-01-13 14:52:30,693:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:30,694:INFO:compare_models() successfully completed......................................
2025-01-13 14:52:40,594:INFO:Initializing plot_model()
2025-01-13 14:52:40,594:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:52:40,594:INFO:Checking exceptions
2025-01-13 14:52:40,627:INFO:Preloading libraries
2025-01-13 14:52:40,729:INFO:Copying training dataset
2025-01-13 14:52:40,730:INFO:Plot type: residuals
2025-01-13 14:52:41,029:INFO:Fitting Model
2025-01-13 14:52:41,171:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-13 14:52:41,406:INFO:Scoring test/hold-out set
2025-01-13 14:52:42,586:INFO:Visual Rendered Successfully
2025-01-13 14:52:42,691:INFO:plot_model() successfully completed......................................
2025-01-13 14:52:44,832:INFO:Initializing plot_model()
2025-01-13 14:52:44,832:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:52:44,832:INFO:Checking exceptions
2025-01-13 14:52:44,875:INFO:Preloading libraries
2025-01-13 14:52:44,970:INFO:Copying training dataset
2025-01-13 14:52:44,971:INFO:Plot type: error
2025-01-13 14:52:45,188:INFO:Fitting Model
2025-01-13 14:52:45,188:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-13 14:52:45,188:INFO:Scoring test/hold-out set
2025-01-13 14:52:45,622:INFO:Visual Rendered Successfully
2025-01-13 14:52:45,727:INFO:plot_model() successfully completed......................................
2025-01-13 14:52:48,360:INFO:Initializing plot_model()
2025-01-13 14:52:48,360:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:52:48,360:INFO:Checking exceptions
2025-01-13 14:52:48,456:INFO:Preloading libraries
2025-01-13 14:52:48,545:INFO:Copying training dataset
2025-01-13 14:52:48,546:INFO:Plot type: feature
2025-01-13 14:52:48,546:WARNING:No coef_ found. Trying feature_importances_
2025-01-13 14:52:48,792:INFO:Visual Rendered Successfully
2025-01-13 14:52:48,900:INFO:plot_model() successfully completed......................................
2025-01-13 14:52:53,945:INFO:Initializing finalize_model()
2025-01-13 14:52:53,945:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-13 14:52:53,945:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:52:53,950:INFO:Initializing create_model()
2025-01-13 14:52:53,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D52AC2D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:52:53,950:INFO:Checking exceptions
2025-01-13 14:52:53,952:INFO:Importing libraries
2025-01-13 14:52:53,952:INFO:Copying training dataset
2025-01-13 14:52:53,953:INFO:Defining folds
2025-01-13 14:52:53,953:INFO:Declaring metric variables
2025-01-13 14:52:53,953:INFO:Importing untrained model
2025-01-13 14:52:53,953:INFO:Declaring custom model
2025-01-13 14:52:53,954:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:52:53,955:INFO:Cross validation set to False
2025-01-13 14:52:53,955:INFO:Fitting Model
2025-01-13 14:52:54,290:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:52:54,290:INFO:create_model() successfully completed......................................
2025-01-13 14:52:54,384:INFO:_master_model_container: 18
2025-01-13 14:52:54,384:INFO:_display_container: 2
2025-01-13 14:52:54,392:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:52:54,392:INFO:finalize_model() successfully completed......................................
2025-01-13 14:52:54,504:INFO:Initializing save_model()
2025-01-13 14:52:54,504:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=diesel_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-13 14:52:54,504:INFO:Adding model into prep_pipe
2025-01-13 14:52:54,504:WARNING:Only Model saved as it was a pipeline.
2025-01-13 14:52:54,783:INFO:diesel_model.pkl saved in current working directory
2025-01-13 14:52:54,792:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:52:54,792:INFO:save_model() successfully completed......................................
2025-01-13 14:52:56,944:INFO:PyCaret RegressionExperiment
2025-01-13 14:52:56,944:INFO:Logging name: reg-default-name
2025-01-13 14:52:56,944:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-13 14:52:56,944:INFO:version 3.3.2
2025-01-13 14:52:56,944:INFO:Initializing setup()
2025-01-13 14:52:56,944:INFO:self.USI: af5e
2025-01-13 14:52:56,944:INFO:self._variable_keys: {'X_test', 'transform_target_param', 'log_plots_param', 'target_param', '_available_plots', 'exp_id', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'html_param', 'y_train', 'y', 'USI', 'pipeline', 'n_jobs_param', 'fold_groups_param', 'fold_generator', '_ml_usecase', 'logging_param', 'X', 'exp_name_log', 'fold_shuffle_param', 'data', 'X_train', 'idx', 'y_test', 'seed'}
2025-01-13 14:52:56,944:INFO:Checking environment
2025-01-13 14:52:56,945:INFO:python_version: 3.11.11
2025-01-13 14:52:56,945:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-01-13 14:52:56,945:INFO:machine: AMD64
2025-01-13 14:52:56,945:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-13 14:52:56,945:INFO:Memory: svmem(total=6439919616, available=550146048, percent=91.5, used=5889773568, free=550146048)
2025-01-13 14:52:56,945:INFO:Physical Core: 4
2025-01-13 14:52:56,945:INFO:Logical Core: 4
2025-01-13 14:52:56,945:INFO:Checking libraries
2025-01-13 14:52:56,945:INFO:System:
2025-01-13 14:52:56,945:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-01-13 14:52:56,946:INFO:executable: c:\conda\envs\fuel_price\python.exe
2025-01-13 14:52:56,946:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-13 14:52:56,946:INFO:PyCaret required dependencies:
2025-01-13 14:52:56,946:INFO:                 pip: 24.2
2025-01-13 14:52:56,946:INFO:          setuptools: 75.1.0
2025-01-13 14:52:56,946:INFO:             pycaret: 3.3.2
2025-01-13 14:52:56,946:INFO:             IPython: 8.30.0
2025-01-13 14:52:56,946:INFO:          ipywidgets: 8.1.5
2025-01-13 14:52:56,946:INFO:                tqdm: 4.67.1
2025-01-13 14:52:56,946:INFO:               numpy: 1.26.4
2025-01-13 14:52:56,947:INFO:              pandas: 2.1.4
2025-01-13 14:52:56,947:INFO:              jinja2: 3.1.4
2025-01-13 14:52:56,947:INFO:               scipy: 1.11.4
2025-01-13 14:52:56,947:INFO:              joblib: 1.3.2
2025-01-13 14:52:56,947:INFO:             sklearn: 1.4.2
2025-01-13 14:52:56,947:INFO:                pyod: 2.0.3
2025-01-13 14:52:56,947:INFO:            imblearn: 0.13.0
2025-01-13 14:52:56,947:INFO:   category_encoders: 2.7.0
2025-01-13 14:52:56,947:INFO:            lightgbm: 4.5.0
2025-01-13 14:52:56,947:INFO:               numba: 0.60.0
2025-01-13 14:52:56,947:INFO:            requests: 2.32.3
2025-01-13 14:52:56,948:INFO:          matplotlib: 3.7.5
2025-01-13 14:52:56,948:INFO:          scikitplot: 0.3.7
2025-01-13 14:52:56,948:INFO:         yellowbrick: 1.5
2025-01-13 14:52:56,948:INFO:              plotly: 5.24.1
2025-01-13 14:52:56,948:INFO:    plotly-resampler: Not installed
2025-01-13 14:52:56,948:INFO:             kaleido: 0.2.1
2025-01-13 14:52:56,948:INFO:           schemdraw: 0.15
2025-01-13 14:52:56,949:INFO:         statsmodels: 0.14.4
2025-01-13 14:52:56,949:INFO:              sktime: 0.26.0
2025-01-13 14:52:56,949:INFO:               tbats: 1.1.3
2025-01-13 14:52:56,949:INFO:            pmdarima: 2.0.4
2025-01-13 14:52:56,949:INFO:              psutil: 5.9.0
2025-01-13 14:52:56,949:INFO:          markupsafe: 2.1.3
2025-01-13 14:52:56,949:INFO:             pickle5: Not installed
2025-01-13 14:52:56,949:INFO:         cloudpickle: 3.1.0
2025-01-13 14:52:56,949:INFO:         deprecation: 2.1.0
2025-01-13 14:52:56,949:INFO:              xxhash: 3.5.0
2025-01-13 14:52:56,949:INFO:           wurlitzer: Not installed
2025-01-13 14:52:56,949:INFO:PyCaret optional dependencies:
2025-01-13 14:52:56,950:INFO:                shap: Not installed
2025-01-13 14:52:56,950:INFO:           interpret: Not installed
2025-01-13 14:52:56,950:INFO:                umap: Not installed
2025-01-13 14:52:56,950:INFO:     ydata_profiling: Not installed
2025-01-13 14:52:56,950:INFO:  explainerdashboard: Not installed
2025-01-13 14:52:56,950:INFO:             autoviz: Not installed
2025-01-13 14:52:56,950:INFO:           fairlearn: Not installed
2025-01-13 14:52:56,950:INFO:          deepchecks: Not installed
2025-01-13 14:52:56,950:INFO:             xgboost: Not installed
2025-01-13 14:52:56,950:INFO:            catboost: Not installed
2025-01-13 14:52:56,950:INFO:              kmodes: Not installed
2025-01-13 14:52:56,951:INFO:             mlxtend: Not installed
2025-01-13 14:52:56,951:INFO:       statsforecast: Not installed
2025-01-13 14:52:56,951:INFO:        tune_sklearn: Not installed
2025-01-13 14:52:56,951:INFO:                 ray: Not installed
2025-01-13 14:52:56,951:INFO:            hyperopt: Not installed
2025-01-13 14:52:56,951:INFO:              optuna: Not installed
2025-01-13 14:52:56,951:INFO:               skopt: Not installed
2025-01-13 14:52:56,951:INFO:              mlflow: Not installed
2025-01-13 14:52:56,951:INFO:              gradio: Not installed
2025-01-13 14:52:56,952:INFO:             fastapi: Not installed
2025-01-13 14:52:56,952:INFO:             uvicorn: Not installed
2025-01-13 14:52:56,952:INFO:              m2cgen: Not installed
2025-01-13 14:52:56,952:INFO:           evidently: Not installed
2025-01-13 14:52:56,952:INFO:               fugue: Not installed
2025-01-13 14:52:56,952:INFO:           streamlit: 1.40.1
2025-01-13 14:52:56,952:INFO:             prophet: Not installed
2025-01-13 14:52:56,952:INFO:None
2025-01-13 14:52:56,952:INFO:Set up data.
2025-01-13 14:52:56,957:INFO:Set up folding strategy.
2025-01-13 14:52:56,957:INFO:Set up train/test split.
2025-01-13 14:52:56,962:INFO:Set up index.
2025-01-13 14:52:56,963:INFO:Assigning column types.
2025-01-13 14:52:56,967:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-13 14:52:56,968:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-13 14:52:56,977:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:52:56,988:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,219:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,229:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,239:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,469:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-13 14:52:57,479:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,489:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,728:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,739:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:57,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:57,966:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-13 14:52:57,986:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,234:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,463:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-13 14:52:58,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,857:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-13 14:52:58,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:58,959:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-13 14:52:59,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:59,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-13 14:52:59,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,462:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-13 14:52:59,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:52:59,968:INFO:Preparing preprocessing pipeline...
2025-01-13 14:52:59,968:INFO:Set up simple imputation.
2025-01-13 14:52:59,969:INFO:Set up column name cleaning.
2025-01-13 14:53:00,046:INFO:Finished creating preprocessing pipeline.
2025-01-13 14:53:00,053:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-13 14:53:00,053:INFO:Creating final display dataframe.
2025-01-13 14:53:00,269:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           super95
2                   Target type        Regression
3           Original data shape         (7671, 3)
4        Transformed data shape         (7671, 3)
5   Transformed train set shape         (5369, 3)
6    Transformed test set shape         (2302, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              af5e
2025-01-13 14:53:00,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:53:00,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:53:00,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:53:00,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-13 14:53:00,809:INFO:setup() successfully completed in 3.87s...............
2025-01-13 14:53:01,176:INFO:Initializing compare_models()
2025-01-13 14:53:01,176:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-13 14:53:01,176:INFO:Checking exceptions
2025-01-13 14:53:01,179:INFO:Preparing display monitor
2025-01-13 14:53:01,206:INFO:Initializing Linear Regression
2025-01-13 14:53:01,207:INFO:Total runtime is 1.6645590464274088e-05 minutes
2025-01-13 14:53:01,219:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:01,219:INFO:Initializing create_model()
2025-01-13 14:53:01,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:01,219:INFO:Checking exceptions
2025-01-13 14:53:01,220:INFO:Importing libraries
2025-01-13 14:53:01,220:INFO:Copying training dataset
2025-01-13 14:53:01,227:INFO:Defining folds
2025-01-13 14:53:01,227:INFO:Declaring metric variables
2025-01-13 14:53:01,237:INFO:Importing untrained model
2025-01-13 14:53:01,243:INFO:Linear Regression Imported successfully
2025-01-13 14:53:01,252:INFO:Starting cross validation
2025-01-13 14:53:01,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:01,420:INFO:Calculating mean and std
2025-01-13 14:53:01,421:INFO:Creating metrics dataframe
2025-01-13 14:53:01,423:INFO:Uploading results into container
2025-01-13 14:53:01,424:INFO:Uploading model into container now
2025-01-13 14:53:01,424:INFO:_master_model_container: 1
2025-01-13 14:53:01,424:INFO:_display_container: 2
2025-01-13 14:53:01,425:INFO:LinearRegression(n_jobs=-1)
2025-01-13 14:53:01,425:INFO:create_model() successfully completed......................................
2025-01-13 14:53:01,528:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:01,528:INFO:Creating metrics dataframe
2025-01-13 14:53:01,537:INFO:Initializing Lasso Regression
2025-01-13 14:53:01,537:INFO:Total runtime is 0.005514951546986897 minutes
2025-01-13 14:53:01,541:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:01,542:INFO:Initializing create_model()
2025-01-13 14:53:01,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:01,542:INFO:Checking exceptions
2025-01-13 14:53:01,542:INFO:Importing libraries
2025-01-13 14:53:01,542:INFO:Copying training dataset
2025-01-13 14:53:01,549:INFO:Defining folds
2025-01-13 14:53:01,549:INFO:Declaring metric variables
2025-01-13 14:53:01,554:INFO:Importing untrained model
2025-01-13 14:53:01,559:INFO:Lasso Regression Imported successfully
2025-01-13 14:53:01,568:INFO:Starting cross validation
2025-01-13 14:53:01,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:01,697:INFO:Calculating mean and std
2025-01-13 14:53:01,698:INFO:Creating metrics dataframe
2025-01-13 14:53:01,700:INFO:Uploading results into container
2025-01-13 14:53:01,701:INFO:Uploading model into container now
2025-01-13 14:53:01,701:INFO:_master_model_container: 2
2025-01-13 14:53:01,702:INFO:_display_container: 2
2025-01-13 14:53:01,702:INFO:Lasso(random_state=123)
2025-01-13 14:53:01,702:INFO:create_model() successfully completed......................................
2025-01-13 14:53:01,803:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:01,803:INFO:Creating metrics dataframe
2025-01-13 14:53:01,814:INFO:Initializing Ridge Regression
2025-01-13 14:53:01,814:INFO:Total runtime is 0.010132257143656412 minutes
2025-01-13 14:53:01,819:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:01,819:INFO:Initializing create_model()
2025-01-13 14:53:01,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:01,820:INFO:Checking exceptions
2025-01-13 14:53:01,820:INFO:Importing libraries
2025-01-13 14:53:01,820:INFO:Copying training dataset
2025-01-13 14:53:01,827:INFO:Defining folds
2025-01-13 14:53:01,827:INFO:Declaring metric variables
2025-01-13 14:53:01,831:INFO:Importing untrained model
2025-01-13 14:53:01,836:INFO:Ridge Regression Imported successfully
2025-01-13 14:53:01,844:INFO:Starting cross validation
2025-01-13 14:53:01,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:01,967:INFO:Calculating mean and std
2025-01-13 14:53:01,968:INFO:Creating metrics dataframe
2025-01-13 14:53:01,971:INFO:Uploading results into container
2025-01-13 14:53:01,971:INFO:Uploading model into container now
2025-01-13 14:53:01,971:INFO:_master_model_container: 3
2025-01-13 14:53:01,972:INFO:_display_container: 2
2025-01-13 14:53:01,972:INFO:Ridge(random_state=123)
2025-01-13 14:53:01,972:INFO:create_model() successfully completed......................................
2025-01-13 14:53:02,071:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:02,071:INFO:Creating metrics dataframe
2025-01-13 14:53:02,080:INFO:Initializing Elastic Net
2025-01-13 14:53:02,080:INFO:Total runtime is 0.014574623107910155 minutes
2025-01-13 14:53:02,084:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:02,085:INFO:Initializing create_model()
2025-01-13 14:53:02,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:02,085:INFO:Checking exceptions
2025-01-13 14:53:02,086:INFO:Importing libraries
2025-01-13 14:53:02,086:INFO:Copying training dataset
2025-01-13 14:53:02,092:INFO:Defining folds
2025-01-13 14:53:02,092:INFO:Declaring metric variables
2025-01-13 14:53:02,096:INFO:Importing untrained model
2025-01-13 14:53:02,100:INFO:Elastic Net Imported successfully
2025-01-13 14:53:02,109:INFO:Starting cross validation
2025-01-13 14:53:02,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:02,224:INFO:Calculating mean and std
2025-01-13 14:53:02,226:INFO:Creating metrics dataframe
2025-01-13 14:53:02,228:INFO:Uploading results into container
2025-01-13 14:53:02,229:INFO:Uploading model into container now
2025-01-13 14:53:02,229:INFO:_master_model_container: 4
2025-01-13 14:53:02,229:INFO:_display_container: 2
2025-01-13 14:53:02,230:INFO:ElasticNet(random_state=123)
2025-01-13 14:53:02,230:INFO:create_model() successfully completed......................................
2025-01-13 14:53:02,372:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:02,372:INFO:Creating metrics dataframe
2025-01-13 14:53:02,387:INFO:Initializing Least Angle Regression
2025-01-13 14:53:02,387:INFO:Total runtime is 0.019687378406524656 minutes
2025-01-13 14:53:02,394:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:02,395:INFO:Initializing create_model()
2025-01-13 14:53:02,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:02,395:INFO:Checking exceptions
2025-01-13 14:53:02,395:INFO:Importing libraries
2025-01-13 14:53:02,395:INFO:Copying training dataset
2025-01-13 14:53:02,404:INFO:Defining folds
2025-01-13 14:53:02,404:INFO:Declaring metric variables
2025-01-13 14:53:02,410:INFO:Importing untrained model
2025-01-13 14:53:02,415:INFO:Least Angle Regression Imported successfully
2025-01-13 14:53:02,426:INFO:Starting cross validation
2025-01-13 14:53:02,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:02,564:INFO:Calculating mean and std
2025-01-13 14:53:02,566:INFO:Creating metrics dataframe
2025-01-13 14:53:02,570:INFO:Uploading results into container
2025-01-13 14:53:02,572:INFO:Uploading model into container now
2025-01-13 14:53:02,573:INFO:_master_model_container: 5
2025-01-13 14:53:02,573:INFO:_display_container: 2
2025-01-13 14:53:02,573:INFO:Lars(random_state=123)
2025-01-13 14:53:02,573:INFO:create_model() successfully completed......................................
2025-01-13 14:53:02,682:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:02,682:INFO:Creating metrics dataframe
2025-01-13 14:53:02,694:INFO:Initializing Lasso Least Angle Regression
2025-01-13 14:53:02,694:INFO:Total runtime is 0.024800844987233478 minutes
2025-01-13 14:53:02,699:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:02,700:INFO:Initializing create_model()
2025-01-13 14:53:02,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:02,700:INFO:Checking exceptions
2025-01-13 14:53:02,700:INFO:Importing libraries
2025-01-13 14:53:02,701:INFO:Copying training dataset
2025-01-13 14:53:02,709:INFO:Defining folds
2025-01-13 14:53:02,709:INFO:Declaring metric variables
2025-01-13 14:53:02,716:INFO:Importing untrained model
2025-01-13 14:53:02,723:INFO:Lasso Least Angle Regression Imported successfully
2025-01-13 14:53:02,733:INFO:Starting cross validation
2025-01-13 14:53:02,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:02,869:INFO:Calculating mean and std
2025-01-13 14:53:02,871:INFO:Creating metrics dataframe
2025-01-13 14:53:02,875:INFO:Uploading results into container
2025-01-13 14:53:02,876:INFO:Uploading model into container now
2025-01-13 14:53:02,876:INFO:_master_model_container: 6
2025-01-13 14:53:02,876:INFO:_display_container: 2
2025-01-13 14:53:02,877:INFO:LassoLars(random_state=123)
2025-01-13 14:53:02,877:INFO:create_model() successfully completed......................................
2025-01-13 14:53:02,982:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:02,983:INFO:Creating metrics dataframe
2025-01-13 14:53:02,994:INFO:Initializing Orthogonal Matching Pursuit
2025-01-13 14:53:02,994:INFO:Total runtime is 0.029806458950042723 minutes
2025-01-13 14:53:02,998:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:02,999:INFO:Initializing create_model()
2025-01-13 14:53:02,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:02,999:INFO:Checking exceptions
2025-01-13 14:53:02,999:INFO:Importing libraries
2025-01-13 14:53:03,000:INFO:Copying training dataset
2025-01-13 14:53:03,007:INFO:Defining folds
2025-01-13 14:53:03,007:INFO:Declaring metric variables
2025-01-13 14:53:03,014:INFO:Importing untrained model
2025-01-13 14:53:03,021:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-13 14:53:03,053:INFO:Starting cross validation
2025-01-13 14:53:03,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:03,209:INFO:Calculating mean and std
2025-01-13 14:53:03,211:INFO:Creating metrics dataframe
2025-01-13 14:53:03,213:INFO:Uploading results into container
2025-01-13 14:53:03,214:INFO:Uploading model into container now
2025-01-13 14:53:03,214:INFO:_master_model_container: 7
2025-01-13 14:53:03,214:INFO:_display_container: 2
2025-01-13 14:53:03,214:INFO:OrthogonalMatchingPursuit()
2025-01-13 14:53:03,215:INFO:create_model() successfully completed......................................
2025-01-13 14:53:03,320:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:03,320:INFO:Creating metrics dataframe
2025-01-13 14:53:03,332:INFO:Initializing Bayesian Ridge
2025-01-13 14:53:03,332:INFO:Total runtime is 0.03543821175893148 minutes
2025-01-13 14:53:03,336:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:03,337:INFO:Initializing create_model()
2025-01-13 14:53:03,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:03,337:INFO:Checking exceptions
2025-01-13 14:53:03,337:INFO:Importing libraries
2025-01-13 14:53:03,337:INFO:Copying training dataset
2025-01-13 14:53:03,345:INFO:Defining folds
2025-01-13 14:53:03,345:INFO:Declaring metric variables
2025-01-13 14:53:03,350:INFO:Importing untrained model
2025-01-13 14:53:03,357:INFO:Bayesian Ridge Imported successfully
2025-01-13 14:53:03,366:INFO:Starting cross validation
2025-01-13 14:53:03,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:03,495:INFO:Calculating mean and std
2025-01-13 14:53:03,496:INFO:Creating metrics dataframe
2025-01-13 14:53:03,499:INFO:Uploading results into container
2025-01-13 14:53:03,499:INFO:Uploading model into container now
2025-01-13 14:53:03,500:INFO:_master_model_container: 8
2025-01-13 14:53:03,501:INFO:_display_container: 2
2025-01-13 14:53:03,501:INFO:BayesianRidge()
2025-01-13 14:53:03,501:INFO:create_model() successfully completed......................................
2025-01-13 14:53:03,607:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:03,608:INFO:Creating metrics dataframe
2025-01-13 14:53:03,620:INFO:Initializing Passive Aggressive Regressor
2025-01-13 14:53:03,620:INFO:Total runtime is 0.040236226717631024 minutes
2025-01-13 14:53:03,624:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:03,624:INFO:Initializing create_model()
2025-01-13 14:53:03,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:03,624:INFO:Checking exceptions
2025-01-13 14:53:03,625:INFO:Importing libraries
2025-01-13 14:53:03,625:INFO:Copying training dataset
2025-01-13 14:53:03,632:INFO:Defining folds
2025-01-13 14:53:03,632:INFO:Declaring metric variables
2025-01-13 14:53:03,637:INFO:Importing untrained model
2025-01-13 14:53:03,644:INFO:Passive Aggressive Regressor Imported successfully
2025-01-13 14:53:03,657:INFO:Starting cross validation
2025-01-13 14:53:03,658:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:03,846:INFO:Calculating mean and std
2025-01-13 14:53:03,848:INFO:Creating metrics dataframe
2025-01-13 14:53:03,850:INFO:Uploading results into container
2025-01-13 14:53:03,851:INFO:Uploading model into container now
2025-01-13 14:53:03,851:INFO:_master_model_container: 9
2025-01-13 14:53:03,853:INFO:_display_container: 2
2025-01-13 14:53:03,854:INFO:PassiveAggressiveRegressor(random_state=123)
2025-01-13 14:53:03,854:INFO:create_model() successfully completed......................................
2025-01-13 14:53:03,959:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:03,959:INFO:Creating metrics dataframe
2025-01-13 14:53:03,973:INFO:Initializing Huber Regressor
2025-01-13 14:53:03,973:INFO:Total runtime is 0.04611589113871257 minutes
2025-01-13 14:53:03,977:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:03,978:INFO:Initializing create_model()
2025-01-13 14:53:03,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:03,979:INFO:Checking exceptions
2025-01-13 14:53:03,979:INFO:Importing libraries
2025-01-13 14:53:03,979:INFO:Copying training dataset
2025-01-13 14:53:03,988:INFO:Defining folds
2025-01-13 14:53:03,988:INFO:Declaring metric variables
2025-01-13 14:53:03,996:INFO:Importing untrained model
2025-01-13 14:53:04,001:INFO:Huber Regressor Imported successfully
2025-01-13 14:53:04,013:INFO:Starting cross validation
2025-01-13 14:53:04,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:04,266:INFO:Calculating mean and std
2025-01-13 14:53:04,268:INFO:Creating metrics dataframe
2025-01-13 14:53:04,271:INFO:Uploading results into container
2025-01-13 14:53:04,272:INFO:Uploading model into container now
2025-01-13 14:53:04,273:INFO:_master_model_container: 10
2025-01-13 14:53:04,273:INFO:_display_container: 2
2025-01-13 14:53:04,273:INFO:HuberRegressor()
2025-01-13 14:53:04,273:INFO:create_model() successfully completed......................................
2025-01-13 14:53:04,374:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:04,374:INFO:Creating metrics dataframe
2025-01-13 14:53:04,387:INFO:Initializing K Neighbors Regressor
2025-01-13 14:53:04,387:INFO:Total runtime is 0.05300991932551066 minutes
2025-01-13 14:53:04,392:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:04,392:INFO:Initializing create_model()
2025-01-13 14:53:04,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:04,393:INFO:Checking exceptions
2025-01-13 14:53:04,393:INFO:Importing libraries
2025-01-13 14:53:04,393:INFO:Copying training dataset
2025-01-13 14:53:04,399:INFO:Defining folds
2025-01-13 14:53:04,400:INFO:Declaring metric variables
2025-01-13 14:53:04,404:INFO:Importing untrained model
2025-01-13 14:53:04,411:INFO:K Neighbors Regressor Imported successfully
2025-01-13 14:53:04,419:INFO:Starting cross validation
2025-01-13 14:53:04,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:04,594:INFO:Calculating mean and std
2025-01-13 14:53:04,595:INFO:Creating metrics dataframe
2025-01-13 14:53:04,598:INFO:Uploading results into container
2025-01-13 14:53:04,598:INFO:Uploading model into container now
2025-01-13 14:53:04,599:INFO:_master_model_container: 11
2025-01-13 14:53:04,599:INFO:_display_container: 2
2025-01-13 14:53:04,599:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-13 14:53:04,600:INFO:create_model() successfully completed......................................
2025-01-13 14:53:04,701:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:04,701:INFO:Creating metrics dataframe
2025-01-13 14:53:04,715:INFO:Initializing Decision Tree Regressor
2025-01-13 14:53:04,716:INFO:Total runtime is 0.05850738286972046 minutes
2025-01-13 14:53:04,721:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:04,721:INFO:Initializing create_model()
2025-01-13 14:53:04,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:04,722:INFO:Checking exceptions
2025-01-13 14:53:04,722:INFO:Importing libraries
2025-01-13 14:53:04,722:INFO:Copying training dataset
2025-01-13 14:53:04,729:INFO:Defining folds
2025-01-13 14:53:04,730:INFO:Declaring metric variables
2025-01-13 14:53:04,735:INFO:Importing untrained model
2025-01-13 14:53:04,742:INFO:Decision Tree Regressor Imported successfully
2025-01-13 14:53:04,751:INFO:Starting cross validation
2025-01-13 14:53:04,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:04,933:INFO:Calculating mean and std
2025-01-13 14:53:04,934:INFO:Creating metrics dataframe
2025-01-13 14:53:04,939:INFO:Uploading results into container
2025-01-13 14:53:04,940:INFO:Uploading model into container now
2025-01-13 14:53:04,941:INFO:_master_model_container: 12
2025-01-13 14:53:04,941:INFO:_display_container: 2
2025-01-13 14:53:04,941:INFO:DecisionTreeRegressor(random_state=123)
2025-01-13 14:53:04,941:INFO:create_model() successfully completed......................................
2025-01-13 14:53:05,046:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:05,046:INFO:Creating metrics dataframe
2025-01-13 14:53:05,060:INFO:Initializing Random Forest Regressor
2025-01-13 14:53:05,060:INFO:Total runtime is 0.06423736413319905 minutes
2025-01-13 14:53:05,065:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:05,065:INFO:Initializing create_model()
2025-01-13 14:53:05,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:05,065:INFO:Checking exceptions
2025-01-13 14:53:05,066:INFO:Importing libraries
2025-01-13 14:53:05,066:INFO:Copying training dataset
2025-01-13 14:53:05,074:INFO:Defining folds
2025-01-13 14:53:05,074:INFO:Declaring metric variables
2025-01-13 14:53:05,081:INFO:Importing untrained model
2025-01-13 14:53:05,088:INFO:Random Forest Regressor Imported successfully
2025-01-13 14:53:05,098:INFO:Starting cross validation
2025-01-13 14:53:05,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:09,248:INFO:Calculating mean and std
2025-01-13 14:53:09,250:INFO:Creating metrics dataframe
2025-01-13 14:53:09,252:INFO:Uploading results into container
2025-01-13 14:53:09,253:INFO:Uploading model into container now
2025-01-13 14:53:09,253:INFO:_master_model_container: 13
2025-01-13 14:53:09,253:INFO:_display_container: 2
2025-01-13 14:53:09,254:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:09,254:INFO:create_model() successfully completed......................................
2025-01-13 14:53:09,360:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:09,360:INFO:Creating metrics dataframe
2025-01-13 14:53:09,374:INFO:Initializing Extra Trees Regressor
2025-01-13 14:53:09,375:INFO:Total runtime is 0.13614679177602132 minutes
2025-01-13 14:53:09,379:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:09,380:INFO:Initializing create_model()
2025-01-13 14:53:09,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:09,380:INFO:Checking exceptions
2025-01-13 14:53:09,380:INFO:Importing libraries
2025-01-13 14:53:09,380:INFO:Copying training dataset
2025-01-13 14:53:09,387:INFO:Defining folds
2025-01-13 14:53:09,388:INFO:Declaring metric variables
2025-01-13 14:53:09,392:INFO:Importing untrained model
2025-01-13 14:53:09,399:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:53:09,411:INFO:Starting cross validation
2025-01-13 14:53:09,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:11,900:INFO:Calculating mean and std
2025-01-13 14:53:11,902:INFO:Creating metrics dataframe
2025-01-13 14:53:11,904:INFO:Uploading results into container
2025-01-13 14:53:11,905:INFO:Uploading model into container now
2025-01-13 14:53:11,905:INFO:_master_model_container: 14
2025-01-13 14:53:11,905:INFO:_display_container: 2
2025-01-13 14:53:11,906:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:11,906:INFO:create_model() successfully completed......................................
2025-01-13 14:53:12,015:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:12,015:INFO:Creating metrics dataframe
2025-01-13 14:53:12,030:INFO:Initializing AdaBoost Regressor
2025-01-13 14:53:12,031:INFO:Total runtime is 0.1803998867670695 minutes
2025-01-13 14:53:12,038:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:12,039:INFO:Initializing create_model()
2025-01-13 14:53:12,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:12,039:INFO:Checking exceptions
2025-01-13 14:53:12,039:INFO:Importing libraries
2025-01-13 14:53:12,039:INFO:Copying training dataset
2025-01-13 14:53:12,048:INFO:Defining folds
2025-01-13 14:53:12,049:INFO:Declaring metric variables
2025-01-13 14:53:12,055:INFO:Importing untrained model
2025-01-13 14:53:12,061:INFO:AdaBoost Regressor Imported successfully
2025-01-13 14:53:12,074:INFO:Starting cross validation
2025-01-13 14:53:12,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:12,700:INFO:Calculating mean and std
2025-01-13 14:53:12,701:INFO:Creating metrics dataframe
2025-01-13 14:53:12,704:INFO:Uploading results into container
2025-01-13 14:53:12,704:INFO:Uploading model into container now
2025-01-13 14:53:12,705:INFO:_master_model_container: 15
2025-01-13 14:53:12,705:INFO:_display_container: 2
2025-01-13 14:53:12,705:INFO:AdaBoostRegressor(random_state=123)
2025-01-13 14:53:12,705:INFO:create_model() successfully completed......................................
2025-01-13 14:53:12,809:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:12,809:INFO:Creating metrics dataframe
2025-01-13 14:53:12,828:INFO:Initializing Gradient Boosting Regressor
2025-01-13 14:53:12,828:INFO:Total runtime is 0.1937029798825582 minutes
2025-01-13 14:53:12,833:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:12,833:INFO:Initializing create_model()
2025-01-13 14:53:12,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:12,833:INFO:Checking exceptions
2025-01-13 14:53:12,833:INFO:Importing libraries
2025-01-13 14:53:12,834:INFO:Copying training dataset
2025-01-13 14:53:12,841:INFO:Defining folds
2025-01-13 14:53:12,841:INFO:Declaring metric variables
2025-01-13 14:53:12,846:INFO:Importing untrained model
2025-01-13 14:53:12,852:INFO:Gradient Boosting Regressor Imported successfully
2025-01-13 14:53:12,863:INFO:Starting cross validation
2025-01-13 14:53:12,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:14,453:INFO:Calculating mean and std
2025-01-13 14:53:14,454:INFO:Creating metrics dataframe
2025-01-13 14:53:14,458:INFO:Uploading results into container
2025-01-13 14:53:14,459:INFO:Uploading model into container now
2025-01-13 14:53:14,459:INFO:_master_model_container: 16
2025-01-13 14:53:14,460:INFO:_display_container: 2
2025-01-13 14:53:14,460:INFO:GradientBoostingRegressor(random_state=123)
2025-01-13 14:53:14,460:INFO:create_model() successfully completed......................................
2025-01-13 14:53:14,557:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:14,557:INFO:Creating metrics dataframe
2025-01-13 14:53:14,575:INFO:Initializing Light Gradient Boosting Machine
2025-01-13 14:53:14,575:INFO:Total runtime is 0.2228233615557353 minutes
2025-01-13 14:53:14,581:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:14,582:INFO:Initializing create_model()
2025-01-13 14:53:14,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:14,582:INFO:Checking exceptions
2025-01-13 14:53:14,582:INFO:Importing libraries
2025-01-13 14:53:14,582:INFO:Copying training dataset
2025-01-13 14:53:14,590:INFO:Defining folds
2025-01-13 14:53:14,590:INFO:Declaring metric variables
2025-01-13 14:53:14,594:INFO:Importing untrained model
2025-01-13 14:53:14,602:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-13 14:53:14,610:INFO:Starting cross validation
2025-01-13 14:53:14,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:15,326:INFO:Calculating mean and std
2025-01-13 14:53:15,327:INFO:Creating metrics dataframe
2025-01-13 14:53:15,331:INFO:Uploading results into container
2025-01-13 14:53:15,333:INFO:Uploading model into container now
2025-01-13 14:53:15,333:INFO:_master_model_container: 17
2025-01-13 14:53:15,333:INFO:_display_container: 2
2025-01-13 14:53:15,334:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:15,334:INFO:create_model() successfully completed......................................
2025-01-13 14:53:15,434:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:15,434:INFO:Creating metrics dataframe
2025-01-13 14:53:15,449:INFO:Initializing Dummy Regressor
2025-01-13 14:53:15,450:INFO:Total runtime is 0.23740374644597373 minutes
2025-01-13 14:53:15,454:INFO:SubProcess create_model() called ==================================
2025-01-13 14:53:15,454:INFO:Initializing create_model()
2025-01-13 14:53:15,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227C74E8490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:15,454:INFO:Checking exceptions
2025-01-13 14:53:15,455:INFO:Importing libraries
2025-01-13 14:53:15,455:INFO:Copying training dataset
2025-01-13 14:53:15,461:INFO:Defining folds
2025-01-13 14:53:15,462:INFO:Declaring metric variables
2025-01-13 14:53:15,469:INFO:Importing untrained model
2025-01-13 14:53:15,474:INFO:Dummy Regressor Imported successfully
2025-01-13 14:53:15,484:INFO:Starting cross validation
2025-01-13 14:53:15,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-13 14:53:15,595:INFO:Calculating mean and std
2025-01-13 14:53:15,597:INFO:Creating metrics dataframe
2025-01-13 14:53:15,600:INFO:Uploading results into container
2025-01-13 14:53:15,600:INFO:Uploading model into container now
2025-01-13 14:53:15,601:INFO:_master_model_container: 18
2025-01-13 14:53:15,601:INFO:_display_container: 2
2025-01-13 14:53:15,602:INFO:DummyRegressor()
2025-01-13 14:53:15,602:INFO:create_model() successfully completed......................................
2025-01-13 14:53:15,701:INFO:SubProcess create_model() end ==================================
2025-01-13 14:53:15,701:INFO:Creating metrics dataframe
2025-01-13 14:53:15,719:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-01-13 14:53:15,732:INFO:Initializing create_model()
2025-01-13 14:53:15,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:15,732:INFO:Checking exceptions
2025-01-13 14:53:15,735:INFO:Importing libraries
2025-01-13 14:53:15,735:INFO:Copying training dataset
2025-01-13 14:53:15,741:INFO:Defining folds
2025-01-13 14:53:15,741:INFO:Declaring metric variables
2025-01-13 14:53:15,741:INFO:Importing untrained model
2025-01-13 14:53:15,741:INFO:Declaring custom model
2025-01-13 14:53:15,742:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:53:15,743:INFO:Cross validation set to False
2025-01-13 14:53:15,743:INFO:Fitting Model
2025-01-13 14:53:16,003:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:16,003:INFO:create_model() successfully completed......................................
2025-01-13 14:53:16,143:INFO:_master_model_container: 18
2025-01-13 14:53:16,143:INFO:_display_container: 2
2025-01-13 14:53:16,144:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:16,144:INFO:compare_models() successfully completed......................................
2025-01-13 14:53:18,573:INFO:Initializing plot_model()
2025-01-13 14:53:18,573:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:53:18,574:INFO:Checking exceptions
2025-01-13 14:53:18,606:INFO:Preloading libraries
2025-01-13 14:53:18,697:INFO:Copying training dataset
2025-01-13 14:53:18,697:INFO:Plot type: residuals
2025-01-13 14:53:18,947:INFO:Fitting Model
2025-01-13 14:53:18,947:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-13 14:53:19,107:INFO:Scoring test/hold-out set
2025-01-13 14:53:19,860:INFO:Visual Rendered Successfully
2025-01-13 14:53:19,965:INFO:plot_model() successfully completed......................................
2025-01-13 14:53:21,613:INFO:Initializing plot_model()
2025-01-13 14:53:21,613:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:53:21,613:INFO:Checking exceptions
2025-01-13 14:53:21,646:INFO:Preloading libraries
2025-01-13 14:53:21,746:INFO:Copying training dataset
2025-01-13 14:53:21,746:INFO:Plot type: error
2025-01-13 14:53:21,971:INFO:Fitting Model
2025-01-13 14:53:21,971:WARNING:c:\conda\envs\fuel_price\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2025-01-13 14:53:21,972:INFO:Scoring test/hold-out set
2025-01-13 14:53:22,397:INFO:Visual Rendered Successfully
2025-01-13 14:53:22,507:INFO:plot_model() successfully completed......................................
2025-01-13 14:53:25,648:INFO:Initializing plot_model()
2025-01-13 14:53:25,649:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-01-13 14:53:25,649:INFO:Checking exceptions
2025-01-13 14:53:25,681:INFO:Preloading libraries
2025-01-13 14:53:25,808:INFO:Copying training dataset
2025-01-13 14:53:25,808:INFO:Plot type: feature
2025-01-13 14:53:25,809:WARNING:No coef_ found. Trying feature_importances_
2025-01-13 14:53:26,070:INFO:Visual Rendered Successfully
2025-01-13 14:53:26,170:INFO:plot_model() successfully completed......................................
2025-01-13 14:53:27,654:INFO:Initializing finalize_model()
2025-01-13 14:53:27,655:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-13 14:53:27,655:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-01-13 14:53:27,659:INFO:Initializing create_model()
2025-01-13 14:53:27,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-13 14:53:27,659:INFO:Checking exceptions
2025-01-13 14:53:27,661:INFO:Importing libraries
2025-01-13 14:53:27,661:INFO:Copying training dataset
2025-01-13 14:53:27,662:INFO:Defining folds
2025-01-13 14:53:27,662:INFO:Declaring metric variables
2025-01-13 14:53:27,662:INFO:Importing untrained model
2025-01-13 14:53:27,662:INFO:Declaring custom model
2025-01-13 14:53:27,663:INFO:Extra Trees Regressor Imported successfully
2025-01-13 14:53:27,664:INFO:Cross validation set to False
2025-01-13 14:53:27,664:INFO:Fitting Model
2025-01-13 14:53:27,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:53:27,995:INFO:create_model() successfully completed......................................
2025-01-13 14:53:28,090:INFO:_master_model_container: 18
2025-01-13 14:53:28,090:INFO:_display_container: 2
2025-01-13 14:53:28,099:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:53:28,099:INFO:finalize_model() successfully completed......................................
2025-01-13 14:53:28,212:INFO:Initializing save_model()
2025-01-13 14:53:28,212:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=super95_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-13 14:53:28,212:INFO:Adding model into prep_pipe
2025-01-13 14:53:28,212:WARNING:Only Model saved as it was a pipeline.
2025-01-13 14:53:28,309:INFO:super95_model.pkl saved in current working directory
2025-01-13 14:53:28,318:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2025-01-13 14:53:28,318:INFO:save_model() successfully completed......................................
2025-01-13 14:53:44,640:INFO:Initializing predict_model()
2025-01-13 14:53:44,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000227D3A83880>)
2025-01-13 14:53:44,640:INFO:Checking exceptions
2025-01-13 14:53:44,640:INFO:Preloading libraries
2025-01-13 14:53:44,642:INFO:Set up data.
2025-01-13 14:53:44,644:INFO:Set up index.
2025-01-13 14:54:01,121:INFO:Initializing predict_model()
2025-01-13 14:54:01,122:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000227D5227A60>)
2025-01-13 14:54:01,122:INFO:Checking exceptions
2025-01-13 14:54:01,122:INFO:Preloading libraries
2025-01-13 14:54:01,124:INFO:Set up data.
2025-01-13 14:54:01,126:INFO:Set up index.
2025-01-13 14:54:17,663:INFO:Initializing predict_model()
2025-01-13 14:54:17,663:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000227D5226FC0>)
2025-01-13 14:54:17,663:INFO:Checking exceptions
2025-01-13 14:54:17,663:INFO:Preloading libraries
2025-01-13 14:54:17,665:INFO:Set up data.
2025-01-13 14:54:17,668:INFO:Set up index.
2025-01-13 15:03:18,476:INFO:Initializing predict_model()
2025-01-13 15:03:18,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000227D5CC7740>)
2025-01-13 15:03:18,477:INFO:Checking exceptions
2025-01-13 15:03:18,477:INFO:Preloading libraries
2025-01-13 15:03:18,479:INFO:Set up data.
2025-01-13 15:03:18,482:INFO:Set up index.
2025-01-13 15:03:18,707:INFO:Initializing predict_model()
2025-01-13 15:03:18,708:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000227D5C2D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000227D5CC7740>)
2025-01-13 15:03:18,708:INFO:Checking exceptions
2025-01-13 15:03:18,708:INFO:Preloading libraries
2025-01-13 15:03:18,710:INFO:Set up data.
2025-01-13 15:03:18,712:INFO:Set up index.
2025-01-13 15:26:52,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 15:26:52,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 15:26:52,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 15:26:52,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-13 15:26:54,876:INFO:Initializing load_model()
2025-01-13 15:26:54,876:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:26:55,488:INFO:Initializing load_model()
2025-01-13 15:26:55,489:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:28:11,897:INFO:Initializing load_model()
2025-01-13 15:28:11,898:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:28:12,082:INFO:Initializing load_model()
2025-01-13 15:28:12,082:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:02,918:INFO:Initializing load_model()
2025-01-13 15:36:02,918:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:03,187:INFO:Initializing load_model()
2025-01-13 15:36:03,187:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:03,657:INFO:Initializing predict_model()
2025-01-13 15:36:03,657:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE1F9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C402C0>)
2025-01-13 15:36:03,657:INFO:Checking exceptions
2025-01-13 15:36:03,657:INFO:Preloading libraries
2025-01-13 15:36:03,659:INFO:Set up data.
2025-01-13 15:36:03,662:INFO:Set up index.
2025-01-13 15:36:13,846:INFO:Initializing load_model()
2025-01-13 15:36:13,848:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:14,024:INFO:Initializing load_model()
2025-01-13 15:36:14,024:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:14,865:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 15:36:14,882:INFO:Initializing predict_model()
2025-01-13 15:36:14,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E07FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E09260>)
2025-01-13 15:36:14,883:INFO:Checking exceptions
2025-01-13 15:36:14,883:INFO:Preloading libraries
2025-01-13 15:36:14,883:INFO:Set up data.
2025-01-13 15:36:14,885:INFO:Set up index.
2025-01-13 15:36:28,827:INFO:Initializing load_model()
2025-01-13 15:36:28,827:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:29,126:INFO:Initializing load_model()
2025-01-13 15:36:29,126:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:29,222:INFO:Initializing load_model()
2025-01-13 15:36:29,223:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:29,383:INFO:Initializing load_model()
2025-01-13 15:36:29,383:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:29,897:INFO:Initializing predict_model()
2025-01-13 15:36:29,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FDBC410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFB00>)
2025-01-13 15:36:29,897:INFO:Checking exceptions
2025-01-13 15:36:29,897:INFO:Preloading libraries
2025-01-13 15:36:29,898:INFO:Set up data.
2025-01-13 15:36:29,900:INFO:Set up index.
2025-01-13 15:36:36,331:INFO:Initializing load_model()
2025-01-13 15:36:36,332:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:36,626:INFO:Initializing load_model()
2025-01-13 15:36:36,626:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:36,849:INFO:Initializing predict_model()
2025-01-13 15:36:36,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C29768810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E08FE0>)
2025-01-13 15:36:36,849:INFO:Checking exceptions
2025-01-13 15:36:36,849:INFO:Preloading libraries
2025-01-13 15:36:36,849:INFO:Set up data.
2025-01-13 15:36:36,851:INFO:Set up index.
2025-01-13 15:36:40,152:INFO:Initializing load_model()
2025-01-13 15:36:40,152:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:40,334:INFO:Initializing load_model()
2025-01-13 15:36:40,334:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:40,567:INFO:Initializing predict_model()
2025-01-13 15:36:40,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F429D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E340>)
2025-01-13 15:36:40,567:INFO:Checking exceptions
2025-01-13 15:36:40,567:INFO:Preloading libraries
2025-01-13 15:36:40,567:INFO:Set up data.
2025-01-13 15:36:40,569:INFO:Set up index.
2025-01-13 15:36:41,333:INFO:Initializing load_model()
2025-01-13 15:36:41,333:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:41,524:INFO:Initializing load_model()
2025-01-13 15:36:41,524:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:36:41,762:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 15:36:41,781:INFO:Initializing predict_model()
2025-01-13 15:36:41,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EBDD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E08400>)
2025-01-13 15:36:41,782:INFO:Checking exceptions
2025-01-13 15:36:41,782:INFO:Preloading libraries
2025-01-13 15:36:41,782:INFO:Set up data.
2025-01-13 15:36:41,784:INFO:Set up index.
2025-01-13 15:38:15,905:INFO:Initializing load_model()
2025-01-13 15:38:15,906:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:38:16,083:INFO:Initializing load_model()
2025-01-13 15:38:16,083:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:38:16,375:INFO:Initializing predict_model()
2025-01-13 15:38:16,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F55C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E084A0>)
2025-01-13 15:38:16,375:INFO:Checking exceptions
2025-01-13 15:38:16,376:INFO:Preloading libraries
2025-01-13 15:38:16,376:INFO:Set up data.
2025-01-13 15:38:16,381:INFO:Set up index.
2025-01-13 15:38:20,648:INFO:Initializing load_model()
2025-01-13 15:38:20,649:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:38:20,824:INFO:Initializing load_model()
2025-01-13 15:38:20,824:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:38:21,079:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:205: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 15:38:21,100:INFO:Initializing predict_model()
2025-01-13 15:38:21,100:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EF8910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFC40>)
2025-01-13 15:38:21,100:INFO:Checking exceptions
2025-01-13 15:38:21,100:INFO:Preloading libraries
2025-01-13 15:38:21,101:INFO:Set up data.
2025-01-13 15:38:21,103:INFO:Set up index.
2025-01-13 15:43:06,933:INFO:Initializing load_model()
2025-01-13 15:43:06,934:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:43:07,126:INFO:Initializing load_model()
2025-01-13 15:43:07,126:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:43:07,339:INFO:Initializing predict_model()
2025-01-13 15:43:07,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FAF7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFC40>)
2025-01-13 15:43:07,339:INFO:Checking exceptions
2025-01-13 15:43:07,340:INFO:Preloading libraries
2025-01-13 15:43:07,340:INFO:Set up data.
2025-01-13 15:43:07,342:INFO:Set up index.
2025-01-13 15:53:15,924:INFO:Initializing load_model()
2025-01-13 15:53:15,925:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:16,161:INFO:Initializing load_model()
2025-01-13 15:53:16,161:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:16,405:INFO:Initializing predict_model()
2025-01-13 15:53:16,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EC3FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2D080>)
2025-01-13 15:53:16,405:INFO:Checking exceptions
2025-01-13 15:53:16,405:INFO:Preloading libraries
2025-01-13 15:53:16,406:INFO:Set up data.
2025-01-13 15:53:16,408:INFO:Set up index.
2025-01-13 15:53:16,589:INFO:Initializing predict_model()
2025-01-13 15:53:16,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67DF9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 15:53:16,590:INFO:Checking exceptions
2025-01-13 15:53:16,590:INFO:Preloading libraries
2025-01-13 15:53:16,590:INFO:Set up data.
2025-01-13 15:53:16,592:INFO:Set up index.
2025-01-13 15:53:33,398:INFO:Initializing load_model()
2025-01-13 15:53:33,398:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:33,574:INFO:Initializing load_model()
2025-01-13 15:53:33,574:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:33,789:INFO:Initializing predict_model()
2025-01-13 15:53:33,789:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE4E790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CCC0>)
2025-01-13 15:53:33,790:INFO:Checking exceptions
2025-01-13 15:53:33,790:INFO:Preloading libraries
2025-01-13 15:53:33,790:INFO:Set up data.
2025-01-13 15:53:33,794:INFO:Set up index.
2025-01-13 15:53:33,960:INFO:Initializing predict_model()
2025-01-13 15:53:33,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EF20090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 15:53:33,961:INFO:Checking exceptions
2025-01-13 15:53:33,962:INFO:Preloading libraries
2025-01-13 15:53:33,962:INFO:Set up data.
2025-01-13 15:53:33,964:INFO:Set up index.
2025-01-13 15:53:36,659:INFO:Initializing load_model()
2025-01-13 15:53:36,659:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:36,835:INFO:Initializing load_model()
2025-01-13 15:53:36,835:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:37,038:INFO:Initializing predict_model()
2025-01-13 15:53:37,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E06810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CCC0>)
2025-01-13 15:53:37,039:INFO:Checking exceptions
2025-01-13 15:53:37,039:INFO:Preloading libraries
2025-01-13 15:53:37,039:INFO:Set up data.
2025-01-13 15:53:37,041:INFO:Set up index.
2025-01-13 15:53:37,204:INFO:Initializing predict_model()
2025-01-13 15:53:37,204:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D93F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 15:53:37,204:INFO:Checking exceptions
2025-01-13 15:53:37,204:INFO:Preloading libraries
2025-01-13 15:53:37,205:INFO:Set up data.
2025-01-13 15:53:37,206:INFO:Set up index.
2025-01-13 15:53:39,630:INFO:Initializing load_model()
2025-01-13 15:53:39,630:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:39,823:INFO:Initializing load_model()
2025-01-13 15:53:39,823:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:40,030:INFO:Initializing predict_model()
2025-01-13 15:53:40,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECD790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C9A0>)
2025-01-13 15:53:40,031:INFO:Checking exceptions
2025-01-13 15:53:40,031:INFO:Preloading libraries
2025-01-13 15:53:40,031:INFO:Set up data.
2025-01-13 15:53:40,033:INFO:Set up index.
2025-01-13 15:53:40,184:INFO:Initializing predict_model()
2025-01-13 15:53:40,184:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C764FB590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C9A0>)
2025-01-13 15:53:40,184:INFO:Checking exceptions
2025-01-13 15:53:40,184:INFO:Preloading libraries
2025-01-13 15:53:40,184:INFO:Set up data.
2025-01-13 15:53:40,186:INFO:Set up index.
2025-01-13 15:53:43,314:INFO:Initializing load_model()
2025-01-13 15:53:43,314:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:43,451:INFO:Initializing load_model()
2025-01-13 15:53:43,451:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:43,647:INFO:Initializing predict_model()
2025-01-13 15:53:43,647:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E04C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47E20>)
2025-01-13 15:53:43,647:INFO:Checking exceptions
2025-01-13 15:53:43,647:INFO:Preloading libraries
2025-01-13 15:53:43,647:INFO:Set up data.
2025-01-13 15:53:43,649:INFO:Set up index.
2025-01-13 15:53:43,799:INFO:Initializing predict_model()
2025-01-13 15:53:43,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76A97210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 15:53:43,800:INFO:Checking exceptions
2025-01-13 15:53:43,800:INFO:Preloading libraries
2025-01-13 15:53:43,800:INFO:Set up data.
2025-01-13 15:53:43,802:INFO:Set up index.
2025-01-13 15:53:46,129:INFO:Initializing load_model()
2025-01-13 15:53:46,130:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:46,265:INFO:Initializing load_model()
2025-01-13 15:53:46,265:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:46,460:INFO:Initializing predict_model()
2025-01-13 15:53:46,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E481D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E09300>)
2025-01-13 15:53:46,461:INFO:Checking exceptions
2025-01-13 15:53:46,461:INFO:Preloading libraries
2025-01-13 15:53:46,461:INFO:Set up data.
2025-01-13 15:53:46,463:INFO:Set up index.
2025-01-13 15:53:46,614:INFO:Initializing predict_model()
2025-01-13 15:53:46,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFF60>)
2025-01-13 15:53:46,614:INFO:Checking exceptions
2025-01-13 15:53:46,614:INFO:Preloading libraries
2025-01-13 15:53:46,615:INFO:Set up data.
2025-01-13 15:53:46,616:INFO:Set up index.
2025-01-13 15:53:48,676:INFO:Initializing load_model()
2025-01-13 15:53:48,677:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:48,810:INFO:Initializing load_model()
2025-01-13 15:53:48,810:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:49,007:INFO:Initializing predict_model()
2025-01-13 15:53:49,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EA7190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40220>)
2025-01-13 15:53:49,007:INFO:Checking exceptions
2025-01-13 15:53:49,007:INFO:Preloading libraries
2025-01-13 15:53:49,007:INFO:Set up data.
2025-01-13 15:53:49,010:INFO:Set up index.
2025-01-13 15:53:49,182:INFO:Initializing predict_model()
2025-01-13 15:53:49,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76907290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 15:53:49,182:INFO:Checking exceptions
2025-01-13 15:53:49,182:INFO:Preloading libraries
2025-01-13 15:53:49,182:INFO:Set up data.
2025-01-13 15:53:49,184:INFO:Set up index.
2025-01-13 15:53:49,654:INFO:Initializing load_model()
2025-01-13 15:53:49,655:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:49,834:INFO:Initializing load_model()
2025-01-13 15:53:49,834:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:50,038:INFO:Initializing predict_model()
2025-01-13 15:53:50,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E59890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E2A0>)
2025-01-13 15:53:50,038:INFO:Checking exceptions
2025-01-13 15:53:50,038:INFO:Preloading libraries
2025-01-13 15:53:50,038:INFO:Set up data.
2025-01-13 15:53:50,040:INFO:Set up index.
2025-01-13 15:53:50,191:INFO:Initializing predict_model()
2025-01-13 15:53:50,191:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B5CBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 15:53:50,192:INFO:Initializing load_model()
2025-01-13 15:53:50,192:INFO:Checking exceptions
2025-01-13 15:53:50,193:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:50,193:INFO:Preloading libraries
2025-01-13 15:53:50,194:INFO:Set up data.
2025-01-13 15:53:50,196:INFO:Set up index.
2025-01-13 15:53:50,564:INFO:Initializing load_model()
2025-01-13 15:53:50,564:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:50,653:INFO:Initializing load_model()
2025-01-13 15:53:50,653:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:50,970:INFO:Initializing load_model()
2025-01-13 15:53:50,970:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:51,157:INFO:Initializing predict_model()
2025-01-13 15:53:51,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E5B210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 15:53:51,157:INFO:Checking exceptions
2025-01-13 15:53:51,157:INFO:Preloading libraries
2025-01-13 15:53:51,158:INFO:Set up data.
2025-01-13 15:53:51,159:INFO:Set up index.
2025-01-13 15:53:51,311:INFO:Initializing predict_model()
2025-01-13 15:53:51,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EF0ABD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C7C0>)
2025-01-13 15:53:51,311:INFO:Checking exceptions
2025-01-13 15:53:51,311:INFO:Preloading libraries
2025-01-13 15:53:51,312:INFO:Set up data.
2025-01-13 15:53:51,313:INFO:Set up index.
2025-01-13 15:53:53,127:INFO:Initializing load_model()
2025-01-13 15:53:53,128:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:53,261:INFO:Initializing load_model()
2025-01-13 15:53:53,262:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:53,454:INFO:Initializing predict_model()
2025-01-13 15:53:53,454:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E14B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA07C0>)
2025-01-13 15:53:53,454:INFO:Checking exceptions
2025-01-13 15:53:53,454:INFO:Preloading libraries
2025-01-13 15:53:53,455:INFO:Set up data.
2025-01-13 15:53:53,457:INFO:Set up index.
2025-01-13 15:53:53,609:INFO:Initializing predict_model()
2025-01-13 15:53:53,609:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 15:53:53,609:INFO:Checking exceptions
2025-01-13 15:53:53,609:INFO:Preloading libraries
2025-01-13 15:53:53,610:INFO:Set up data.
2025-01-13 15:53:53,611:INFO:Set up index.
2025-01-13 15:53:56,010:INFO:Initializing load_model()
2025-01-13 15:53:56,010:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:56,145:INFO:Initializing load_model()
2025-01-13 15:53:56,146:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:56,347:INFO:Initializing predict_model()
2025-01-13 15:53:56,347:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E59D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CCC0>)
2025-01-13 15:53:56,348:INFO:Checking exceptions
2025-01-13 15:53:56,348:INFO:Preloading libraries
2025-01-13 15:53:56,348:INFO:Set up data.
2025-01-13 15:53:56,350:INFO:Set up index.
2025-01-13 15:53:56,511:INFO:Initializing predict_model()
2025-01-13 15:53:56,511:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FA3B950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 15:53:56,513:INFO:Checking exceptions
2025-01-13 15:53:56,513:INFO:Preloading libraries
2025-01-13 15:53:56,513:INFO:Set up data.
2025-01-13 15:53:56,514:INFO:Set up index.
2025-01-13 15:53:59,060:INFO:Initializing load_model()
2025-01-13 15:53:59,061:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:59,193:INFO:Initializing load_model()
2025-01-13 15:53:59,193:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:53:59,392:INFO:Initializing predict_model()
2025-01-13 15:53:59,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EDFAA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 15:53:59,392:INFO:Checking exceptions
2025-01-13 15:53:59,392:INFO:Preloading libraries
2025-01-13 15:53:59,393:INFO:Set up data.
2025-01-13 15:53:59,395:INFO:Set up index.
2025-01-13 15:53:59,545:INFO:Initializing predict_model()
2025-01-13 15:53:59,545:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67EB2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 15:53:59,546:INFO:Checking exceptions
2025-01-13 15:53:59,546:INFO:Preloading libraries
2025-01-13 15:53:59,547:INFO:Set up data.
2025-01-13 15:53:59,549:INFO:Set up index.
2025-01-13 15:54:01,832:INFO:Initializing load_model()
2025-01-13 15:54:01,833:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:54:01,967:INFO:Initializing load_model()
2025-01-13 15:54:01,967:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:54:02,167:INFO:Initializing predict_model()
2025-01-13 15:54:02,167:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E41A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFEC0>)
2025-01-13 15:54:02,167:INFO:Checking exceptions
2025-01-13 15:54:02,167:INFO:Preloading libraries
2025-01-13 15:54:02,167:INFO:Set up data.
2025-01-13 15:54:02,169:INFO:Set up index.
2025-01-13 15:54:02,318:INFO:Initializing predict_model()
2025-01-13 15:54:02,318:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76AF5390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 15:54:02,318:INFO:Checking exceptions
2025-01-13 15:54:02,318:INFO:Preloading libraries
2025-01-13 15:54:02,318:INFO:Set up data.
2025-01-13 15:54:02,320:INFO:Set up index.
2025-01-13 15:54:05,215:INFO:Initializing load_model()
2025-01-13 15:54:05,215:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:54:05,347:INFO:Initializing load_model()
2025-01-13 15:54:05,347:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:54:05,550:INFO:Initializing predict_model()
2025-01-13 15:54:05,550:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE202D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0FE0>)
2025-01-13 15:54:05,550:INFO:Checking exceptions
2025-01-13 15:54:05,550:INFO:Preloading libraries
2025-01-13 15:54:05,551:INFO:Set up data.
2025-01-13 15:54:05,552:INFO:Set up index.
2025-01-13 15:54:05,720:INFO:Initializing predict_model()
2025-01-13 15:54:05,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C69917090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 15:54:05,720:INFO:Checking exceptions
2025-01-13 15:54:05,721:INFO:Preloading libraries
2025-01-13 15:54:05,721:INFO:Set up data.
2025-01-13 15:54:05,723:INFO:Set up index.
2025-01-13 15:55:20,847:INFO:Initializing load_model()
2025-01-13 15:55:20,848:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:55:21,039:INFO:Initializing load_model()
2025-01-13 15:55:21,039:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:55:21,243:INFO:Initializing predict_model()
2025-01-13 15:55:21,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E50F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46340>)
2025-01-13 15:55:21,243:INFO:Checking exceptions
2025-01-13 15:55:21,243:INFO:Preloading libraries
2025-01-13 15:55:21,244:INFO:Set up data.
2025-01-13 15:55:21,246:INFO:Set up index.
2025-01-13 15:55:21,396:INFO:Initializing predict_model()
2025-01-13 15:55:21,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66998E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 15:55:21,397:INFO:Checking exceptions
2025-01-13 15:55:21,397:INFO:Preloading libraries
2025-01-13 15:55:21,397:INFO:Set up data.
2025-01-13 15:55:21,399:INFO:Set up index.
2025-01-13 15:57:12,937:INFO:Initializing load_model()
2025-01-13 15:57:12,937:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:57:13,090:INFO:Initializing load_model()
2025-01-13 15:57:13,090:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:57:13,292:INFO:Initializing predict_model()
2025-01-13 15:57:13,292:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE20910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 15:57:13,292:INFO:Checking exceptions
2025-01-13 15:57:13,292:INFO:Preloading libraries
2025-01-13 15:57:13,292:INFO:Set up data.
2025-01-13 15:57:13,294:INFO:Set up index.
2025-01-13 15:57:13,445:INFO:Initializing predict_model()
2025-01-13 15:57:13,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0ED3C4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 15:57:13,445:INFO:Checking exceptions
2025-01-13 15:57:13,445:INFO:Preloading libraries
2025-01-13 15:57:13,446:INFO:Set up data.
2025-01-13 15:57:13,447:INFO:Set up index.
2025-01-13 15:57:29,973:INFO:Initializing load_model()
2025-01-13 15:57:29,973:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:57:30,125:INFO:Initializing load_model()
2025-01-13 15:57:30,125:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:57:30,323:INFO:Initializing predict_model()
2025-01-13 15:57:30,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E511D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 15:57:30,323:INFO:Checking exceptions
2025-01-13 15:57:30,324:INFO:Preloading libraries
2025-01-13 15:57:30,324:INFO:Set up data.
2025-01-13 15:57:30,326:INFO:Set up index.
2025-01-13 15:57:30,477:INFO:Initializing predict_model()
2025-01-13 15:57:30,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76AF5390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 15:57:30,478:INFO:Checking exceptions
2025-01-13 15:57:30,478:INFO:Preloading libraries
2025-01-13 15:57:30,479:INFO:Set up data.
2025-01-13 15:57:30,480:INFO:Set up index.
2025-01-13 15:58:30,102:INFO:Initializing load_model()
2025-01-13 15:58:30,102:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:58:30,239:INFO:Initializing load_model()
2025-01-13 15:58:30,239:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:58:30,438:INFO:Initializing predict_model()
2025-01-13 15:58:30,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EA7310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47E20>)
2025-01-13 15:58:30,438:INFO:Checking exceptions
2025-01-13 15:58:30,439:INFO:Preloading libraries
2025-01-13 15:58:30,439:INFO:Set up data.
2025-01-13 15:58:30,441:INFO:Set up index.
2025-01-13 15:58:30,594:INFO:Initializing predict_model()
2025-01-13 15:58:30,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67DF9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 15:58:30,595:INFO:Checking exceptions
2025-01-13 15:58:30,595:INFO:Preloading libraries
2025-01-13 15:58:30,596:INFO:Set up data.
2025-01-13 15:58:30,598:INFO:Set up index.
2025-01-13 15:58:50,039:INFO:Initializing load_model()
2025-01-13 15:58:50,040:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:58:50,174:INFO:Initializing load_model()
2025-01-13 15:58:50,174:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 15:58:50,408:INFO:Initializing predict_model()
2025-01-13 15:58:50,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE50A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40220>)
2025-01-13 15:58:50,409:INFO:Checking exceptions
2025-01-13 15:58:50,409:INFO:Preloading libraries
2025-01-13 15:58:50,409:INFO:Set up data.
2025-01-13 15:58:50,411:INFO:Set up index.
2025-01-13 15:58:50,559:INFO:Initializing predict_model()
2025-01-13 15:58:50,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6ACB0910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 15:58:50,559:INFO:Checking exceptions
2025-01-13 15:58:50,559:INFO:Preloading libraries
2025-01-13 15:58:50,560:INFO:Set up data.
2025-01-13 15:58:50,562:INFO:Set up index.
2025-01-13 16:00:36,132:INFO:Initializing load_model()
2025-01-13 16:00:36,132:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:00:36,262:INFO:Initializing load_model()
2025-01-13 16:00:36,263:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:00:36,460:INFO:Initializing predict_model()
2025-01-13 16:00:36,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EDF8850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E2A0>)
2025-01-13 16:00:36,461:INFO:Checking exceptions
2025-01-13 16:00:36,461:INFO:Preloading libraries
2025-01-13 16:00:36,461:INFO:Set up data.
2025-01-13 16:00:36,466:INFO:Set up index.
2025-01-13 16:00:36,636:INFO:Initializing predict_model()
2025-01-13 16:00:36,636:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66998E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:00:36,636:INFO:Checking exceptions
2025-01-13 16:00:36,636:INFO:Preloading libraries
2025-01-13 16:00:36,637:INFO:Set up data.
2025-01-13 16:00:36,638:INFO:Set up index.
2025-01-13 16:01:45,804:INFO:Initializing load_model()
2025-01-13 16:01:45,804:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:01:45,943:INFO:Initializing load_model()
2025-01-13 16:01:45,944:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:01:46,147:INFO:Initializing predict_model()
2025-01-13 16:01:46,148:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E51990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:01:46,148:INFO:Checking exceptions
2025-01-13 16:01:46,148:INFO:Preloading libraries
2025-01-13 16:01:46,148:INFO:Set up data.
2025-01-13 16:01:46,151:INFO:Set up index.
2025-01-13 16:01:46,323:INFO:Initializing predict_model()
2025-01-13 16:01:46,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BF3A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:01:46,323:INFO:Checking exceptions
2025-01-13 16:01:46,323:INFO:Preloading libraries
2025-01-13 16:01:46,324:INFO:Set up data.
2025-01-13 16:01:46,325:INFO:Set up index.
2025-01-13 16:02:07,183:INFO:Initializing load_model()
2025-01-13 16:02:07,184:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:07,319:INFO:Initializing load_model()
2025-01-13 16:02:07,319:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:07,390:INFO:Initializing load_model()
2025-01-13 16:02:07,390:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:07,710:INFO:Initializing load_model()
2025-01-13 16:02:07,710:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:07,900:INFO:Initializing predict_model()
2025-01-13 16:02:07,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E4DA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFEC0>)
2025-01-13 16:02:07,900:INFO:Checking exceptions
2025-01-13 16:02:07,900:INFO:Preloading libraries
2025-01-13 16:02:07,901:INFO:Set up data.
2025-01-13 16:02:07,902:INFO:Set up index.
2025-01-13 16:02:08,056:INFO:Initializing predict_model()
2025-01-13 16:02:08,056:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE6DB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFEC0>)
2025-01-13 16:02:08,057:INFO:Checking exceptions
2025-01-13 16:02:08,057:INFO:Preloading libraries
2025-01-13 16:02:08,057:INFO:Set up data.
2025-01-13 16:02:08,059:INFO:Set up index.
2025-01-13 16:02:08,064:INFO:Initializing load_model()
2025-01-13 16:02:08,065:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:08,441:INFO:Initializing load_model()
2025-01-13 16:02:08,441:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:08,634:INFO:Initializing predict_model()
2025-01-13 16:02:08,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECD1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47E20>)
2025-01-13 16:02:08,634:INFO:Checking exceptions
2025-01-13 16:02:08,634:INFO:Preloading libraries
2025-01-13 16:02:08,634:INFO:Set up data.
2025-01-13 16:02:08,637:INFO:Set up index.
2025-01-13 16:02:08,793:INFO:Initializing predict_model()
2025-01-13 16:02:08,793:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BD7610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:02:08,793:INFO:Checking exceptions
2025-01-13 16:02:08,793:INFO:Preloading libraries
2025-01-13 16:02:08,794:INFO:Set up data.
2025-01-13 16:02:08,795:INFO:Set up index.
2025-01-13 16:02:11,342:INFO:Initializing load_model()
2025-01-13 16:02:11,342:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:11,475:INFO:Initializing load_model()
2025-01-13 16:02:11,475:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:11,674:INFO:Initializing predict_model()
2025-01-13 16:02:11,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E4C790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E087C0>)
2025-01-13 16:02:11,674:INFO:Checking exceptions
2025-01-13 16:02:11,674:INFO:Preloading libraries
2025-01-13 16:02:11,675:INFO:Set up data.
2025-01-13 16:02:11,676:INFO:Set up index.
2025-01-13 16:02:11,838:INFO:Initializing predict_model()
2025-01-13 16:02:11,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EF20C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C9A0>)
2025-01-13 16:02:11,838:INFO:Checking exceptions
2025-01-13 16:02:11,838:INFO:Preloading libraries
2025-01-13 16:02:11,838:INFO:Set up data.
2025-01-13 16:02:11,840:INFO:Set up index.
2025-01-13 16:02:14,580:INFO:Initializing load_model()
2025-01-13 16:02:14,581:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:14,711:INFO:Initializing load_model()
2025-01-13 16:02:14,711:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:14,901:INFO:Initializing predict_model()
2025-01-13 16:02:14,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E451D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E08040>)
2025-01-13 16:02:14,902:INFO:Checking exceptions
2025-01-13 16:02:14,902:INFO:Preloading libraries
2025-01-13 16:02:14,902:INFO:Set up data.
2025-01-13 16:02:14,905:INFO:Set up index.
2025-01-13 16:02:15,053:INFO:Initializing predict_model()
2025-01-13 16:02:15,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0ED3C4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C7C0>)
2025-01-13 16:02:15,054:INFO:Checking exceptions
2025-01-13 16:02:15,054:INFO:Preloading libraries
2025-01-13 16:02:15,054:INFO:Set up data.
2025-01-13 16:02:15,056:INFO:Set up index.
2025-01-13 16:02:15,193:INFO:Initializing load_model()
2025-01-13 16:02:15,194:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:15,383:INFO:Initializing load_model()
2025-01-13 16:02:15,384:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:15,480:INFO:Initializing load_model()
2025-01-13 16:02:15,480:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:15,610:INFO:Initializing load_model()
2025-01-13 16:02:15,610:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:15,964:INFO:Initializing predict_model()
2025-01-13 16:02:15,964:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F55810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0FE0>)
2025-01-13 16:02:15,964:INFO:Checking exceptions
2025-01-13 16:02:15,965:INFO:Preloading libraries
2025-01-13 16:02:15,965:INFO:Set up data.
2025-01-13 16:02:15,967:INFO:Set up index.
2025-01-13 16:02:16,145:INFO:Initializing predict_model()
2025-01-13 16:02:16,145:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB6EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40680>)
2025-01-13 16:02:16,145:INFO:Checking exceptions
2025-01-13 16:02:16,145:INFO:Preloading libraries
2025-01-13 16:02:16,145:INFO:Set up data.
2025-01-13 16:02:16,147:INFO:Set up index.
2025-01-13 16:02:18,387:INFO:Initializing load_model()
2025-01-13 16:02:18,387:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:18,552:INFO:Initializing load_model()
2025-01-13 16:02:18,552:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:18,755:INFO:Initializing predict_model()
2025-01-13 16:02:18,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE1D750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47E20>)
2025-01-13 16:02:18,755:INFO:Checking exceptions
2025-01-13 16:02:18,756:INFO:Preloading libraries
2025-01-13 16:02:18,756:INFO:Set up data.
2025-01-13 16:02:18,758:INFO:Set up index.
2025-01-13 16:02:18,926:INFO:Initializing predict_model()
2025-01-13 16:02:18,926:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7664AF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C7C0>)
2025-01-13 16:02:18,927:INFO:Checking exceptions
2025-01-13 16:02:18,927:INFO:Preloading libraries
2025-01-13 16:02:18,927:INFO:Set up data.
2025-01-13 16:02:18,929:INFO:Set up index.
2025-01-13 16:02:21,782:INFO:Initializing load_model()
2025-01-13 16:02:21,782:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:21,918:INFO:Initializing load_model()
2025-01-13 16:02:21,918:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:02:22,128:INFO:Initializing predict_model()
2025-01-13 16:02:22,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F15850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 16:02:22,128:INFO:Checking exceptions
2025-01-13 16:02:22,128:INFO:Preloading libraries
2025-01-13 16:02:22,128:INFO:Set up data.
2025-01-13 16:02:22,130:INFO:Set up index.
2025-01-13 16:02:22,284:INFO:Initializing predict_model()
2025-01-13 16:02:22,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFCE0>)
2025-01-13 16:02:22,284:INFO:Checking exceptions
2025-01-13 16:02:22,284:INFO:Preloading libraries
2025-01-13 16:02:22,284:INFO:Set up data.
2025-01-13 16:02:22,286:INFO:Set up index.
2025-01-13 16:03:37,304:INFO:Initializing load_model()
2025-01-13 16:03:37,305:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:03:37,441:INFO:Initializing load_model()
2025-01-13 16:03:37,442:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:03:37,636:INFO:Initializing predict_model()
2025-01-13 16:03:37,636:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EF74D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:03:37,637:INFO:Checking exceptions
2025-01-13 16:03:37,637:INFO:Preloading libraries
2025-01-13 16:03:37,637:INFO:Set up data.
2025-01-13 16:03:37,640:INFO:Set up index.
2025-01-13 16:03:37,790:INFO:Initializing predict_model()
2025-01-13 16:03:37,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66998E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:03:37,791:INFO:Checking exceptions
2025-01-13 16:03:37,791:INFO:Preloading libraries
2025-01-13 16:03:37,791:INFO:Set up data.
2025-01-13 16:03:37,793:INFO:Set up index.
2025-01-13 16:03:59,983:INFO:Initializing load_model()
2025-01-13 16:03:59,983:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:00,123:INFO:Initializing load_model()
2025-01-13 16:04:00,123:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:00,325:INFO:Initializing predict_model()
2025-01-13 16:04:00,327:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F166D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47E20>)
2025-01-13 16:04:00,327:INFO:Checking exceptions
2025-01-13 16:04:00,327:INFO:Preloading libraries
2025-01-13 16:04:00,328:INFO:Set up data.
2025-01-13 16:04:00,330:INFO:Set up index.
2025-01-13 16:04:00,476:INFO:Initializing predict_model()
2025-01-13 16:04:00,476:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C68811F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 16:04:00,476:INFO:Checking exceptions
2025-01-13 16:04:00,476:INFO:Preloading libraries
2025-01-13 16:04:00,476:INFO:Set up data.
2025-01-13 16:04:00,478:INFO:Set up index.
2025-01-13 16:04:12,384:INFO:Initializing load_model()
2025-01-13 16:04:12,384:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:12,518:INFO:Initializing load_model()
2025-01-13 16:04:12,518:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:12,710:INFO:Initializing predict_model()
2025-01-13 16:04:12,710:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F357D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:04:12,711:INFO:Checking exceptions
2025-01-13 16:04:12,711:INFO:Preloading libraries
2025-01-13 16:04:12,711:INFO:Set up data.
2025-01-13 16:04:12,713:INFO:Set up index.
2025-01-13 16:04:12,930:INFO:Initializing predict_model()
2025-01-13 16:04:12,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76648FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 16:04:12,930:INFO:Checking exceptions
2025-01-13 16:04:12,930:INFO:Preloading libraries
2025-01-13 16:04:12,930:INFO:Set up data.
2025-01-13 16:04:12,932:INFO:Set up index.
2025-01-13 16:04:32,905:INFO:Initializing load_model()
2025-01-13 16:04:32,906:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:33,050:INFO:Initializing load_model()
2025-01-13 16:04:33,050:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:04:33,244:INFO:Initializing predict_model()
2025-01-13 16:04:33,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F55490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2C9A0>)
2025-01-13 16:04:33,244:INFO:Checking exceptions
2025-01-13 16:04:33,244:INFO:Preloading libraries
2025-01-13 16:04:33,244:INFO:Set up data.
2025-01-13 16:04:33,246:INFO:Set up index.
2025-01-13 16:04:33,394:INFO:Initializing predict_model()
2025-01-13 16:04:33,395:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76648FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 16:04:33,395:INFO:Checking exceptions
2025-01-13 16:04:33,395:INFO:Preloading libraries
2025-01-13 16:04:33,396:INFO:Set up data.
2025-01-13 16:04:33,398:INFO:Set up index.
2025-01-13 16:04:59,837:INFO:Initializing load_model()
2025-01-13 16:04:59,838:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:05:00,026:INFO:Initializing load_model()
2025-01-13 16:05:00,026:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:05:00,260:INFO:Initializing predict_model()
2025-01-13 16:05:00,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FBB6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46E80>)
2025-01-13 16:05:00,261:INFO:Checking exceptions
2025-01-13 16:05:00,261:INFO:Preloading libraries
2025-01-13 16:05:00,262:INFO:Set up data.
2025-01-13 16:05:00,264:INFO:Set up index.
2025-01-13 16:05:00,413:INFO:Initializing predict_model()
2025-01-13 16:05:00,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C691D8910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:05:00,414:INFO:Checking exceptions
2025-01-13 16:05:00,414:INFO:Preloading libraries
2025-01-13 16:05:00,414:INFO:Set up data.
2025-01-13 16:05:00,416:INFO:Set up index.
2025-01-13 16:05:35,621:INFO:Initializing load_model()
2025-01-13 16:05:35,621:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:05:35,770:INFO:Initializing load_model()
2025-01-13 16:05:35,770:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:05:35,978:INFO:Initializing predict_model()
2025-01-13 16:05:35,979:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE22C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEF2E0>)
2025-01-13 16:05:35,979:INFO:Checking exceptions
2025-01-13 16:05:35,979:INFO:Preloading libraries
2025-01-13 16:05:35,980:INFO:Set up data.
2025-01-13 16:05:35,982:INFO:Set up index.
2025-01-13 16:05:36,152:INFO:Initializing predict_model()
2025-01-13 16:05:36,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7664AF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 16:05:36,153:INFO:Checking exceptions
2025-01-13 16:05:36,153:INFO:Preloading libraries
2025-01-13 16:05:36,153:INFO:Set up data.
2025-01-13 16:05:36,155:INFO:Set up index.
2025-01-13 16:06:52,935:INFO:Initializing load_model()
2025-01-13 16:06:52,935:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:06:53,072:INFO:Initializing load_model()
2025-01-13 16:06:53,072:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:06:53,276:INFO:Initializing predict_model()
2025-01-13 16:06:53,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E46C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:06:53,276:INFO:Checking exceptions
2025-01-13 16:06:53,277:INFO:Preloading libraries
2025-01-13 16:06:53,277:INFO:Set up data.
2025-01-13 16:06:53,279:INFO:Set up index.
2025-01-13 16:06:53,429:INFO:Initializing predict_model()
2025-01-13 16:06:53,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FAED150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:06:53,429:INFO:Checking exceptions
2025-01-13 16:06:53,429:INFO:Preloading libraries
2025-01-13 16:06:53,430:INFO:Set up data.
2025-01-13 16:06:53,431:INFO:Set up index.
2025-01-13 16:17:52,347:INFO:Initializing load_model()
2025-01-13 16:17:52,348:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:52,496:INFO:Initializing load_model()
2025-01-13 16:17:52,496:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:52,708:INFO:Initializing predict_model()
2025-01-13 16:17:52,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE569D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0FE0>)
2025-01-13 16:17:52,708:INFO:Checking exceptions
2025-01-13 16:17:52,708:INFO:Preloading libraries
2025-01-13 16:17:52,709:INFO:Set up data.
2025-01-13 16:17:52,710:INFO:Set up index.
2025-01-13 16:17:52,888:INFO:Initializing predict_model()
2025-01-13 16:17:52,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB71B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 16:17:52,888:INFO:Checking exceptions
2025-01-13 16:17:52,888:INFO:Preloading libraries
2025-01-13 16:17:52,889:INFO:Set up data.
2025-01-13 16:17:52,890:INFO:Set up index.
2025-01-13 16:17:55,276:INFO:Initializing load_model()
2025-01-13 16:17:55,277:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:55,419:INFO:Initializing load_model()
2025-01-13 16:17:55,420:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:55,612:INFO:Initializing predict_model()
2025-01-13 16:17:55,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE1FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEF920>)
2025-01-13 16:17:55,613:INFO:Checking exceptions
2025-01-13 16:17:55,613:INFO:Preloading libraries
2025-01-13 16:17:55,613:INFO:Set up data.
2025-01-13 16:17:55,615:INFO:Set up index.
2025-01-13 16:17:55,770:INFO:Initializing predict_model()
2025-01-13 16:17:55,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0ED3C4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:17:55,770:INFO:Checking exceptions
2025-01-13 16:17:55,770:INFO:Preloading libraries
2025-01-13 16:17:55,770:INFO:Set up data.
2025-01-13 16:17:55,772:INFO:Set up index.
2025-01-13 16:17:58,963:INFO:Initializing load_model()
2025-01-13 16:17:58,964:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:59,102:INFO:Initializing load_model()
2025-01-13 16:17:59,102:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:17:59,291:INFO:Initializing predict_model()
2025-01-13 16:17:59,291:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E07090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 16:17:59,291:INFO:Checking exceptions
2025-01-13 16:17:59,291:INFO:Preloading libraries
2025-01-13 16:17:59,292:INFO:Set up data.
2025-01-13 16:17:59,294:INFO:Set up index.
2025-01-13 16:17:59,442:INFO:Initializing predict_model()
2025-01-13 16:17:59,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B12290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 16:17:59,442:INFO:Checking exceptions
2025-01-13 16:17:59,442:INFO:Preloading libraries
2025-01-13 16:17:59,443:INFO:Set up data.
2025-01-13 16:17:59,444:INFO:Set up index.
2025-01-13 16:18:04,403:INFO:Initializing load_model()
2025-01-13 16:18:04,403:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:04,543:INFO:Initializing load_model()
2025-01-13 16:18:04,543:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:04,736:INFO:Initializing predict_model()
2025-01-13 16:18:04,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E59E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46E80>)
2025-01-13 16:18:04,737:INFO:Checking exceptions
2025-01-13 16:18:04,737:INFO:Preloading libraries
2025-01-13 16:18:04,737:INFO:Set up data.
2025-01-13 16:18:04,739:INFO:Set up index.
2025-01-13 16:18:04,891:INFO:Initializing predict_model()
2025-01-13 16:18:04,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B5E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42F20>)
2025-01-13 16:18:04,891:INFO:Checking exceptions
2025-01-13 16:18:04,891:INFO:Preloading libraries
2025-01-13 16:18:04,892:INFO:Set up data.
2025-01-13 16:18:04,893:INFO:Set up index.
2025-01-13 16:18:07,528:INFO:Initializing load_model()
2025-01-13 16:18:07,528:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:07,667:INFO:Initializing load_model()
2025-01-13 16:18:07,667:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:07,853:INFO:Initializing predict_model()
2025-01-13 16:18:07,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E07150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E09A80>)
2025-01-13 16:18:07,853:INFO:Checking exceptions
2025-01-13 16:18:07,853:INFO:Preloading libraries
2025-01-13 16:18:07,854:INFO:Set up data.
2025-01-13 16:18:07,856:INFO:Set up index.
2025-01-13 16:18:08,004:INFO:Initializing predict_model()
2025-01-13 16:18:08,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA07C0>)
2025-01-13 16:18:08,005:INFO:Checking exceptions
2025-01-13 16:18:08,005:INFO:Preloading libraries
2025-01-13 16:18:08,005:INFO:Set up data.
2025-01-13 16:18:08,007:INFO:Set up index.
2025-01-13 16:18:18,173:INFO:Initializing load_model()
2025-01-13 16:18:18,173:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:18,313:INFO:Initializing load_model()
2025-01-13 16:18:18,313:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:18,522:INFO:Initializing predict_model()
2025-01-13 16:18:18,522:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E59FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 16:18:18,522:INFO:Checking exceptions
2025-01-13 16:18:18,523:INFO:Preloading libraries
2025-01-13 16:18:18,523:INFO:Set up data.
2025-01-13 16:18:18,527:INFO:Set up index.
2025-01-13 16:18:18,700:INFO:Initializing predict_model()
2025-01-13 16:18:18,700:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C669E9F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 16:18:18,701:INFO:Checking exceptions
2025-01-13 16:18:18,701:INFO:Preloading libraries
2025-01-13 16:18:18,701:INFO:Set up data.
2025-01-13 16:18:18,703:INFO:Set up index.
2025-01-13 16:18:21,969:INFO:Initializing load_model()
2025-01-13 16:18:21,969:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:22,105:INFO:Initializing load_model()
2025-01-13 16:18:22,106:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:22,314:INFO:Initializing predict_model()
2025-01-13 16:18:22,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E29A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 16:18:22,315:INFO:Checking exceptions
2025-01-13 16:18:22,315:INFO:Preloading libraries
2025-01-13 16:18:22,315:INFO:Set up data.
2025-01-13 16:18:22,317:INFO:Set up index.
2025-01-13 16:18:22,471:INFO:Initializing predict_model()
2025-01-13 16:18:22,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BF3F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 16:18:22,471:INFO:Checking exceptions
2025-01-13 16:18:22,471:INFO:Preloading libraries
2025-01-13 16:18:22,472:INFO:Set up data.
2025-01-13 16:18:22,474:INFO:Set up index.
2025-01-13 16:18:24,155:INFO:Initializing load_model()
2025-01-13 16:18:24,155:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:24,295:INFO:Initializing load_model()
2025-01-13 16:18:24,295:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:24,508:INFO:Initializing predict_model()
2025-01-13 16:18:24,508:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D7B310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:18:24,508:INFO:Checking exceptions
2025-01-13 16:18:24,509:INFO:Preloading libraries
2025-01-13 16:18:24,509:INFO:Set up data.
2025-01-13 16:18:24,511:INFO:Set up index.
2025-01-13 16:18:24,665:INFO:Initializing predict_model()
2025-01-13 16:18:24,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB71490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:18:24,665:INFO:Checking exceptions
2025-01-13 16:18:24,665:INFO:Preloading libraries
2025-01-13 16:18:24,665:INFO:Set up data.
2025-01-13 16:18:24,667:INFO:Set up index.
2025-01-13 16:18:39,218:INFO:Initializing load_model()
2025-01-13 16:18:39,219:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:39,358:INFO:Initializing load_model()
2025-01-13 16:18:39,358:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:39,572:INFO:Initializing predict_model()
2025-01-13 16:18:39,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EBBB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:18:39,572:INFO:Checking exceptions
2025-01-13 16:18:39,572:INFO:Preloading libraries
2025-01-13 16:18:39,573:INFO:Set up data.
2025-01-13 16:18:39,575:INFO:Set up index.
2025-01-13 16:18:39,728:INFO:Initializing predict_model()
2025-01-13 16:18:39,729:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76A97210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:18:39,729:INFO:Checking exceptions
2025-01-13 16:18:39,729:INFO:Preloading libraries
2025-01-13 16:18:39,729:INFO:Set up data.
2025-01-13 16:18:39,731:INFO:Set up index.
2025-01-13 16:18:48,414:INFO:Initializing load_model()
2025-01-13 16:18:48,415:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:48,550:INFO:Initializing load_model()
2025-01-13 16:18:48,550:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:48,743:INFO:Initializing predict_model()
2025-01-13 16:18:48,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E44ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:18:48,744:INFO:Checking exceptions
2025-01-13 16:18:48,744:INFO:Preloading libraries
2025-01-13 16:18:48,744:INFO:Set up data.
2025-01-13 16:18:48,746:INFO:Set up index.
2025-01-13 16:18:48,900:INFO:Initializing predict_model()
2025-01-13 16:18:48,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB71490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40220>)
2025-01-13 16:18:48,901:INFO:Checking exceptions
2025-01-13 16:18:48,901:INFO:Preloading libraries
2025-01-13 16:18:48,901:INFO:Set up data.
2025-01-13 16:18:48,903:INFO:Set up index.
2025-01-13 16:18:54,029:INFO:Initializing load_model()
2025-01-13 16:18:54,030:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:54,167:INFO:Initializing load_model()
2025-01-13 16:18:54,167:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:54,363:INFO:Initializing predict_model()
2025-01-13 16:18:54,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E510D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFEC0>)
2025-01-13 16:18:54,364:INFO:Checking exceptions
2025-01-13 16:18:54,364:INFO:Preloading libraries
2025-01-13 16:18:54,364:INFO:Set up data.
2025-01-13 16:18:54,366:INFO:Set up index.
2025-01-13 16:18:54,520:INFO:Initializing predict_model()
2025-01-13 16:18:54,520:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:18:54,520:INFO:Checking exceptions
2025-01-13 16:18:54,520:INFO:Preloading libraries
2025-01-13 16:18:54,520:INFO:Set up data.
2025-01-13 16:18:54,523:INFO:Set up index.
2025-01-13 16:18:56,761:INFO:Initializing load_model()
2025-01-13 16:18:56,761:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:56,898:INFO:Initializing load_model()
2025-01-13 16:18:56,898:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:18:57,095:INFO:Initializing predict_model()
2025-01-13 16:18:57,095:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E15190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:18:57,095:INFO:Checking exceptions
2025-01-13 16:18:57,096:INFO:Preloading libraries
2025-01-13 16:18:57,096:INFO:Set up data.
2025-01-13 16:18:57,098:INFO:Set up index.
2025-01-13 16:18:57,246:INFO:Initializing predict_model()
2025-01-13 16:18:57,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D80A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:18:57,246:INFO:Checking exceptions
2025-01-13 16:18:57,247:INFO:Preloading libraries
2025-01-13 16:18:57,247:INFO:Set up data.
2025-01-13 16:18:57,249:INFO:Set up index.
2025-01-13 16:19:00,596:INFO:Initializing load_model()
2025-01-13 16:19:00,597:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:00,728:INFO:Initializing load_model()
2025-01-13 16:19:00,728:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:00,934:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:210: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 16:19:00,952:INFO:Initializing predict_model()
2025-01-13 16:19:00,952:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE23ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFBA0>)
2025-01-13 16:19:00,953:INFO:Checking exceptions
2025-01-13 16:19:00,953:INFO:Preloading libraries
2025-01-13 16:19:00,953:INFO:Set up data.
2025-01-13 16:19:00,955:INFO:Set up index.
2025-01-13 16:19:01,105:INFO:Initializing predict_model()
2025-01-13 16:19:01,106:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76677810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:19:01,106:INFO:Checking exceptions
2025-01-13 16:19:01,106:INFO:Preloading libraries
2025-01-13 16:19:01,106:INFO:Set up data.
2025-01-13 16:19:01,108:INFO:Set up index.
2025-01-13 16:19:17,629:INFO:Initializing load_model()
2025-01-13 16:19:17,629:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:17,768:INFO:Initializing load_model()
2025-01-13 16:19:17,768:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:17,982:INFO:Initializing predict_model()
2025-01-13 16:19:17,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F32B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0FE0>)
2025-01-13 16:19:17,982:INFO:Checking exceptions
2025-01-13 16:19:17,982:INFO:Preloading libraries
2025-01-13 16:19:17,983:INFO:Set up data.
2025-01-13 16:19:17,984:INFO:Set up index.
2025-01-13 16:19:18,137:INFO:Initializing predict_model()
2025-01-13 16:19:18,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6909CE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 16:19:18,138:INFO:Checking exceptions
2025-01-13 16:19:18,138:INFO:Preloading libraries
2025-01-13 16:19:18,138:INFO:Set up data.
2025-01-13 16:19:18,140:INFO:Set up index.
2025-01-13 16:19:36,417:INFO:Initializing load_model()
2025-01-13 16:19:36,417:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:36,550:INFO:Initializing load_model()
2025-01-13 16:19:36,550:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:36,754:INFO:Initializing predict_model()
2025-01-13 16:19:36,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F38E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 16:19:36,755:INFO:Checking exceptions
2025-01-13 16:19:36,755:INFO:Preloading libraries
2025-01-13 16:19:36,755:INFO:Set up data.
2025-01-13 16:19:36,762:INFO:Set up index.
2025-01-13 16:19:36,911:INFO:Initializing predict_model()
2025-01-13 16:19:36,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76AC1F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 16:19:36,911:INFO:Checking exceptions
2025-01-13 16:19:36,911:INFO:Preloading libraries
2025-01-13 16:19:36,911:INFO:Set up data.
2025-01-13 16:19:36,913:INFO:Set up index.
2025-01-13 16:19:40,267:INFO:Initializing load_model()
2025-01-13 16:19:40,268:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:40,399:INFO:Initializing load_model()
2025-01-13 16:19:40,400:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:40,599:INFO:Initializing predict_model()
2025-01-13 16:19:40,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F31510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFF60>)
2025-01-13 16:19:40,599:INFO:Checking exceptions
2025-01-13 16:19:40,599:INFO:Preloading libraries
2025-01-13 16:19:40,600:INFO:Set up data.
2025-01-13 16:19:40,603:INFO:Set up index.
2025-01-13 16:19:40,756:INFO:Initializing predict_model()
2025-01-13 16:19:40,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6909CE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 16:19:40,757:INFO:Checking exceptions
2025-01-13 16:19:40,757:INFO:Preloading libraries
2025-01-13 16:19:40,757:INFO:Set up data.
2025-01-13 16:19:40,759:INFO:Set up index.
2025-01-13 16:19:46,231:INFO:Initializing load_model()
2025-01-13 16:19:46,231:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:46,365:INFO:Initializing load_model()
2025-01-13 16:19:46,365:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:46,566:INFO:Initializing predict_model()
2025-01-13 16:19:46,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE21990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFD80>)
2025-01-13 16:19:46,567:INFO:Checking exceptions
2025-01-13 16:19:46,567:INFO:Preloading libraries
2025-01-13 16:19:46,568:INFO:Set up data.
2025-01-13 16:19:46,571:INFO:Set up index.
2025-01-13 16:19:46,721:INFO:Initializing predict_model()
2025-01-13 16:19:46,722:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D7A350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:19:46,722:INFO:Checking exceptions
2025-01-13 16:19:46,722:INFO:Preloading libraries
2025-01-13 16:19:46,722:INFO:Set up data.
2025-01-13 16:19:46,724:INFO:Set up index.
2025-01-13 16:19:49,223:INFO:Initializing load_model()
2025-01-13 16:19:49,224:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:49,368:INFO:Initializing load_model()
2025-01-13 16:19:49,368:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:49,560:INFO:Initializing predict_model()
2025-01-13 16:19:49,560:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F30450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:19:49,560:INFO:Checking exceptions
2025-01-13 16:19:49,560:INFO:Preloading libraries
2025-01-13 16:19:49,560:INFO:Set up data.
2025-01-13 16:19:49,562:INFO:Set up index.
2025-01-13 16:19:49,714:INFO:Initializing predict_model()
2025-01-13 16:19:49,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE9B390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA07C0>)
2025-01-13 16:19:49,714:INFO:Checking exceptions
2025-01-13 16:19:49,714:INFO:Preloading libraries
2025-01-13 16:19:49,715:INFO:Set up data.
2025-01-13 16:19:49,716:INFO:Set up index.
2025-01-13 16:19:49,956:INFO:Initializing load_model()
2025-01-13 16:19:49,957:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:50,094:INFO:Initializing load_model()
2025-01-13 16:19:50,094:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:50,288:INFO:Initializing predict_model()
2025-01-13 16:19:50,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E53810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:19:50,289:INFO:Checking exceptions
2025-01-13 16:19:50,289:INFO:Preloading libraries
2025-01-13 16:19:50,289:INFO:Set up data.
2025-01-13 16:19:50,291:INFO:Set up index.
2025-01-13 16:19:50,445:INFO:Initializing predict_model()
2025-01-13 16:19:50,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B12650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:19:50,445:INFO:Checking exceptions
2025-01-13 16:19:50,445:INFO:Preloading libraries
2025-01-13 16:19:50,445:INFO:Set up data.
2025-01-13 16:19:50,447:INFO:Set up index.
2025-01-13 16:19:51,250:INFO:Initializing load_model()
2025-01-13 16:19:51,250:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:51,388:INFO:Initializing load_model()
2025-01-13 16:19:51,388:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:51,576:INFO:Initializing predict_model()
2025-01-13 16:19:51,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F153D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEF2E0>)
2025-01-13 16:19:51,576:INFO:Checking exceptions
2025-01-13 16:19:51,576:INFO:Preloading libraries
2025-01-13 16:19:51,577:INFO:Set up data.
2025-01-13 16:19:51,578:INFO:Set up index.
2025-01-13 16:19:51,728:INFO:Initializing predict_model()
2025-01-13 16:19:51,729:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66998E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CCC0>)
2025-01-13 16:19:51,729:INFO:Checking exceptions
2025-01-13 16:19:51,729:INFO:Preloading libraries
2025-01-13 16:19:51,730:INFO:Set up data.
2025-01-13 16:19:51,732:INFO:Set up index.
2025-01-13 16:19:55,762:INFO:Initializing load_model()
2025-01-13 16:19:55,762:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:55,902:INFO:Initializing load_model()
2025-01-13 16:19:55,902:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:56,104:INFO:Initializing predict_model()
2025-01-13 16:19:56,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECF110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFF60>)
2025-01-13 16:19:56,105:INFO:Checking exceptions
2025-01-13 16:19:56,105:INFO:Preloading libraries
2025-01-13 16:19:56,105:INFO:Set up data.
2025-01-13 16:19:56,109:INFO:Set up index.
2025-01-13 16:19:56,260:INFO:Initializing predict_model()
2025-01-13 16:19:56,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76677810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E340>)
2025-01-13 16:19:56,261:INFO:Checking exceptions
2025-01-13 16:19:56,261:INFO:Preloading libraries
2025-01-13 16:19:56,261:INFO:Set up data.
2025-01-13 16:19:56,263:INFO:Set up index.
2025-01-13 16:19:56,864:INFO:Initializing load_model()
2025-01-13 16:19:56,865:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:57,003:INFO:Initializing load_model()
2025-01-13 16:19:57,003:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:19:57,196:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:113: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 16:19:57,222:INFO:Initializing predict_model()
2025-01-13 16:19:57,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE53AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 16:19:57,222:INFO:Checking exceptions
2025-01-13 16:19:57,223:INFO:Preloading libraries
2025-01-13 16:19:57,223:INFO:Set up data.
2025-01-13 16:19:57,225:INFO:Set up index.
2025-01-13 16:19:57,425:INFO:Initializing predict_model()
2025-01-13 16:19:57,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66C13150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:19:57,426:INFO:Checking exceptions
2025-01-13 16:19:57,426:INFO:Preloading libraries
2025-01-13 16:19:57,426:INFO:Set up data.
2025-01-13 16:19:57,428:INFO:Set up index.
2025-01-13 16:21:56,132:INFO:Initializing load_model()
2025-01-13 16:21:56,132:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:21:56,502:INFO:Initializing load_model()
2025-01-13 16:21:56,502:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:21:56,966:INFO:Initializing predict_model()
2025-01-13 16:21:56,966:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FDC7490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:21:56,966:INFO:Checking exceptions
2025-01-13 16:21:56,966:INFO:Preloading libraries
2025-01-13 16:21:56,967:INFO:Set up data.
2025-01-13 16:21:56,970:INFO:Set up index.
2025-01-13 16:21:57,128:INFO:Initializing predict_model()
2025-01-13 16:21:57,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76907350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 16:21:57,129:INFO:Checking exceptions
2025-01-13 16:21:57,129:INFO:Preloading libraries
2025-01-13 16:21:57,131:INFO:Set up data.
2025-01-13 16:21:57,134:INFO:Set up index.
2025-01-13 16:22:20,599:INFO:Initializing load_model()
2025-01-13 16:22:20,600:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:20,737:INFO:Initializing load_model()
2025-01-13 16:22:20,737:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:20,936:INFO:Initializing predict_model()
2025-01-13 16:22:20,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE51390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFC40>)
2025-01-13 16:22:20,937:INFO:Checking exceptions
2025-01-13 16:22:20,937:INFO:Preloading libraries
2025-01-13 16:22:20,937:INFO:Set up data.
2025-01-13 16:22:20,942:INFO:Set up index.
2025-01-13 16:22:21,110:INFO:Initializing predict_model()
2025-01-13 16:22:21,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 16:22:21,110:INFO:Checking exceptions
2025-01-13 16:22:21,110:INFO:Preloading libraries
2025-01-13 16:22:21,111:INFO:Set up data.
2025-01-13 16:22:21,112:INFO:Set up index.
2025-01-13 16:22:23,232:INFO:Initializing load_model()
2025-01-13 16:22:23,232:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:23,371:INFO:Initializing load_model()
2025-01-13 16:22:23,371:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:23,565:INFO:Initializing predict_model()
2025-01-13 16:22:23,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F41C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 16:22:23,565:INFO:Checking exceptions
2025-01-13 16:22:23,565:INFO:Preloading libraries
2025-01-13 16:22:23,566:INFO:Set up data.
2025-01-13 16:22:23,568:INFO:Set up index.
2025-01-13 16:22:23,721:INFO:Initializing predict_model()
2025-01-13 16:22:23,722:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE9B450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 16:22:23,722:INFO:Checking exceptions
2025-01-13 16:22:23,722:INFO:Preloading libraries
2025-01-13 16:22:23,723:INFO:Set up data.
2025-01-13 16:22:23,725:INFO:Set up index.
2025-01-13 16:22:27,968:INFO:Initializing load_model()
2025-01-13 16:22:27,969:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:28,100:INFO:Initializing load_model()
2025-01-13 16:22:28,100:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:28,287:INFO:Initializing predict_model()
2025-01-13 16:22:28,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F17F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E09300>)
2025-01-13 16:22:28,288:INFO:Checking exceptions
2025-01-13 16:22:28,288:INFO:Preloading libraries
2025-01-13 16:22:28,288:INFO:Set up data.
2025-01-13 16:22:28,290:INFO:Set up index.
2025-01-13 16:22:28,437:INFO:Initializing predict_model()
2025-01-13 16:22:28,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C68811F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:22:28,438:INFO:Checking exceptions
2025-01-13 16:22:28,438:INFO:Preloading libraries
2025-01-13 16:22:28,438:INFO:Set up data.
2025-01-13 16:22:28,440:INFO:Set up index.
2025-01-13 16:22:31,720:INFO:Initializing load_model()
2025-01-13 16:22:31,720:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:31,860:INFO:Initializing load_model()
2025-01-13 16:22:31,860:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:32,055:INFO:Initializing predict_model()
2025-01-13 16:22:32,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECC650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47CE0>)
2025-01-13 16:22:32,056:INFO:Checking exceptions
2025-01-13 16:22:32,056:INFO:Preloading libraries
2025-01-13 16:22:32,056:INFO:Set up data.
2025-01-13 16:22:32,058:INFO:Set up index.
2025-01-13 16:22:32,214:INFO:Initializing predict_model()
2025-01-13 16:22:32,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB6EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E340>)
2025-01-13 16:22:32,214:INFO:Checking exceptions
2025-01-13 16:22:32,214:INFO:Preloading libraries
2025-01-13 16:22:32,215:INFO:Set up data.
2025-01-13 16:22:32,217:INFO:Set up index.
2025-01-13 16:22:34,280:INFO:Initializing load_model()
2025-01-13 16:22:34,281:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:34,433:INFO:Initializing load_model()
2025-01-13 16:22:34,433:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:34,620:INFO:Initializing predict_model()
2025-01-13 16:22:34,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EB9D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 16:22:34,620:INFO:Checking exceptions
2025-01-13 16:22:34,620:INFO:Preloading libraries
2025-01-13 16:22:34,620:INFO:Set up data.
2025-01-13 16:22:34,622:INFO:Set up index.
2025-01-13 16:22:34,770:INFO:Initializing predict_model()
2025-01-13 16:22:34,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D7B310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 16:22:34,771:INFO:Checking exceptions
2025-01-13 16:22:34,771:INFO:Preloading libraries
2025-01-13 16:22:34,771:INFO:Set up data.
2025-01-13 16:22:34,773:INFO:Set up index.
2025-01-13 16:22:37,764:INFO:Initializing load_model()
2025-01-13 16:22:37,764:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:37,902:INFO:Initializing load_model()
2025-01-13 16:22:37,902:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:38,094:INFO:Initializing predict_model()
2025-01-13 16:22:38,094:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E27E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEF920>)
2025-01-13 16:22:38,094:INFO:Checking exceptions
2025-01-13 16:22:38,094:INFO:Preloading libraries
2025-01-13 16:22:38,095:INFO:Set up data.
2025-01-13 16:22:38,097:INFO:Set up index.
2025-01-13 16:22:38,249:INFO:Initializing predict_model()
2025-01-13 16:22:38,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EF22F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E2A0>)
2025-01-13 16:22:38,249:INFO:Checking exceptions
2025-01-13 16:22:38,249:INFO:Preloading libraries
2025-01-13 16:22:38,249:INFO:Set up data.
2025-01-13 16:22:38,251:INFO:Set up index.
2025-01-13 16:22:40,312:INFO:Initializing load_model()
2025-01-13 16:22:40,312:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:40,450:INFO:Initializing load_model()
2025-01-13 16:22:40,450:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:40,674:INFO:Initializing predict_model()
2025-01-13 16:22:40,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EB8510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47BA0>)
2025-01-13 16:22:40,675:INFO:Checking exceptions
2025-01-13 16:22:40,675:INFO:Preloading libraries
2025-01-13 16:22:40,675:INFO:Set up data.
2025-01-13 16:22:40,679:INFO:Set up index.
2025-01-13 16:22:40,841:INFO:Initializing predict_model()
2025-01-13 16:22:40,841:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D82490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 16:22:40,841:INFO:Checking exceptions
2025-01-13 16:22:40,841:INFO:Preloading libraries
2025-01-13 16:22:40,842:INFO:Set up data.
2025-01-13 16:22:40,843:INFO:Set up index.
2025-01-13 16:22:45,865:INFO:Initializing load_model()
2025-01-13 16:22:45,865:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:46,038:INFO:Initializing load_model()
2025-01-13 16:22:46,038:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:46,243:INFO:Initializing predict_model()
2025-01-13 16:22:46,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E50750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47CE0>)
2025-01-13 16:22:46,244:INFO:Checking exceptions
2025-01-13 16:22:46,244:INFO:Preloading libraries
2025-01-13 16:22:46,244:INFO:Set up data.
2025-01-13 16:22:46,246:INFO:Set up index.
2025-01-13 16:22:46,399:INFO:Initializing predict_model()
2025-01-13 16:22:46,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB01E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40680>)
2025-01-13 16:22:46,399:INFO:Checking exceptions
2025-01-13 16:22:46,399:INFO:Preloading libraries
2025-01-13 16:22:46,399:INFO:Set up data.
2025-01-13 16:22:46,401:INFO:Set up index.
2025-01-13 16:22:48,443:INFO:Initializing load_model()
2025-01-13 16:22:48,443:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:48,581:INFO:Initializing load_model()
2025-01-13 16:22:48,581:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:48,771:INFO:Initializing predict_model()
2025-01-13 16:22:48,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F37C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 16:22:48,772:INFO:Checking exceptions
2025-01-13 16:22:48,772:INFO:Preloading libraries
2025-01-13 16:22:48,772:INFO:Set up data.
2025-01-13 16:22:48,774:INFO:Set up index.
2025-01-13 16:22:48,923:INFO:Initializing predict_model()
2025-01-13 16:22:48,923:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C691D83D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 16:22:48,923:INFO:Checking exceptions
2025-01-13 16:22:48,923:INFO:Preloading libraries
2025-01-13 16:22:48,923:INFO:Set up data.
2025-01-13 16:22:48,925:INFO:Set up index.
2025-01-13 16:22:54,942:INFO:Initializing load_model()
2025-01-13 16:22:54,943:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:55,087:INFO:Initializing load_model()
2025-01-13 16:22:55,087:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:55,295:INFO:Initializing predict_model()
2025-01-13 16:22:55,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECF610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD477E0>)
2025-01-13 16:22:55,295:INFO:Checking exceptions
2025-01-13 16:22:55,296:INFO:Preloading libraries
2025-01-13 16:22:55,296:INFO:Set up data.
2025-01-13 16:22:55,298:INFO:Set up index.
2025-01-13 16:22:55,458:INFO:Initializing predict_model()
2025-01-13 16:22:55,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75C4F910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD477E0>)
2025-01-13 16:22:55,459:INFO:Checking exceptions
2025-01-13 16:22:55,459:INFO:Preloading libraries
2025-01-13 16:22:55,459:INFO:Set up data.
2025-01-13 16:22:55,461:INFO:Set up index.
2025-01-13 16:22:57,029:INFO:Initializing load_model()
2025-01-13 16:22:57,029:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:57,169:INFO:Initializing load_model()
2025-01-13 16:22:57,170:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:22:57,366:INFO:Initializing predict_model()
2025-01-13 16:22:57,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E4E310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 16:22:57,367:INFO:Checking exceptions
2025-01-13 16:22:57,367:INFO:Preloading libraries
2025-01-13 16:22:57,367:INFO:Set up data.
2025-01-13 16:22:57,370:INFO:Set up index.
2025-01-13 16:22:57,521:INFO:Initializing predict_model()
2025-01-13 16:22:57,522:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE989D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 16:22:57,522:INFO:Checking exceptions
2025-01-13 16:22:57,522:INFO:Preloading libraries
2025-01-13 16:22:57,522:INFO:Set up data.
2025-01-13 16:22:57,524:INFO:Set up index.
2025-01-13 16:23:25,945:INFO:Initializing load_model()
2025-01-13 16:23:25,945:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:26,099:INFO:Initializing load_model()
2025-01-13 16:23:26,099:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:26,293:INFO:Initializing predict_model()
2025-01-13 16:23:26,294:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE55C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:23:26,294:INFO:Checking exceptions
2025-01-13 16:23:26,294:INFO:Preloading libraries
2025-01-13 16:23:26,294:INFO:Set up data.
2025-01-13 16:23:26,296:INFO:Set up index.
2025-01-13 16:23:26,444:INFO:Initializing predict_model()
2025-01-13 16:23:26,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76907290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:23:26,444:INFO:Checking exceptions
2025-01-13 16:23:26,444:INFO:Preloading libraries
2025-01-13 16:23:26,445:INFO:Set up data.
2025-01-13 16:23:26,446:INFO:Set up index.
2025-01-13 16:23:27,979:INFO:Initializing load_model()
2025-01-13 16:23:27,979:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:28,111:INFO:Initializing load_model()
2025-01-13 16:23:28,111:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:28,302:INFO:Initializing predict_model()
2025-01-13 16:23:28,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E4D910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E0AA20>)
2025-01-13 16:23:28,302:INFO:Checking exceptions
2025-01-13 16:23:28,302:INFO:Preloading libraries
2025-01-13 16:23:28,303:INFO:Set up data.
2025-01-13 16:23:28,304:INFO:Set up index.
2025-01-13 16:23:28,450:INFO:Initializing predict_model()
2025-01-13 16:23:28,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C669E9F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47D80>)
2025-01-13 16:23:28,451:INFO:Checking exceptions
2025-01-13 16:23:28,451:INFO:Preloading libraries
2025-01-13 16:23:28,451:INFO:Set up data.
2025-01-13 16:23:28,453:INFO:Set up index.
2025-01-13 16:23:29,888:INFO:Initializing load_model()
2025-01-13 16:23:29,888:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:30,039:INFO:Initializing load_model()
2025-01-13 16:23:30,039:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 16:23:30,229:INFO:Initializing predict_model()
2025-01-13 16:23:30,230:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C2976AA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 16:23:30,230:INFO:Checking exceptions
2025-01-13 16:23:30,230:INFO:Preloading libraries
2025-01-13 16:23:30,230:INFO:Set up data.
2025-01-13 16:23:30,232:INFO:Set up index.
2025-01-13 16:23:30,382:INFO:Initializing predict_model()
2025-01-13 16:23:30,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C72AC3610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 16:23:30,382:INFO:Checking exceptions
2025-01-13 16:23:30,382:INFO:Preloading libraries
2025-01-13 16:23:30,383:INFO:Set up data.
2025-01-13 16:23:30,384:INFO:Set up index.
2025-01-13 18:41:48,699:INFO:Initializing load_model()
2025-01-13 18:41:48,703:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:41:49,175:INFO:Initializing load_model()
2025-01-13 18:41:49,175:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:41:49,739:INFO:Initializing predict_model()
2025-01-13 18:41:49,739:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E4E890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFD80>)
2025-01-13 18:41:49,739:INFO:Checking exceptions
2025-01-13 18:41:49,740:INFO:Preloading libraries
2025-01-13 18:41:49,741:INFO:Set up data.
2025-01-13 18:41:49,747:INFO:Set up index.
2025-01-13 18:41:50,211:INFO:Initializing predict_model()
2025-01-13 18:41:50,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE64590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CCC0>)
2025-01-13 18:41:50,211:INFO:Checking exceptions
2025-01-13 18:41:50,212:INFO:Preloading libraries
2025-01-13 18:41:50,212:INFO:Set up data.
2025-01-13 18:41:50,215:INFO:Set up index.
2025-01-13 18:41:54,545:INFO:Initializing load_model()
2025-01-13 18:41:54,546:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:41:54,784:INFO:Initializing load_model()
2025-01-13 18:41:54,784:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:41:55,024:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:210: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:41:55,047:INFO:Initializing predict_model()
2025-01-13 18:41:55,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E25390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFB00>)
2025-01-13 18:41:55,047:INFO:Checking exceptions
2025-01-13 18:41:55,047:INFO:Preloading libraries
2025-01-13 18:41:55,048:INFO:Set up data.
2025-01-13 18:41:55,050:INFO:Set up index.
2025-01-13 18:41:55,211:INFO:Initializing predict_model()
2025-01-13 18:41:55,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6909CE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 18:41:55,212:INFO:Checking exceptions
2025-01-13 18:41:55,213:INFO:Preloading libraries
2025-01-13 18:41:55,213:INFO:Set up data.
2025-01-13 18:41:55,215:INFO:Set up index.
2025-01-13 18:42:09,236:INFO:Initializing load_model()
2025-01-13 18:42:09,236:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:09,382:INFO:Initializing load_model()
2025-01-13 18:42:09,382:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:09,574:INFO:Initializing predict_model()
2025-01-13 18:42:09,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ECB850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:42:09,575:INFO:Checking exceptions
2025-01-13 18:42:09,575:INFO:Preloading libraries
2025-01-13 18:42:09,575:INFO:Set up data.
2025-01-13 18:42:09,577:INFO:Set up index.
2025-01-13 18:42:09,727:INFO:Initializing predict_model()
2025-01-13 18:42:09,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18DC41D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:42:09,728:INFO:Checking exceptions
2025-01-13 18:42:09,728:INFO:Preloading libraries
2025-01-13 18:42:09,728:INFO:Set up data.
2025-01-13 18:42:09,730:INFO:Set up index.
2025-01-13 18:42:09,761:INFO:Initializing load_model()
2025-01-13 18:42:09,761:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:10,139:INFO:Initializing load_model()
2025-01-13 18:42:10,139:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:10,352:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:210: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:42:10,373:INFO:Initializing predict_model()
2025-01-13 18:42:10,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F548D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42F20>)
2025-01-13 18:42:10,373:INFO:Checking exceptions
2025-01-13 18:42:10,374:INFO:Preloading libraries
2025-01-13 18:42:10,374:INFO:Set up data.
2025-01-13 18:42:10,376:INFO:Set up index.
2025-01-13 18:42:10,578:INFO:Initializing predict_model()
2025-01-13 18:42:10,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D93B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:42:10,578:INFO:Checking exceptions
2025-01-13 18:42:10,578:INFO:Preloading libraries
2025-01-13 18:42:10,580:INFO:Set up data.
2025-01-13 18:42:10,584:INFO:Set up index.
2025-01-13 18:42:15,959:INFO:Initializing load_model()
2025-01-13 18:42:15,960:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:16,127:INFO:Initializing load_model()
2025-01-13 18:42:16,127:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:16,341:INFO:Initializing predict_model()
2025-01-13 18:42:16,342:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F3E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 18:42:16,342:INFO:Checking exceptions
2025-01-13 18:42:16,342:INFO:Preloading libraries
2025-01-13 18:42:16,342:INFO:Set up data.
2025-01-13 18:42:16,344:INFO:Set up index.
2025-01-13 18:42:16,496:INFO:Initializing predict_model()
2025-01-13 18:42:16,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE6DB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 18:42:16,496:INFO:Checking exceptions
2025-01-13 18:42:16,496:INFO:Preloading libraries
2025-01-13 18:42:16,497:INFO:Set up data.
2025-01-13 18:42:16,498:INFO:Set up index.
2025-01-13 18:42:19,800:INFO:Initializing load_model()
2025-01-13 18:42:19,800:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:19,934:INFO:Initializing load_model()
2025-01-13 18:42:19,934:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:42:20,148:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:210: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:42:20,170:INFO:Initializing predict_model()
2025-01-13 18:42:20,170:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B32F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 18:42:20,171:INFO:Checking exceptions
2025-01-13 18:42:20,171:INFO:Preloading libraries
2025-01-13 18:42:20,171:INFO:Set up data.
2025-01-13 18:42:20,173:INFO:Set up index.
2025-01-13 18:42:20,360:INFO:Initializing predict_model()
2025-01-13 18:42:20,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E42310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 18:42:20,361:INFO:Checking exceptions
2025-01-13 18:42:20,361:INFO:Preloading libraries
2025-01-13 18:42:20,362:INFO:Set up data.
2025-01-13 18:42:20,364:INFO:Set up index.
2025-01-13 18:43:17,705:INFO:Initializing load_model()
2025-01-13 18:43:17,705:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:17,845:INFO:Initializing load_model()
2025-01-13 18:43:17,846:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:18,050:INFO:Initializing predict_model()
2025-01-13 18:43:18,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FBB7610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E0A5C0>)
2025-01-13 18:43:18,051:INFO:Checking exceptions
2025-01-13 18:43:18,051:INFO:Preloading libraries
2025-01-13 18:43:18,051:INFO:Set up data.
2025-01-13 18:43:18,053:INFO:Set up index.
2025-01-13 18:43:18,238:INFO:Initializing predict_model()
2025-01-13 18:43:18,238:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67EB2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:43:18,238:INFO:Checking exceptions
2025-01-13 18:43:18,239:INFO:Preloading libraries
2025-01-13 18:43:18,239:INFO:Set up data.
2025-01-13 18:43:18,241:INFO:Set up index.
2025-01-13 18:43:19,582:INFO:Initializing load_model()
2025-01-13 18:43:19,583:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:19,727:INFO:Initializing load_model()
2025-01-13 18:43:19,727:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:19,954:INFO:Initializing predict_model()
2025-01-13 18:43:19,954:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EC1A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:43:19,954:INFO:Checking exceptions
2025-01-13 18:43:19,957:INFO:Preloading libraries
2025-01-13 18:43:19,958:INFO:Set up data.
2025-01-13 18:43:19,960:INFO:Set up index.
2025-01-13 18:43:20,109:INFO:Initializing predict_model()
2025-01-13 18:43:20,109:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C68811F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:43:20,109:INFO:Checking exceptions
2025-01-13 18:43:20,109:INFO:Preloading libraries
2025-01-13 18:43:20,109:INFO:Set up data.
2025-01-13 18:43:20,111:INFO:Set up index.
2025-01-13 18:43:27,964:INFO:Initializing load_model()
2025-01-13 18:43:27,964:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:28,107:INFO:Initializing load_model()
2025-01-13 18:43:28,107:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:28,330:INFO:Initializing predict_model()
2025-01-13 18:43:28,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F3A7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 18:43:28,334:INFO:Checking exceptions
2025-01-13 18:43:28,335:INFO:Preloading libraries
2025-01-13 18:43:28,335:INFO:Set up data.
2025-01-13 18:43:28,337:INFO:Set up index.
2025-01-13 18:43:28,488:INFO:Initializing predict_model()
2025-01-13 18:43:28,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76907390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 18:43:28,488:INFO:Checking exceptions
2025-01-13 18:43:28,488:INFO:Preloading libraries
2025-01-13 18:43:28,489:INFO:Set up data.
2025-01-13 18:43:28,490:INFO:Set up index.
2025-01-13 18:43:31,138:INFO:Initializing load_model()
2025-01-13 18:43:31,139:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:31,312:INFO:Initializing load_model()
2025-01-13 18:43:31,312:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:31,502:INFO:Initializing predict_model()
2025-01-13 18:43:31,502:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FDDEC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA07C0>)
2025-01-13 18:43:31,502:INFO:Checking exceptions
2025-01-13 18:43:31,502:INFO:Preloading libraries
2025-01-13 18:43:31,502:INFO:Set up data.
2025-01-13 18:43:31,505:INFO:Set up index.
2025-01-13 18:43:31,513:INFO:Initializing load_model()
2025-01-13 18:43:31,513:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:31,658:INFO:Initializing predict_model()
2025-01-13 18:43:31,658:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76A97210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA07C0>)
2025-01-13 18:43:31,658:INFO:Checking exceptions
2025-01-13 18:43:31,658:INFO:Preloading libraries
2025-01-13 18:43:31,659:INFO:Set up data.
2025-01-13 18:43:31,661:INFO:Set up index.
2025-01-13 18:43:32,020:INFO:Initializing load_model()
2025-01-13 18:43:32,020:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:32,190:INFO:Initializing load_model()
2025-01-13 18:43:32,190:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:32,443:INFO:Initializing load_model()
2025-01-13 18:43:32,443:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:32,648:INFO:Initializing predict_model()
2025-01-13 18:43:32,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F55CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 18:43:32,648:INFO:Checking exceptions
2025-01-13 18:43:32,648:INFO:Preloading libraries
2025-01-13 18:43:32,649:INFO:Set up data.
2025-01-13 18:43:32,652:INFO:Set up index.
2025-01-13 18:43:32,801:INFO:Initializing predict_model()
2025-01-13 18:43:32,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66988D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2E2A0>)
2025-01-13 18:43:32,802:INFO:Checking exceptions
2025-01-13 18:43:32,802:INFO:Preloading libraries
2025-01-13 18:43:32,802:INFO:Set up data.
2025-01-13 18:43:32,804:INFO:Set up index.
2025-01-13 18:43:33,382:INFO:Initializing load_model()
2025-01-13 18:43:33,382:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:33,521:INFO:Initializing load_model()
2025-01-13 18:43:33,521:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:33,714:INFO:Initializing predict_model()
2025-01-13 18:43:33,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F3A790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0180>)
2025-01-13 18:43:33,714:INFO:Checking exceptions
2025-01-13 18:43:33,714:INFO:Preloading libraries
2025-01-13 18:43:33,715:INFO:Set up data.
2025-01-13 18:43:33,717:INFO:Set up index.
2025-01-13 18:43:33,869:INFO:Initializing predict_model()
2025-01-13 18:43:33,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C69917090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:43:33,870:INFO:Checking exceptions
2025-01-13 18:43:33,870:INFO:Preloading libraries
2025-01-13 18:43:33,870:INFO:Set up data.
2025-01-13 18:43:33,872:INFO:Set up index.
2025-01-13 18:43:37,111:INFO:Initializing load_model()
2025-01-13 18:43:37,111:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:37,253:INFO:Initializing load_model()
2025-01-13 18:43:37,253:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:37,455:INFO:Initializing predict_model()
2025-01-13 18:43:37,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E98790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0180>)
2025-01-13 18:43:37,455:INFO:Checking exceptions
2025-01-13 18:43:37,455:INFO:Preloading libraries
2025-01-13 18:43:37,456:INFO:Set up data.
2025-01-13 18:43:37,458:INFO:Set up index.
2025-01-13 18:43:37,640:INFO:Initializing predict_model()
2025-01-13 18:43:37,640:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67DFB090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40680>)
2025-01-13 18:43:37,640:INFO:Checking exceptions
2025-01-13 18:43:37,640:INFO:Preloading libraries
2025-01-13 18:43:37,641:INFO:Set up data.
2025-01-13 18:43:37,642:INFO:Set up index.
2025-01-13 18:43:38,569:INFO:Initializing load_model()
2025-01-13 18:43:38,569:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:38,707:INFO:Initializing load_model()
2025-01-13 18:43:38,707:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:38,902:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:210: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:43:38,919:INFO:Initializing predict_model()
2025-01-13 18:43:38,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE29B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFB00>)
2025-01-13 18:43:38,919:INFO:Checking exceptions
2025-01-13 18:43:38,919:INFO:Preloading libraries
2025-01-13 18:43:38,919:INFO:Set up data.
2025-01-13 18:43:38,922:INFO:Set up index.
2025-01-13 18:43:39,071:INFO:Initializing predict_model()
2025-01-13 18:43:39,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BD7610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:43:39,071:INFO:Checking exceptions
2025-01-13 18:43:39,072:INFO:Preloading libraries
2025-01-13 18:43:39,072:INFO:Set up data.
2025-01-13 18:43:39,074:INFO:Set up index.
2025-01-13 18:43:52,078:INFO:Initializing load_model()
2025-01-13 18:43:52,078:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:52,213:INFO:Initializing load_model()
2025-01-13 18:43:52,214:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:52,403:INFO:Initializing predict_model()
2025-01-13 18:43:52,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EBA9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 18:43:52,404:INFO:Checking exceptions
2025-01-13 18:43:52,404:INFO:Preloading libraries
2025-01-13 18:43:52,405:INFO:Set up data.
2025-01-13 18:43:52,407:INFO:Set up index.
2025-01-13 18:43:52,558:INFO:Initializing predict_model()
2025-01-13 18:43:52,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FACF9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:43:52,558:INFO:Checking exceptions
2025-01-13 18:43:52,558:INFO:Preloading libraries
2025-01-13 18:43:52,559:INFO:Set up data.
2025-01-13 18:43:52,561:INFO:Set up index.
2025-01-13 18:43:56,905:INFO:Initializing load_model()
2025-01-13 18:43:56,906:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:57,038:INFO:Initializing load_model()
2025-01-13 18:43:57,040:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:43:57,226:INFO:Initializing predict_model()
2025-01-13 18:43:57,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE55A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAA20>)
2025-01-13 18:43:57,227:INFO:Checking exceptions
2025-01-13 18:43:57,227:INFO:Preloading libraries
2025-01-13 18:43:57,227:INFO:Set up data.
2025-01-13 18:43:57,229:INFO:Set up index.
2025-01-13 18:43:57,378:INFO:Initializing predict_model()
2025-01-13 18:43:57,378:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EEE7590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:43:57,378:INFO:Checking exceptions
2025-01-13 18:43:57,379:INFO:Preloading libraries
2025-01-13 18:43:57,379:INFO:Set up data.
2025-01-13 18:43:57,381:INFO:Set up index.
2025-01-13 18:44:01,275:INFO:Initializing load_model()
2025-01-13 18:44:01,275:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:01,410:INFO:Initializing load_model()
2025-01-13 18:44:01,410:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:01,615:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:113: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:44:01,654:INFO:Initializing predict_model()
2025-01-13 18:44:01,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EB3150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42F20>)
2025-01-13 18:44:01,655:INFO:Checking exceptions
2025-01-13 18:44:01,655:INFO:Preloading libraries
2025-01-13 18:44:01,655:INFO:Set up data.
2025-01-13 18:44:01,657:INFO:Set up index.
2025-01-13 18:44:01,811:INFO:Initializing predict_model()
2025-01-13 18:44:01,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18DEBB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FAEAAC0>)
2025-01-13 18:44:01,812:INFO:Checking exceptions
2025-01-13 18:44:01,812:INFO:Preloading libraries
2025-01-13 18:44:01,812:INFO:Set up data.
2025-01-13 18:44:01,814:INFO:Set up index.
2025-01-13 18:44:08,284:INFO:Initializing load_model()
2025-01-13 18:44:08,284:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:08,423:INFO:Initializing load_model()
2025-01-13 18:44:08,423:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:08,622:INFO:Initializing predict_model()
2025-01-13 18:44:08,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EC6D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 18:44:08,622:INFO:Checking exceptions
2025-01-13 18:44:08,622:INFO:Preloading libraries
2025-01-13 18:44:08,622:INFO:Set up data.
2025-01-13 18:44:08,625:INFO:Set up index.
2025-01-13 18:44:08,788:INFO:Initializing predict_model()
2025-01-13 18:44:08,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D93B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 18:44:08,788:INFO:Checking exceptions
2025-01-13 18:44:08,788:INFO:Preloading libraries
2025-01-13 18:44:08,788:INFO:Set up data.
2025-01-13 18:44:08,790:INFO:Set up index.
2025-01-13 18:44:11,753:INFO:Initializing load_model()
2025-01-13 18:44:11,753:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:11,886:INFO:Initializing load_model()
2025-01-13 18:44:11,886:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:12,082:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:113: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:44:12,115:INFO:Initializing predict_model()
2025-01-13 18:44:12,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EC7FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0180>)
2025-01-13 18:44:12,115:INFO:Checking exceptions
2025-01-13 18:44:12,115:INFO:Preloading libraries
2025-01-13 18:44:12,116:INFO:Set up data.
2025-01-13 18:44:12,118:INFO:Set up index.
2025-01-13 18:44:12,319:INFO:Initializing predict_model()
2025-01-13 18:44:12,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66988D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0180>)
2025-01-13 18:44:12,320:INFO:Checking exceptions
2025-01-13 18:44:12,320:INFO:Preloading libraries
2025-01-13 18:44:12,320:INFO:Set up data.
2025-01-13 18:44:12,322:INFO:Set up index.
2025-01-13 18:44:20,956:INFO:Initializing load_model()
2025-01-13 18:44:20,956:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:21,133:INFO:Initializing load_model()
2025-01-13 18:44:21,133:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:21,354:INFO:Initializing predict_model()
2025-01-13 18:44:21,355:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18ED73D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42F20>)
2025-01-13 18:44:21,355:INFO:Checking exceptions
2025-01-13 18:44:21,355:INFO:Preloading libraries
2025-01-13 18:44:21,356:INFO:Set up data.
2025-01-13 18:44:21,359:INFO:Set up index.
2025-01-13 18:44:21,519:INFO:Initializing predict_model()
2025-01-13 18:44:21,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18D7A7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42F20>)
2025-01-13 18:44:21,519:INFO:Checking exceptions
2025-01-13 18:44:21,520:INFO:Preloading libraries
2025-01-13 18:44:21,520:INFO:Set up data.
2025-01-13 18:44:21,522:INFO:Set up index.
2025-01-13 18:44:22,945:INFO:Initializing load_model()
2025-01-13 18:44:22,946:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:23,083:INFO:Initializing load_model()
2025-01-13 18:44:23,083:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:23,281:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:113: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:44:23,311:INFO:Initializing predict_model()
2025-01-13 18:44:23,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E297D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C42B60>)
2025-01-13 18:44:23,311:INFO:Checking exceptions
2025-01-13 18:44:23,311:INFO:Preloading libraries
2025-01-13 18:44:23,312:INFO:Set up data.
2025-01-13 18:44:23,314:INFO:Set up index.
2025-01-13 18:44:23,502:INFO:Initializing predict_model()
2025-01-13 18:44:23,502:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6909CE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 18:44:23,502:INFO:Checking exceptions
2025-01-13 18:44:23,503:INFO:Preloading libraries
2025-01-13 18:44:23,503:INFO:Set up data.
2025-01-13 18:44:23,505:INFO:Set up index.
2025-01-13 18:44:28,557:INFO:Initializing load_model()
2025-01-13 18:44:28,557:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:28,700:INFO:Initializing load_model()
2025-01-13 18:44:28,700:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:28,910:INFO:Initializing predict_model()
2025-01-13 18:44:28,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E65250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0A40>)
2025-01-13 18:44:28,911:INFO:Checking exceptions
2025-01-13 18:44:28,911:INFO:Preloading libraries
2025-01-13 18:44:28,911:INFO:Set up data.
2025-01-13 18:44:28,914:INFO:Set up index.
2025-01-13 18:44:29,066:INFO:Initializing predict_model()
2025-01-13 18:44:29,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FBB00D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C6552EA20>)
2025-01-13 18:44:29,066:INFO:Checking exceptions
2025-01-13 18:44:29,067:INFO:Preloading libraries
2025-01-13 18:44:29,067:INFO:Set up data.
2025-01-13 18:44:29,069:INFO:Set up index.
2025-01-13 18:44:29,751:INFO:Initializing load_model()
2025-01-13 18:44:29,751:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:29,889:INFO:Initializing load_model()
2025-01-13 18:44:29,889:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:30,080:INFO:Initializing predict_model()
2025-01-13 18:44:30,080:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FDDDF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA0180>)
2025-01-13 18:44:30,081:INFO:Checking exceptions
2025-01-13 18:44:30,081:INFO:Preloading libraries
2025-01-13 18:44:30,082:INFO:Set up data.
2025-01-13 18:44:30,084:INFO:Set up index.
2025-01-13 18:44:30,233:INFO:Initializing predict_model()
2025-01-13 18:44:30,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76907250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 18:44:30,233:INFO:Checking exceptions
2025-01-13 18:44:30,233:INFO:Preloading libraries
2025-01-13 18:44:30,233:INFO:Set up data.
2025-01-13 18:44:30,235:INFO:Set up index.
2025-01-13 18:44:35,882:INFO:Initializing load_model()
2025-01-13 18:44:35,882:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:36,021:INFO:Initializing load_model()
2025-01-13 18:44:36,021:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:36,220:INFO:Initializing predict_model()
2025-01-13 18:44:36,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F547D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:44:36,221:INFO:Checking exceptions
2025-01-13 18:44:36,222:INFO:Preloading libraries
2025-01-13 18:44:36,222:INFO:Set up data.
2025-01-13 18:44:36,224:INFO:Set up index.
2025-01-13 18:44:36,375:INFO:Initializing predict_model()
2025-01-13 18:44:36,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C6ACB0910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:44:36,375:INFO:Checking exceptions
2025-01-13 18:44:36,375:INFO:Preloading libraries
2025-01-13 18:44:36,375:INFO:Set up data.
2025-01-13 18:44:36,377:INFO:Set up index.
2025-01-13 18:44:38,641:INFO:Initializing load_model()
2025-01-13 18:44:38,642:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:38,777:INFO:Initializing load_model()
2025-01-13 18:44:38,777:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:44:38,968:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:113: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:44:39,000:INFO:Initializing predict_model()
2025-01-13 18:44:39,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E53AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:44:39,000:INFO:Checking exceptions
2025-01-13 18:44:39,000:INFO:Preloading libraries
2025-01-13 18:44:39,001:INFO:Set up data.
2025-01-13 18:44:39,003:INFO:Set up index.
2025-01-13 18:44:39,213:INFO:Initializing predict_model()
2025-01-13 18:44:39,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FC6EAC0>)
2025-01-13 18:44:39,213:INFO:Checking exceptions
2025-01-13 18:44:39,213:INFO:Preloading libraries
2025-01-13 18:44:39,213:INFO:Set up data.
2025-01-13 18:44:39,215:INFO:Set up index.
2025-01-13 18:49:57,530:INFO:Initializing load_model()
2025-01-13 18:49:57,530:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:49:57,944:INFO:Initializing load_model()
2025-01-13 18:49:57,944:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:49:58,459:INFO:Initializing predict_model()
2025-01-13 18:49:58,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F38150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18E09300>)
2025-01-13 18:49:58,460:INFO:Checking exceptions
2025-01-13 18:49:58,460:INFO:Preloading libraries
2025-01-13 18:49:58,460:INFO:Set up data.
2025-01-13 18:49:58,463:INFO:Set up index.
2025-01-13 18:49:58,616:INFO:Initializing predict_model()
2025-01-13 18:49:58,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B0ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFD80>)
2025-01-13 18:49:58,617:INFO:Checking exceptions
2025-01-13 18:49:58,617:INFO:Preloading libraries
2025-01-13 18:49:58,617:INFO:Set up data.
2025-01-13 18:49:58,619:INFO:Set up index.
2025-01-13 18:50:10,128:INFO:Initializing load_model()
2025-01-13 18:50:10,129:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:10,267:INFO:Initializing load_model()
2025-01-13 18:50:10,267:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:10,466:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:114: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:50:10,496:INFO:Initializing predict_model()
2025-01-13 18:50:10,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F322D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47CE0>)
2025-01-13 18:50:10,496:INFO:Checking exceptions
2025-01-13 18:50:10,496:INFO:Preloading libraries
2025-01-13 18:50:10,497:INFO:Set up data.
2025-01-13 18:50:10,499:INFO:Set up index.
2025-01-13 18:50:10,666:INFO:Initializing predict_model()
2025-01-13 18:50:10,666:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BBDB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40680>)
2025-01-13 18:50:10,666:INFO:Checking exceptions
2025-01-13 18:50:10,666:INFO:Preloading libraries
2025-01-13 18:50:10,666:INFO:Set up data.
2025-01-13 18:50:10,668:INFO:Set up index.
2025-01-13 18:50:51,719:INFO:Initializing load_model()
2025-01-13 18:50:51,720:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:51,861:INFO:Initializing load_model()
2025-01-13 18:50:51,861:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:52,061:INFO:Initializing predict_model()
2025-01-13 18:50:52,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18F20E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFA60>)
2025-01-13 18:50:52,062:INFO:Checking exceptions
2025-01-13 18:50:52,062:INFO:Preloading libraries
2025-01-13 18:50:52,062:INFO:Set up data.
2025-01-13 18:50:52,094:INFO:Set up index.
2025-01-13 18:50:52,256:INFO:Initializing predict_model()
2025-01-13 18:50:52,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C67EB2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C0EEA1580>)
2025-01-13 18:50:52,256:INFO:Checking exceptions
2025-01-13 18:50:52,256:INFO:Preloading libraries
2025-01-13 18:50:52,256:INFO:Set up data.
2025-01-13 18:50:52,258:INFO:Set up index.
2025-01-13 18:50:57,041:INFO:Initializing load_model()
2025-01-13 18:50:57,042:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:57,180:INFO:Initializing load_model()
2025-01-13 18:50:57,180:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:50:57,378:INFO:Initializing predict_model()
2025-01-13 18:50:57,379:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE52710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFEC0>)
2025-01-13 18:50:57,379:INFO:Checking exceptions
2025-01-13 18:50:57,379:INFO:Preloading libraries
2025-01-13 18:50:57,379:INFO:Set up data.
2025-01-13 18:50:57,383:INFO:Set up index.
2025-01-13 18:50:57,559:INFO:Initializing predict_model()
2025-01-13 18:50:57,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C68811F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD46160>)
2025-01-13 18:50:57,559:INFO:Checking exceptions
2025-01-13 18:50:57,559:INFO:Preloading libraries
2025-01-13 18:50:57,560:INFO:Set up data.
2025-01-13 18:50:57,561:INFO:Set up index.
2025-01-13 18:51:01,751:INFO:Initializing load_model()
2025-01-13 18:51:01,752:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:01,890:INFO:Initializing load_model()
2025-01-13 18:51:01,890:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:02,087:INFO:Initializing predict_model()
2025-01-13 18:51:02,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0EE22410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:51:02,087:INFO:Checking exceptions
2025-01-13 18:51:02,087:INFO:Preloading libraries
2025-01-13 18:51:02,088:INFO:Set up data.
2025-01-13 18:51:02,090:INFO:Set up index.
2025-01-13 18:51:02,239:INFO:Initializing predict_model()
2025-01-13 18:51:02,239:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB71490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:51:02,239:INFO:Checking exceptions
2025-01-13 18:51:02,239:INFO:Preloading libraries
2025-01-13 18:51:02,239:INFO:Set up data.
2025-01-13 18:51:02,241:INFO:Set up index.
2025-01-13 18:51:03,431:INFO:Initializing load_model()
2025-01-13 18:51:03,431:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:03,568:INFO:Initializing load_model()
2025-01-13 18:51:03,568:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:03,767:INFO:Initializing predict_model()
2025-01-13 18:51:03,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EF8E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47CE0>)
2025-01-13 18:51:03,767:INFO:Checking exceptions
2025-01-13 18:51:03,767:INFO:Preloading libraries
2025-01-13 18:51:03,768:INFO:Set up data.
2025-01-13 18:51:03,770:INFO:Set up index.
2025-01-13 18:51:03,920:INFO:Initializing predict_model()
2025-01-13 18:51:03,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB6EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FD47CE0>)
2025-01-13 18:51:03,920:INFO:Checking exceptions
2025-01-13 18:51:03,920:INFO:Preloading libraries
2025-01-13 18:51:03,921:INFO:Set up data.
2025-01-13 18:51:03,922:INFO:Set up index.
2025-01-13 18:51:04,164:INFO:Initializing load_model()
2025-01-13 18:51:04,165:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:04,314:INFO:Initializing load_model()
2025-01-13 18:51:04,314:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:04,523:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:211: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:51:04,543:INFO:Initializing predict_model()
2025-01-13 18:51:04,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E263D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40220>)
2025-01-13 18:51:04,543:INFO:Checking exceptions
2025-01-13 18:51:04,543:INFO:Preloading libraries
2025-01-13 18:51:04,544:INFO:Set up data.
2025-01-13 18:51:04,546:INFO:Set up index.
2025-01-13 18:51:04,724:INFO:Initializing predict_model()
2025-01-13 18:51:04,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FB6EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2D080>)
2025-01-13 18:51:04,724:INFO:Checking exceptions
2025-01-13 18:51:04,724:INFO:Preloading libraries
2025-01-13 18:51:04,725:INFO:Set up data.
2025-01-13 18:51:04,727:INFO:Set up index.
2025-01-13 18:51:10,998:INFO:Initializing load_model()
2025-01-13 18:51:10,999:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:11,173:INFO:Initializing load_model()
2025-01-13 18:51:11,173:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:11,389:INFO:Initializing predict_model()
2025-01-13 18:51:11,389:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EE5F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 18:51:11,389:INFO:Checking exceptions
2025-01-13 18:51:11,389:INFO:Preloading libraries
2025-01-13 18:51:11,390:INFO:Set up data.
2025-01-13 18:51:11,392:INFO:Set up index.
2025-01-13 18:51:11,576:INFO:Initializing predict_model()
2025-01-13 18:51:11,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C66BBD9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C66C40400>)
2025-01-13 18:51:11,577:INFO:Checking exceptions
2025-01-13 18:51:11,577:INFO:Preloading libraries
2025-01-13 18:51:11,577:INFO:Set up data.
2025-01-13 18:51:11,579:INFO:Set up index.
2025-01-13 18:51:13,922:INFO:Initializing load_model()
2025-01-13 18:51:13,923:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:14,062:INFO:Initializing load_model()
2025-01-13 18:51:14,062:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:14,262:INFO:Initializing predict_model()
2025-01-13 18:51:14,262:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18EF5190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFD80>)
2025-01-13 18:51:14,262:INFO:Checking exceptions
2025-01-13 18:51:14,262:INFO:Preloading libraries
2025-01-13 18:51:14,262:INFO:Set up data.
2025-01-13 18:51:14,264:INFO:Set up index.
2025-01-13 18:51:14,418:INFO:Initializing predict_model()
2025-01-13 18:51:14,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76648FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C697CFEC0>)
2025-01-13 18:51:14,419:INFO:Checking exceptions
2025-01-13 18:51:14,419:INFO:Preloading libraries
2025-01-13 18:51:14,420:INFO:Set up data.
2025-01-13 18:51:14,422:INFO:Set up index.
2025-01-13 18:51:14,663:INFO:Initializing load_model()
2025-01-13 18:51:14,663:INFO:load_model(model_name=diesel_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:14,811:INFO:Initializing load_model()
2025-01-13 18:51:14,811:INFO:load_model(model_name=super95_model, platform=None, authentication=None, verbose=True)
2025-01-13 18:51:15,007:WARNING:C:\Users\user\Documents\Kurs_DS\Projekty\Fuel_prices\app.py:211: FutureWarning:

DataFrame.applymap has been deprecated. Use DataFrame.map instead.


2025-01-13 18:51:15,023:INFO:Initializing predict_model()
2025-01-13 18:51:15,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C18E48D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C18DEFBA0>)
2025-01-13 18:51:15,023:INFO:Checking exceptions
2025-01-13 18:51:15,023:INFO:Preloading libraries
2025-01-13 18:51:15,024:INFO:Set up data.
2025-01-13 18:51:15,025:INFO:Set up index.
2025-01-13 18:51:15,173:INFO:Initializing predict_model()
2025-01-13 18:51:15,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C7FAF6C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['ropa naftowa', 'USD/PLN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C7FE2CB80>)
2025-01-13 18:51:15,174:INFO:Checking exceptions
2025-01-13 18:51:15,174:INFO:Preloading libraries
2025-01-13 18:51:15,174:INFO:Set up data.
2025-01-13 18:51:15,176:INFO:Set up index.
